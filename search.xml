<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>centos 安装 docker</title>
    <url>/2022/08/18/centos%E5%AE%89%E8%A3%85docker/</url>
    <content><![CDATA[<p>docker 是一种开源容器化技术，用于构建和容器化应用程序</p>
<span id="more"></span>

<h1 id="centos-安装-docker"><a href="#centos-安装-docker" class="headerlink" title="centos 安装 docker"></a>centos 安装 docker</h1><h2 id="安装yum-utils"><a href="#安装yum-utils" class="headerlink" title="安装yum-utils"></a>安装yum-utils</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils</span><br></pre></td></tr></table></figure>

<h2 id="设置存储库"><a href="#设置存储库" class="headerlink" title="设置存储库"></a>设置存储库</h2><pre><code>自行选择源
</code></pre>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 官方源</span></span><br><span class="line">yum-config-manager \</span><br><span class="line">--add-repo \</span><br><span class="line">https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">## 阿里云</span></span><br><span class="line">yum-config-manager \</span><br><span class="line">--add-repo \</span><br><span class="line">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>

<h2 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>

<h2 id="启动-docker"><a href="#启动-docker" class="headerlink" title="启动 docker"></a>启动 docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<pre><code>运行 hello-world 验证是否安装成功
</code></pre>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure>



<h2 id="参考官方文档"><a href="#参考官方文档" class="headerlink" title="参考官方文档"></a>参考官方文档</h2><p><a href="https://docs.docker.com/engine/install/centos/">Install Docker Engine on CentOS | Docker Documentation</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Go 实现短链接服务</title>
    <url>/2022/08/18/Go%20%E5%AE%9E%E7%8E%B0%E7%9F%AD%E9%93%BE%E6%8E%A5%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="Go-实现短链接服务"><a href="#Go-实现短链接服务" class="headerlink" title="Go 实现短链接服务"></a>Go 实现短链接服务</h2><blockquote>
<p>我们在推广的时候，经常会碰到链接或者二维码的时候，这时候链接太长，看起来不太友好，生成的二维码也是密密麻麻的，所以会用到短链接服务。</p>
</blockquote>
<span id="more"></span>

<h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h3><ol>
<li><p>直接生成短链接，短链接通过当前时间戳转换<code>Base62</code></p>
</li>
<li><p>将长链接和短链接数据保存到数据库</p>
</li>
<li><p>生成的时候，先查看下链接有没有生成过，如果生成过，用之前生成的短链即可</p>
</li>
<li><p>生成之后，需要写个中间件做预处理，当前url是否为短链，如果是短链，直接重定向到  长链接去。</p>
</li>
<li><p>服务编写好后，<code>Nginx</code>加一段配置 ，针对短链转发到短链接服务。</p>
</li>
</ol>
<h3 id="使用到的技术"><a href="#使用到的技术" class="headerlink" title="使用到的技术"></a>使用到的技术</h3><ul>
<li><p><a href="https://github.com/gin-gonic/gin">gin</a> web框架</p>
</li>
<li><p><a href="https://github.com/jinzhu/gorm">gorm</a> orm框架</p>
</li>
<li><p><a href="https://github.com/spf13/viper">viper </a> 读取配置<a href="https://github.com/catinello/base62">https://github.com/catinello/base62</a></p>
</li>
<li><p><a href="https://github.com/catinello/base62">base62 </a> 生成base62的工具包</p>
</li>
</ul>
<h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><p>生成短链：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">generateShort</span><span class="params">(longUrl <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> short ShortLink</span><br><span class="line">    short.LongUrl = longUrl</span><br><span class="line">    err := DB.Find(&amp;short, &amp;short).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> short.ShortUrl != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> short.ShortUrl</span><br><span class="line">    &#125;</span><br><span class="line">    rand.Seed(time.Now().UnixNano())</span><br><span class="line">    <span class="keyword">var</span> sb strings.Builder</span><br><span class="line">    sb.WriteString(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    sb.WriteString(S_LINK)</span><br><span class="line">    sb.WriteString(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    timestamp := time.Now().UnixNano() / <span class="number">1e6</span></span><br><span class="line">    sb.WriteString(base62.Encode(<span class="type">int</span>(timestamp)))</span><br><span class="line">    shortUrl := sb.String()</span><br><span class="line">    shortInfo := ShortLink&#123;</span><br><span class="line">        ShortUrl: shortUrl,</span><br><span class="line">        LongUrl:  longUrl,</span><br><span class="line">    &#125;</span><br><span class="line">    DB.Create(&amp;shortInfo)</span><br><span class="line">    <span class="keyword">return</span> shortUrl</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>请求预处理重定向：</p>
<p><code>router.Use(Redirect(), gin.Recovery())</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Redirect</span><span class="params">()</span></span> gin.HandlerFunc &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">        url := context.Request.URL</span><br><span class="line">        <span class="keyword">var</span> short ShortLink</span><br><span class="line">        short.ShortUrl = url.String()</span><br><span class="line">        err := DB.Find(&amp;short, &amp;short).Error</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(err)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> short.LongUrl != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">            context.Redirect(http.StatusMovedPermanently, short.LongUrl)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Nginx 配置:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> <span class="string">&quot;~/slink/([a-z]|[A-Z]|[0-9])&#123;7,8&#125;$&quot;</span> &#123;</span><br><span class="line">¦   <span class="attribute">proxy_pass</span> http://127.0.0.1:7788;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="section">location</span> /slink/short &#123;</span><br><span class="line">¦   <span class="attribute">proxy_pass</span> http://127.0.0.1:7788/short;</span><br><span class="line">¦   <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">¦   <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">¦   <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">¦   <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">¦   <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">¦   <span class="attribute">client_max_body_size</span> <span class="number">30m</span>;</span><br><span class="line">¦   <span class="attribute">client_body_buffer_size</span> <span class="number">256k</span>;</span><br><span class="line">¦   <span class="attribute">proxy_connect_timeout</span>   <span class="number">90</span>; </span><br><span class="line">¦   <span class="attribute">proxy_send_timeout</span>      <span class="number">180</span>;</span><br><span class="line">¦   <span class="attribute">proxy_read_timeout</span>      <span class="number">180</span>;</span><br><span class="line">¦   <span class="attribute">proxy_buffer_size</span>       <span class="number">256k</span>;</span><br><span class="line">¦   <span class="attribute">proxy_buffers</span>           <span class="number">16</span> <span class="number">256k</span>;</span><br><span class="line">¦   <span class="attribute">proxy_busy_buffers_size</span> <span class="number">1024k</span>;</span><br><span class="line">¦   <span class="attribute">proxy_temp_file_write_size</span>      <span class="number">1024k</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://s1.ax1x.com/2020/10/23/BAF83Q.png" alt="BAF83Q.png"></p>
<p><code>data.short</code> 就是短链接啦，访问试一下吧！</p>
<p>项目地址：<a href="https://github.com/Fxuing/short-link">https://github.com/Fxuing/short-link</a></p>
]]></content>
      <categories>
        <category>go</category>
      </categories>
      <tags>
        <tag>短链接</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 搭建 MinIO</title>
    <url>/2022/08/18/docker%20%E6%90%AD%E5%BB%BA%20MinIO/</url>
    <content><![CDATA[<h2 id="docker-搭建-MinIO"><a href="#docker-搭建-MinIO" class="headerlink" title="docker 搭建 MinIO"></a>docker 搭建 MinIO</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote>
<p>MinIO 是一个基于Apache License v2.0开源协议的对象存储服务。它兼容亚马逊S3云存储服务接口，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器&#x2F;虚拟机镜像等，而一个对象文件可以是任意大小，从几kb到最大5T不等。</p>
</blockquote>
<span id="more"></span>

<h3 id="docker-compose-方式"><a href="#docker-compose-方式" class="headerlink" title="docker-compose 方式"></a>docker-compose 方式</h3><p>docker-compost.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">minio:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">minio/minio</span></span><br><span class="line">  <span class="attr">container_name:</span> <span class="string">minio</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">9000</span><span class="string">:9000</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/mut/data:/storage</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/mnt/config:/root/.minio</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">    <span class="attr">MINIO_ASSESS_KEY:</span> <span class="string">minio</span></span><br><span class="line">    <span class="attr">MINIO_SECRET_KEY:</span> <span class="string">12345678a</span></span><br><span class="line">  <span class="attr">command:</span> <span class="string">server</span> <span class="string">start</span> <span class="string">object</span> <span class="string">storage</span> <span class="string">server</span></span><br></pre></td></tr></table></figure>

<p>需要注意的几点：</p>
<ol>
<li><p>volumes  的 storage 和 command 的storage 一直，映射到容器里的目录 可以不是 storage</p>
</li>
<li><p>MINIO_ASSESS_KEY 是登录页面的账号，MINIO_SECRET_KEY 是登录页面的密码</p>
</li>
<li><p>如果访问不到，检查安全组是否打开了端口</p>
</li>
</ol>
<h3 id="nginx-配置修改"><a href="#nginx-配置修改" class="headerlink" title="nginx 配置修改"></a>nginx 配置修改</h3><p>通过上面的步骤后，已经可以使用 ip:port 访问到了，有域名的同学，可以配置下 nginx 转发</p>
<p>conf.conf</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> /minio &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://172.19.0.6:9000/minio;</span><br><span class="line">    <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">30m</span>;</span><br><span class="line">    <span class="attribute">client_body_buffer_size</span> <span class="number">256k</span>;</span><br><span class="line">    <span class="attribute">proxy_connect_timeout</span>   <span class="number">90</span>; </span><br><span class="line">    <span class="attribute">proxy_send_timeout</span>      <span class="number">180</span>;</span><br><span class="line">    <span class="attribute">proxy_read_timeout</span>      <span class="number">180</span>;</span><br><span class="line">    <span class="attribute">proxy_buffer_size</span>       <span class="number">256k</span>;</span><br><span class="line">    <span class="attribute">proxy_buffers</span>           <span class="number">16</span> <span class="number">256k</span>;</span><br><span class="line">    <span class="attribute">proxy_busy_buffers_size</span> <span class="number">1024k</span>;</span><br><span class="line">    <span class="attribute">proxy_temp_file_write_size</span>      <span class="number">1024k</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>加了上面这个配置后，可以通过 域名&#x2F;minio 访问到了，但是还有个小问题，就是分享文件的时候会有问题，此时再加上一段</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> /share &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://172.19.0.6:9000/share;</span><br><span class="line">    <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">30m</span>;</span><br><span class="line">    <span class="attribute">client_body_buffer_size</span> <span class="number">256k</span>;</span><br><span class="line">    <span class="attribute">proxy_connect_timeout</span>   <span class="number">90</span>; </span><br><span class="line">    <span class="attribute">proxy_send_timeout</span>      <span class="number">180</span>;</span><br><span class="line">    <span class="attribute">proxy_read_timeout</span>      <span class="number">180</span>;</span><br><span class="line">    <span class="attribute">proxy_buffer_size</span>       <span class="number">256k</span>;</span><br><span class="line">    <span class="attribute">proxy_buffers</span>           <span class="number">16</span> <span class="number">256k</span>;</span><br><span class="line">    <span class="attribute">proxy_busy_buffers_size</span> <span class="number">1024k</span>;</span><br><span class="line">    <span class="attribute">proxy_temp_file_write_size</span>      <span class="number">1024k</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p> share 是 bucket name</p>
<p> tips: 通过nginx转发的话，可以关掉安全组的端口了 ：）</p>
</blockquote>
<p>可惜带宽不够，不然就可以当做个人网盘用了，哈哈哈哈， 当然了，MinIO还是非常强大的，提供了好几种 SDK, 具体用法参考官网了： <a href="https://docs.min.io/cn/minio-quickstart-guide.html">MinIO Docs | MinIO快速入门指南</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>MinIO</tag>
      </tags>
  </entry>
  <entry>
    <title>docker-compose安装与使用</title>
    <url>/2022/08/18/docker-compose%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="docker-compose安装与使用"><a href="#docker-compose安装与使用" class="headerlink" title="docker-compose安装与使用"></a>docker-compose安装与使用</h1><pre><code>Compose是用于定义和运行多容器Docker应用程序的工具。通过Compose，您可以使用YAML文件来配置应用程序的服务。然后，使用一个命令，就可以从配置中创建并启动所有服务.
</code></pre>
<span id="more"></span>

<h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><p>肯定是需要安装docker了。。。</p>
<h2 id="docker-compose-安装"><a href="#docker-compose-安装" class="headerlink" title="docker-compose 安装"></a>docker-compose 安装</h2><ol>
<li>运行以下命令以下载Docker Compose的当前稳定版本:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.26.0/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>将可执行权限应用于 docker-compose 二进制文件</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>测试安装</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>

<h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><ol>
<li>编写 docker-compose.yml 文件，如下所示：（这是一个网易云音乐客户端无版权代理到其他平台的小工具，推荐！）</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"> <span class="attr">1 version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"> <span class="number">2</span> </span><br><span class="line"> <span class="attr">3 services:</span></span><br><span class="line"> <span class="attr">4   unblockneteasemusic:</span></span><br><span class="line"> <span class="attr">5     image:</span> <span class="string">nondanee/unblockneteasemusic</span></span><br><span class="line"> <span class="attr">6     container_name:</span> <span class="string">neteasemusic</span></span><br><span class="line"> <span class="attr">7     restart:</span> <span class="string">always</span></span><br><span class="line"> <span class="attr">8     environment:</span></span><br><span class="line"> <span class="attr">9       NODE_ENV:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">10     command:</span> <span class="string">-p</span> <span class="number">2233</span></span><br><span class="line"><span class="attr">11     ports:</span></span><br><span class="line"><span class="number">12</span>       <span class="bullet">-</span> <span class="number">2233</span><span class="string">:2233</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>docker-compose up -d</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>go-Map与工厂模式、Set实现</title>
    <url>/2022/08/18/go-Map%E4%B8%8E%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E3%80%81Set%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<p><strong>Map与工厂模式</strong></p>
<ul>
<li>map的value可以是一个方法<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestMapWithFunValue</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	m := <span class="keyword">map</span>[<span class="type">int</span>]<span class="function"><span class="keyword">func</span><span class="params">(in <span class="type">int</span>)</span></span> <span class="type">int</span>&#123;&#125;</span><br><span class="line">	m[<span class="number">1</span>] = <span class="function"><span class="keyword">func</span><span class="params">(in <span class="type">int</span>)</span></span> <span class="type">int</span> &#123; <span class="keyword">return</span> in &#125;</span><br><span class="line">	m[<span class="number">2</span>] = <span class="function"><span class="keyword">func</span><span class="params">(in <span class="type">int</span>)</span></span> <span class="type">int</span> &#123; <span class="keyword">return</span> in * in &#125;</span><br><span class="line">	m[<span class="number">3</span>] = <span class="function"><span class="keyword">func</span><span class="params">(in <span class="type">int</span>)</span></span> <span class="type">int</span> &#123; <span class="keyword">return</span> in * in * in &#125;</span><br><span class="line"></span><br><span class="line">	t.Log(m[<span class="number">1</span>](<span class="number">3</span>), m[<span class="number">2</span>](<span class="number">3</span>), m[<span class="number">3</span>](<span class="number">3</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>与Go的 Dock type 接口方式一，可以方便的实现单一方法的工厂模式<span id="more"></span></li>
</ul>
<p><strong>实现Set</strong></p>
<ul>
<li>go的内置集合中没有Set实现，可以map[type]bool</li>
</ul>
<ol>
<li>元素的唯一性</li>
<li>基本操作（添加元素，判断是否存在，删除元素，元素个数)</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestMapForSet</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	mySet := <span class="keyword">map</span>[<span class="type">int</span>]<span class="type">bool</span>&#123;&#125;</span><br><span class="line">	<span class="comment">// 添加</span></span><br><span class="line">	mySet[<span class="number">1</span>] = <span class="literal">true</span></span><br><span class="line">	<span class="comment">// 判断元素是否存在</span></span><br><span class="line">	<span class="keyword">if</span> mySet[<span class="number">1</span>] &#123;</span><br><span class="line">		t.Log(<span class="string">&quot;key 1 存在&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 元素个数</span></span><br><span class="line">	t.Log(<span class="built_in">len</span>(mySet))</span><br><span class="line">	<span class="comment">// 删除元素</span></span><br><span class="line">	<span class="built_in">delete</span>(mySet,<span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>go-数据类型</title>
    <url>/2022/08/18/go-datatype/</url>
    <content><![CDATA[<p><strong>基本数据类型</strong></p>
<ol>
<li>bool</li>
<li>string</li>
<li>int int8 int16 int 32 int 64</li>
<li>uint uint8 uint16 uint32 uint64 uintptr</li>
<li>byte</li>
<li>rune</li>
<li>float32 float64</li>
<li>complex64 complex128</li>
</ol>
<p><strong>类型转化和其他主要编程语言的差异</strong></p>
<ol>
<li>Go语言不允许隐式类型转换</li>
<li>别和原有类型也不能进行隐式转换<span id="more"></span>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> type_test</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;testing&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MyInt <span class="type">int64</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestImplicit</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> a <span class="type">int32</span> = <span class="number">1</span></span><br><span class="line">	<span class="keyword">var</span> b <span class="type">int64</span></span><br><span class="line">	b = <span class="type">int64</span>(a)</span><br><span class="line">	<span class="keyword">var</span> c MyInt</span><br><span class="line">	c = MyInt(b)</span><br><span class="line">	t.Log(b,c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>类型的预定义值</strong></p>
<ol>
<li>math.MaxInt64</li>
<li>math.MaxFloat64</li>
<li>math.MaxUint32</li>
</ol>
<p><strong>指针类型</strong></p>
<ol>
<li>不支持指针运算</li>
<li>string是值类型，其默认的初始化为空字符串，而不是nil</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestPoint</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	a := <span class="number">1</span></span><br><span class="line">	aPtr := &amp;a</span><br><span class="line">	<span class="comment">//aPtr++</span></span><br><span class="line">	t.Log(a, aPtr)</span><br><span class="line">	t.Logf(<span class="string">&quot;%T %T&quot;</span>, a, aPtr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestString</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> s <span class="type">string</span></span><br><span class="line">	t.Log(<span class="string">&quot;*&quot;</span> + s + <span class="string">&quot;*&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> s == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">		t.Log(<span class="built_in">len</span>(s))</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>go-Map声明、访问、遍历</title>
    <url>/2022/08/18/go-Map%E5%A3%B0%E6%98%8E%E3%80%81%E8%AE%BF%E9%97%AE%E3%80%81%E9%81%8D%E5%8E%86/</url>
    <content><![CDATA[<p><strong>声明方式</strong></p>
<blockquote>
<p>map[key类型]value类型{},如<br>map[string]string{}</p>
</blockquote>
<p><strong>获取key</strong></p>
<blockquote>
<p>在访问的key不存在时，仍会然回零值，不能通过返回nil来判断元素是否存在</p>
</blockquote>
<span id="more"></span>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGetKey</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	m1 := <span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>&#123;&#125;</span><br><span class="line">	t.Log(m1[<span class="number">100</span>])</span><br><span class="line"></span><br><span class="line">	m1[<span class="number">2</span>] = <span class="number">0</span></span><br><span class="line">	t.Log(m1[<span class="number">2</span>])</span><br><span class="line">	m1[<span class="number">20</span>] = <span class="number">2000</span></span><br><span class="line">	<span class="keyword">if</span> value,exist := m1[<span class="number">20</span>]; exist&#123;</span><br><span class="line">		t.Log(<span class="string">&quot;key 存在&quot;</span>,value)</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		t.Log(<span class="string">&quot;key 不存在&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>map遍历</strong></p>
<ul>
<li>遍历也是使用range,与数组遍历一样</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestTravelMap</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	m1 := <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;小张&quot;</span>, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;123456&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> k, v := <span class="keyword">range</span> m1 &#123;</span><br><span class="line">		t.Logf(<span class="string">&quot;key is %s,value is %s&quot;</span>, k, v)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>go-Hello World</title>
    <url>/2022/08/18/go-hello-world/</url>
    <content><![CDATA[<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main <span class="comment">// 包，声明代码所在的木块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span> <span class="comment">//引入代码依赖</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123; <span class="comment">// 功能实现</span></span><br><span class="line">	fmt.Println(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<blockquote>
<p>应用程序入口</p>
</blockquote>
<ul>
<li>必须是main包</li>
<li>必须是main方法</li>
<li>文件名不一定是main.go</li>
</ul>
<p> <strong>与其他语言的差异</strong></p>
<blockquote>
<p>退出返回值</p>
</blockquote>
<ul>
<li>go 中main函数不支持任何返回值</li>
<li>通过 os.exit来返回状态</li>
</ul>
<blockquote>
<p>获取命令行参数</p>
</blockquote>
<ul>
<li>main函数不支持传入参数</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func main(arg [] string)</span><br></pre></td></tr></table></figure>

<ul>
<li>在程序中直接通过 os.Args 获取命令行参数</li>
</ul>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>go-函数</title>
    <url>/2022/08/18/go-%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<ol>
<li>可以有多个返回值</li>
<li>所有参数都是值传递</li>
<li>函数可以作为变量的值</li>
<li>函数可以作为参数和返回值<span id="more"></span>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> _func</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;math/rand&quot;</span></span><br><span class="line">	<span class="string">&quot;testing&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">returnMultiValues</span><span class="params">()</span></span> (<span class="type">int</span>, <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">return</span> rand.Intn(<span class="number">10</span>), rand.Intn(<span class="number">20</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">timeSpent</span><span class="params">(inner <span class="keyword">func</span>(op <span class="type">int</span>)</span></span> <span class="type">int</span>) <span class="function"><span class="keyword">func</span><span class="params">(op <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(n <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		start := time.Now()</span><br><span class="line">		ret := inner(n)</span><br><span class="line"></span><br><span class="line">		fmt.Println(<span class="string">&quot;time spent:&quot;</span>, time.Since(start).Seconds())</span><br><span class="line">		<span class="keyword">return</span> ret</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">slowFun</span><span class="params">(op <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	time.Sleep(time.Second* <span class="number">1</span>)</span><br><span class="line">	<span class="keyword">return</span> op</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestFn</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	a, b := returnMultiValues()</span><br><span class="line">	t.Log(a, b)</span><br><span class="line">	tsSF := timeSpent(slowFun)</span><br><span class="line">	t.Log(tsSF(<span class="number">10</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>go-字符串</title>
    <url>/2022/08/18/go-%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<p><em><strong>与其他语言的差异</strong></em></p>
<ol>
<li>string 是数据类型，不是引用或指针类型</li>
<li>string是只读的byte sclice,len函数可以返回它包含的byte长度</li>
<li>string的byte数可以存放任何数据<span id="more"></span></li>
</ol>
<p><strong>Unicode UTF-8</strong></p>
<ol>
<li>Unicode 是一种字符集</li>
<li>UTF-8是unicode 的存储实现</li>
</ol>
<p>常用转换</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestStringConv</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 整型转string</span></span><br><span class="line">	s := strconv.Itoa(<span class="number">10</span>)</span><br><span class="line">	t.Logf(<span class="string">&quot;s type is %[1]T value is %[1]s&quot;</span>, s)</span><br><span class="line">	<span class="comment">// 字符串转整型</span></span><br><span class="line">	val,_ :=strconv.Atoi(<span class="string">&quot;10&quot;</span>)</span><br><span class="line">	t.Log(val+<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">	t.Log(Str2DEC(<span class="string">&quot;1000&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>go-数组和切片</title>
    <url>/2022/08/18/go-%E6%95%B0%E7%BB%84%E5%92%8C%E5%88%87%E7%89%87/</url>
    <content><![CDATA[<p><strong>数组声明和遍历</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestArrayInit</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> arr [<span class="number">3</span>]<span class="type">int</span></span><br><span class="line">	arr1 := [<span class="number">4</span>]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">	arr2 := [...]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">	t.Log(arr[<span class="number">0</span>], arr[<span class="number">1</span>])</span><br><span class="line">	t.Log(arr1,arr2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestArrayTravel</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	arr3 := [...]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">	<span class="keyword">for</span> i,e := <span class="keyword">range</span> arr3&#123;</span><br><span class="line">		t.Log(i,e)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><strong>数组截取</strong></p>
<ul>
<li>a[开始索引(包含),结束索引(不包含)]</li>
<li>a[3:],a[:3]</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestArraySection</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	arr3 := [...]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">	arr3_sec := arr3[<span class="number">3</span>:]</span><br><span class="line">	t.Log(arr3_sec)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>切片slice</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSliceInit</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> slice []<span class="type">int</span></span><br><span class="line">	t.Log(<span class="built_in">len</span>(slice), <span class="built_in">cap</span>(slice))</span><br><span class="line">	slice = <span class="built_in">append</span>(slice, <span class="number">1</span>)</span><br><span class="line">	t.Log(<span class="built_in">len</span>(slice), <span class="built_in">cap</span>(slice))</span><br><span class="line"></span><br><span class="line">	s1 := []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">	t.Log(<span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line"></span><br><span class="line">	s2 := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">	t.Log(<span class="built_in">len</span>(s2), <span class="built_in">cap</span>(s2))</span><br><span class="line">	t.Log(s2[<span class="number">0</span>], s2[<span class="number">1</span>], s2[<span class="number">2</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>切片扩容</strong></p>
<blockquote>
<p>容量会 *2 扩展</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSliceGrowing</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> s []<span class="type">int</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">		s = <span class="built_in">append</span>(s, i)</span><br><span class="line">		t.Log(<span class="built_in">len</span>(s),<span class="built_in">cap</span>(s))</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>切片共享存储结构</strong></p>
<blockquote>
<p>修改一个值会影响到其他的值</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSliceShareMemory</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	year := []<span class="type">string</span>&#123;</span><br><span class="line">		<span class="string">&quot;一月&quot;</span>, <span class="string">&quot;二月&quot;</span>, <span class="string">&quot;三月&quot;</span>, <span class="string">&quot;四月&quot;</span>,</span><br><span class="line">		<span class="string">&quot;五月&quot;</span>, <span class="string">&quot;六月&quot;</span>, <span class="string">&quot;七月&quot;</span>, <span class="string">&quot;八月&quot;</span>,</span><br><span class="line">		<span class="string">&quot;九月&quot;</span>, <span class="string">&quot;十月&quot;</span>, <span class="string">&quot;十一月&quot;</span>, <span class="string">&quot;十二月&quot;</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	Q2 := year[<span class="number">3</span>:<span class="number">6</span>]</span><br><span class="line">	t.Log(Q2, <span class="built_in">len</span>(Q2), <span class="built_in">cap</span>(Q2))</span><br><span class="line">	summer := year[<span class="number">5</span>:<span class="number">8</span>]</span><br><span class="line">	t.Log(summer,<span class="built_in">len</span>(summer),<span class="built_in">cap</span>(summer))</span><br><span class="line">	summer[<span class="number">0</span>] = <span class="string">&quot;Unknow&quot;</span></span><br><span class="line">	t.Log(Q2)</span><br><span class="line">	t.Log(year)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>数组和切片的区别</strong></p>
<ol>
<li>容量是否可伸缩</li>
<li>是否可以进行比较</li>
</ol>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>go-并发</title>
    <url>/2022/08/18/go-%E5%B9%B6%E5%8F%91/</url>
    <content><![CDATA[<p><strong>协程机制</strong></p>
<blockquote>
<p>定义方式 使用 go 关键字</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestMut</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义协程</span></span><br><span class="line">    <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="comment">// code </span></span><br><span class="line">    &#125;()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<p><strong>互斥锁</strong></p>
<blockquote>
<p>使用 sync.Mutex 包</p>
</blockquote>
<ul>
<li>Unlock() 释放锁，建议在defer中使用，防止异常未释放锁</li>
<li>Lock() 加锁，操作之前加锁</li>
</ul>
<p><strong>线程等待</strong></p>
<blockquote>
<p>使用 sync.WaitGroup，类似 java 的 CountDownLatch</p>
</blockquote>
<ul>
<li>启用协程 使用 add(1)</li>
<li>协程结束后使用 Done()</li>
<li>主线程使用 Wait()</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestG</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> waitGroup sync.WaitGroup</span><br><span class="line">	<span class="keyword">var</span> mut sync.Mutex</span><br><span class="line">	<span class="keyword">var</span> counter <span class="type">int</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5000</span>; i++ &#123;</span><br><span class="line">		waitGroup.Add(<span class="number">1</span>)</span><br><span class="line">		<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(i <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">			<span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">				mut.Unlock()</span><br><span class="line">			&#125;()</span><br><span class="line">			mut.Lock()</span><br><span class="line">			counter++</span><br><span class="line">			waitGroup.Done()</span><br><span class="line">		&#125;(i)</span><br><span class="line">	&#125;</span><br><span class="line">	waitGroup.Wait()</span><br><span class="line">	t.Log(counter)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="CSP并发机制"><a href="#CSP并发机制" class="headerlink" title="CSP并发机制"></a>CSP并发机制</h3><p><strong>channel</strong></p>
<blockquote>
<p>两种机制，1. make(chan string), 2. make(chan string, 5)</p>
</blockquote>
<ul>
<li>机制1：通讯双方都必须存在，如果一方不存在，则另一方会阻塞。</li>
<li>机制2：BufferChannel，发送和接收双方松耦合，容量未满的情况下，不会阻塞</li>
</ul>
<p>异步返回信息:</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">service</span><span class="params">()</span></span> <span class="type">string</span> &#123;</span><br><span class="line">	<span class="comment">//time.Sleep(time.Millisecond * 50)</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;执行业务操作中&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AsyncService</span><span class="params">()</span></span> <span class="keyword">chan</span> <span class="type">string</span> &#123;</span><br><span class="line">	retCh := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">string</span>, <span class="number">5</span>)</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		ret := service()</span><br><span class="line">		retCh &lt;- ret</span><br><span class="line">	&#125;()</span><br><span class="line">	<span class="keyword">return</span> retCh</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ohterTask</span><span class="params">()</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;执行其他任务开始。&quot;</span>)</span><br><span class="line">	<span class="comment">//time.Sleep(time.Millisecond * 100)</span></span><br><span class="line">	fmt.Println(<span class="string">&quot;执行其他任务结束。&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAsynService</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	retCh := AsyncService()</span><br><span class="line">	ohterTask()</span><br><span class="line">	fmt.Println(&lt;-retCh)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>select 多路复用</strong></p>
<blockquote>
<p>与 switch 结构类似，当有channel 未阻塞时，执行case 所定义的部分，与case 定义顺序无关；可用 &lt;- time.After 实现超时，当After未达到时间的时候，After会阻塞，当达到时间的时候，After不会阻塞。</p>
</blockquote>
<ol>
<li><p>结构定义示例：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span>&#123;</span><br><span class="line">    <span class="keyword">case</span> ret:= &lt;- xxx():</span><br><span class="line">        <span class="comment">// code</span></span><br><span class="line">    <span class="keyword">case</span> ret:= &lt;- xxx():</span><br><span class="line">        <span class="comment">// code </span></span><br><span class="line">    <span class="keyword">case</span> &lt;- time.After(time.Second *<span class="number">3</span>)</span><br><span class="line">        <span class="comment">// time out code</span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="comment">// default code </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>示例</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">timeout</span><span class="params">()</span></span> <span class="type">string</span> &#123;</span><br><span class="line">	time.Sleep(time.Second * <span class="number">3</span>)</span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;userInfo=======&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">userInfo</span><span class="params">()</span></span> <span class="keyword">chan</span> <span class="type">string</span> &#123;</span><br><span class="line">	userCh := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">string</span>)</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		ret := timeout()</span><br><span class="line">		userCh &lt;- ret</span><br><span class="line">	&#125;()</span><br><span class="line">	<span class="keyword">return</span> userCh</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addressInfo</span><span class="params">()</span></span> <span class="keyword">chan</span> <span class="type">string</span> &#123;</span><br><span class="line">	addCh := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">string</span>)</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		ret := <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="type">string</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;address=======&quot;</span></span><br><span class="line">		&#125;</span><br><span class="line">		addCh &lt;- ret()</span><br><span class="line">	&#125;()</span><br><span class="line">	<span class="keyword">return</span> addCh</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSel</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">select</span> &#123;</span><br><span class="line">	<span class="keyword">case</span> ret := &lt;-userInfo():</span><br><span class="line">		t.Log(ret)</span><br><span class="line">	<span class="comment">//case ret := &lt;- addressInfo():</span></span><br><span class="line">	<span class="comment">//	t.Log(ret)</span></span><br><span class="line">	<span class="keyword">case</span> &lt;-time.After(time.Second):</span><br><span class="line">		t.Error(<span class="string">&quot;time out&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>channel 的广播和关闭</strong></p>
<blockquote>
<p>定义两个 协程，一个往channel放数据，一个往channel取数据，channel放完后 close(channel)，获取的一方 判断时候正常获取。</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">provider</span><span class="params">(ch <span class="keyword">chan</span> <span class="type">int</span>, wg *sync.WaitGroup)</span></span> &#123;</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">200</span>; i++ &#123;</span><br><span class="line">			ch &lt;- i</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">close</span>(ch)</span><br><span class="line">		wg.Done()</span><br><span class="line">	&#125;()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">receiver</span><span class="params">(ch <span class="keyword">chan</span> <span class="type">int</span>, wg *sync.WaitGroup)</span></span> &#123;</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		<span class="keyword">for</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> data,ok := &lt;- ch; ok&#123;</span><br><span class="line">				fmt.Print(data,<span class="string">&quot; &quot;</span>)</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		wg.Done()</span><br><span class="line">	&#125;()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestChClose</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line">	ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>)</span><br><span class="line">	wg.Add(<span class="number">1</span>)</span><br><span class="line">	provider(ch,&amp;wg)</span><br><span class="line">	wg.Add(<span class="number">1</span>)</span><br><span class="line">	receiver(ch,&amp;wg)</span><br><span class="line">	wg.Add(<span class="number">1</span>)</span><br><span class="line">	receiver(ch,&amp;wg)</span><br><span class="line">	wg.Wait()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>任务取消</strong></p>
<ul>
<li><strong>context</strong><br>&#x2F;&#x2F; TODO</li>
</ul>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>go-条件和循环</title>
    <url>/2022/08/18/go-%E6%9D%A1%E4%BB%B6%E5%92%8C%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<p><strong>循环</strong></p>
<ul>
<li>只有一个 for 关键字</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// while循环</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestWhileLoop</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	n:=<span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> n&lt;<span class="number">5</span>  &#123;</span><br><span class="line">		t.Log(n)</span><br><span class="line">		n++</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>条件</strong></p>
<span id="more"></span>
<ul>
<li>if 条件</li>
</ul>
<ol>
<li>condition 表达式必须布尔值</li>
<li>支持变量赋值：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if var declaration; condition&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
例：</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestIf</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> a:=<span class="number">1</span>==<span class="number">1</span>; a&#123;</span><br><span class="line">		t.Log(<span class="string">&quot;1==1&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>switch条件</li>
</ul>
<ol>
<li>条件表达式不限制为常量或者整数</li>
<li>单个case中，可以出现多个结果选项，使用逗号分割</li>
<li>于C ，java等规则相反，Go语言不需要使用break来明确退出一个case</li>
<li>可以不设定switch之后的条件表达式，在这种情况下，整个switch结构与多个if…else…的逻辑作用等同</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSwitchMultiCase</span><span class="params">(t *testing.T)</span></span>  &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">		<span class="keyword">switch</span> i &#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">0</span>, <span class="number">2</span>:</span><br><span class="line">			t.Log(<span class="string">&quot;Even&quot;</span>)</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>, <span class="number">3</span>:</span><br><span class="line">			t.Log(<span class="string">&quot;Odd&quot;</span>)</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			t.Log(<span class="string">&quot;it is not 0-3&quot;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSwitchCaseCondition</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">		<span class="keyword">switch</span> &#123;</span><br><span class="line">		<span class="keyword">case</span> i%<span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">			t.Log(<span class="string">&quot;Even&quot;</span>)</span><br><span class="line">		<span class="keyword">case</span> i%<span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">			t.Log(<span class="string">&quot;Odd&quot;</span>)</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			t.Log(<span class="string">&quot;unknown&quot;</span>)</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>go访问剪贴板</title>
    <url>/2022/08/18/go%E8%AE%BF%E9%97%AE%E5%89%AA%E8%B4%B4%E6%9D%BF/</url>
    <content><![CDATA[<h1 id="go访问剪贴板"><a href="#go访问剪贴板" class="headerlink" title="go访问剪贴板"></a>go访问剪贴板</h1><p>访问剪贴板的库：github.com&#x2F;atotto&#x2F;clipboard，操作非常简单</p>
<span id="more"></span>

<p>使用 clipboard.WriteAll() 写入到剪贴板</p>
<p>使用 clipboard.ReadAll() 读取剪贴板内容</p>
<p>示例：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;github.com/atotto/clipboard&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 写入</span></span><br><span class="line">    clipboard.WriteAll(<span class="string">`写入到剪贴板`</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取</span></span><br><span class="line">    content, err := clipboard.ReadAll()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">println</span>(content)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>go-运算符</title>
    <url>/2022/08/18/go-%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<ul>
<li>Go 语言没有前置的 ++ – 如： ++1,–1</li>
<li>用 &#x3D;&#x3D; 比较数组</li>
</ul>
<ol>
<li>相同维度数组且含有相同个数元素的数组才可以比较</li>
<li>每个元都有相同的才相等<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestCompareArray</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	a := [...]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">	<span class="comment">//b := [...]int&#123;1, 2, 3, 4, 5&#125;</span></span><br><span class="line">	c := [...]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">	d := [...]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>&#125;</span><br><span class="line">	<span class="comment">//t.Log(a == b)</span></span><br><span class="line">	t.Log(a == c,a==d)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span></li>
</ol>
<ul>
<li>位运算符</li>
</ul>
<blockquote>
<p>&amp;^ 按位清零，对于两个操作数来说，只要是右边位数为1，无论左边操作位数是0还是1，都会把左边位数清零，如果右边位数为0，那左边原来是什么就是什么</p>
</blockquote>
<p>1 &amp;^ 0 – 1</p>
<p>1 &amp;^1 –0</p>
<p>0 &amp;^1 –0</p>
<p>0 &amp;^ 0 –0</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	Readable = <span class="number">1</span> &lt;&lt; <span class="literal">iota</span> <span class="comment">// 1 &lt;&lt; 0 = 1</span></span><br><span class="line">	Writable			<span class="comment">// 1 &lt;&lt; 1 = 2</span></span><br><span class="line">	Executable			<span class="comment">// 1 &lt;&lt; 2 = 4</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestBitClean</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	a := <span class="number">7</span> <span class="comment">// 0111</span></span><br><span class="line">	a = a&amp;^ Readable</span><br><span class="line">	t.Log(a&amp;Readable == Readable, a&amp;Writable == Writable, a&amp;Executable == Executable)</span><br><span class="line">	t.Log(a &amp;^ Readable)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>hexo博客框架-安装</title>
    <url>/2022/08/18/hexo%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6-%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<pre><code>hexo 是一个快速、简洁且高效的博客框架。hexo使用Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页.
</code></pre>
<span id="more"></span>

<h2 id="方式一：-参考官方文档"><a href="#方式一：-参考官方文档" class="headerlink" title="方式一： 参考官方文档"></a>方式一： 参考官方文档</h2><ul>
<li><p>安装前提</p>
<blockquote>
<ol>
<li>node.js &gt; 8.10,建议10.0+版本</li>
<li>Git</li>
</ol>
</blockquote>
</li>
<li><p>安装 hexo</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<ul>
<li>初始化 hexo</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ hexo install</span><br></pre></td></tr></table></figure>

<ul>
<li>启动 hexo</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>访问 ip:4000即可看到</p>
<p><img src="https://user-gold-cdn.xitu.io/2020/6/19/172cbad2f1f7a4af?w=1885&h=988&f=png&s=530336" alt="UTOOLS1592555022132.png"></p>
<h2 id="方式二：docker部署"><a href="#方式二：docker部署" class="headerlink" title="方式二：docker部署"></a>方式二：docker部署</h2><ol>
<li>编写 docker-compose.yml</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">24   blog:</span></span><br><span class="line"><span class="attr">25     image:</span> <span class="string">zeusro/hexo</span></span><br><span class="line"><span class="attr">26     container_name:</span> <span class="string">blog</span></span><br><span class="line"><span class="attr">27     restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">28     ports:</span></span><br><span class="line"><span class="number">29</span>       <span class="bullet">-</span> <span class="number">4000</span><span class="string">:4000</span></span><br></pre></td></tr></table></figure>

<p>执行<code>docker-compose up -d</code>，可以访问到了，下一步目录挂载</p>
<ol start="2">
<li>挂载目录</li>
</ol>
<ul>
<li><p>&#x2F;data&#x2F;blog 是我存放的目录，我是整个目录挂载，可根据需求，自行变更</p>
<p> 执行 <code>docker exec blog ls /</code> 可以看到，需要挂载的目录是 docker-hexo </p>
<p> <img src="https://user-gold-cdn.xitu.io/2020/6/19/172cbb1fb6041a85?w=645&h=408&f=png&s=11908" alt="UTOOLS1592555337252.png"></p>
</li>
</ul>
<p>先将 容器里的 hexo 文件复制出来 <code>docker cp blog:/docker-hexo .</code>，这是复制到当前目录</p>
<blockquote>
<p>命令解释： docker cp 容器:需要复制的目录 宿主机目录</p>
</blockquote>
<p>最终yml如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">24   blog:</span></span><br><span class="line"><span class="attr">25     image:</span> <span class="string">zeusro/hexo</span></span><br><span class="line"><span class="attr">26     container_name:</span> <span class="string">blog</span></span><br><span class="line"><span class="attr">27     restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">28     ports:</span></span><br><span class="line"><span class="number">29</span>       <span class="bullet">-</span> <span class="number">4000</span><span class="string">:4000</span></span><br><span class="line"><span class="attr">30     volumes:</span></span><br><span class="line"><span class="number">31</span>       <span class="bullet">-</span> <span class="string">/data/blog:/docker-hexo</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>docker-compose up -d</p>
</li>
<li><p>访问ip:4000，效果同上</p>
</li>
</ol>
<p>&#x2F;&#x2F; TODO 主题修改，自行参考官方文档</p>
<p><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hiberante-validator 参数校验</title>
    <url>/2022/08/18/hiberante-validator%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<h3 id="hibernate-validator"><a href="#hibernate-validator" class="headerlink" title="hibernate validator"></a>hibernate validator</h3><p>我们经常需要对参数进行校验，很多情况下都是一个个参数校验，这种校验方式虽然也达到了效果，但是看起来就比较别扭。而且如果接收参数为<code>map</code>的时候，不太好处理，我在网上找资料也没有找到符合我情况的资料，于是去<code>hibernate</code>官网翻了下文档，在此分享下思路。</p>
<span id="more"></span>

<ol>
<li><p>首先编写实体类，添加注解</p>
</li>
<li><p>调用<code>hiberante-validator</code>校验参数，校验不通过的会放在<code>Set</code>里面</p>
</li>
<li><p>遍历<code>Set</code>的值，有值则抛出异常</p>
</li>
<li><p>统一异常处理，针对异常信息处理</p>
</li>
</ol>
<p><strong>具体实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: code-generate</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020/09/14 14:15:51</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RoleInfo</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/**  */</span></span><br><span class="line">   <span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line">   <span class="keyword">private</span> Long id;</span><br><span class="line">   <span class="comment">/** 角色名 */</span></span><br><span class="line">   <span class="meta">@NotNull(message = &quot;角色名称不能为空&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String roleName;</span><br><span class="line">   <span class="comment">/** 角色编号 */</span></span><br><span class="line">   <span class="meta">@NotNull(message = &quot;角色编号不能为空&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String roleCode;</span><br><span class="line">   <span class="comment">/** 系统编号 */</span></span><br><span class="line">   <span class="meta">@NotNull(message = &quot;系统编号不能为空&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String sysCode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>校验工具类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * hibernate validator 参数校验</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020.9.14 17:53</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ValidatorUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Validator validator;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Validator <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (validator == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">ValidatorFactory</span> <span class="variable">factory</span> <span class="operator">=</span> Validation.buildDefaultValidatorFactory();</span><br><span class="line">            validator = factory.getValidator();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> validator;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">validator</span><span class="params">(T checkObject)</span> &#123;</span><br><span class="line">        init();</span><br><span class="line">        Set&lt;ConstraintViolation&lt;T&gt;&gt; res = validator.validate(checkObject);</span><br><span class="line">        res.forEach(f -&gt; &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BizException</span>(ResponseStatus.PARAMS_INVALIDE.getCode(), f.getMessage());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>异常处理</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BizException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BizException</span><span class="params">(String code, String message)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BizException</span><span class="params">(ResponseStatus responseStatus)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(responseStatus.getMessage());</span><br><span class="line">        <span class="built_in">this</span>.code = responseStatus.getCode();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>全局异常处理</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionsHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">LOG</span> <span class="operator">=</span> LoggerFactory.getLogger(ExceptionsHandler.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(BizException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ResultData <span class="title function_">exceptionCheckData</span><span class="params">(HttpServletRequest request, BizException ex)</span> &#123;</span><br><span class="line">        <span class="type">StopWatch</span> <span class="variable">stopWatch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StopWatch</span>();</span><br><span class="line">        stopWatch.start();</span><br><span class="line">        <span class="type">ResultData</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ResultData</span>();</span><br><span class="line">        result.setStatus(ex.getCode());</span><br><span class="line">        result.setMessage(ex.getMessage());</span><br><span class="line">        <span class="type">FastJsonConfig</span> <span class="variable">fastJsonConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastJsonConfig</span>();</span><br><span class="line">        fastJsonConfig.setFeatures(Feature.OrderedField);</span><br><span class="line">        <span class="type">BodyReaderHttpServletRequestWrapper</span> <span class="variable">httpReq</span> <span class="operator">=</span> (BodyReaderHttpServletRequestWrapper) request;</span><br><span class="line">        <span class="type">Request</span> <span class="variable">requestObj</span> <span class="operator">=</span> JSON.parseObject(httpReq.getBody(), Request.class, fastJsonConfig.getFeatures());</span><br><span class="line">        stopWatch.stop();</span><br><span class="line">        commonLogService.saveCommonLog(requestObj,result,request.getRequestURI(),stopWatch.getTotalTimeSeconds(),ex);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用方式也非常简单： <code>ValidatorUtil.validator(roleInfo);</code>就可以了，有异常会直接返回信息，也不用再写多余的校验了。</p>
<p><strong>总结</strong></p>
<p>这种方式与大部分资料不同的是，现在大部分的处理方式都是在 <code>controller</code> 调用的地方使用<code>@Valid</code>注解，然后使用<code>BindingResult</code>操作，通过全局异常处理，这种方式不需要使用<code>@Valid</code>注解和<code>BindingResult</code>，相同点是，也是通过全局异常处理，可随地使用，如果是<code>Map</code>的话，先转为<code>java bean</code>再对<code>java bean</code>操作即可</p>
<p>最后贴一下参考文档：<a href="https://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#section-validating-bean-constraints">https://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#section-validating-bean-constraints</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>参数校验</tag>
      </tags>
  </entry>
  <entry>
    <title>itextpdf 表格生成与跨行跨列</title>
    <url>/2022/08/18/itextpdf%20%E8%A1%A8%E6%A0%BC%E7%94%9F%E6%88%90%E4%B8%8E%E8%B7%A8%E8%A1%8C%E8%B7%A8%E5%88%97/</url>
    <content><![CDATA[<h2 id="itextpdf-表格生成与跨行跨列"><a href="#itextpdf-表格生成与跨行跨列" class="headerlink" title="itextpdf 表格生成与跨行跨列"></a>itextpdf 表格生成与跨行跨列</h2><span id="more"></span>

<p>由于前段时间需要做需求接触pdf表格，表格需要跨行跨列操作，写了个工具类，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">PdfUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         * 生成一个表格</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         * <span class="doctag">@author</span> hou_fx</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> total  总列数</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> textFont 字体</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> data   表格数据     X行    Y列</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> doc    PDF文档对象</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         * <span class="doctag">@throws</span> DocumentException</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TableBule</span><span class="params">(<span class="type">int</span> total,Font textFont,List&gt; data,Document doc)</span> <span class="keyword">throws</span> DocumentException&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line"></span><br><span class="line">            <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line"></span><br><span class="line">            table.setPaddingTop(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            table.setSpacingAfter(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            table.setTotalWidth(<span class="number">530</span>); <span class="comment">//设置列宽</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// table.setTotalWidth(new float[]&#123; 100, 165, 100, 165 &#125;); //设置列宽</span></span><br><span class="line"></span><br><span class="line">            table.setLockedWidth(<span class="literal">true</span>); <span class="comment">//锁定列宽</span></span><br><span class="line"></span><br><span class="line">            PdfPCell cell;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.size(); i++) &#123;  <span class="comment">//遍历数据行   每个数据行都是一个list</span></span><br><span class="line"></span><br><span class="line">                <span class="type">Iterator</span> <span class="variable">it</span> <span class="operator">=</span> data.get(i).iterator();</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (it.hasNext()) &#123;               <span class="comment">//遍历每行数据，每个数据都是一个单元格</span></span><br><span class="line"></span><br><span class="line">                    cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(it.next(), textFont));</span><br><span class="line"></span><br><span class="line">                    cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line"></span><br><span class="line">                    cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">//第一个单元格背景色</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (count%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">                        cell.setBackgroundColor(<span class="keyword">new</span> <span class="title class_">BaseColor</span>(<span class="number">231</span>,<span class="number">230</span>,<span class="number">230</span>));</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    cell.setHorizontalAlignment(Element.ALIGN_LEFT); <span class="comment">//左对齐</span></span><br><span class="line"></span><br><span class="line">                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line"></span><br><span class="line">                    table.addCell(cell);</span><br><span class="line"></span><br><span class="line">                    count++;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            doc.add(table);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 生成一个表格</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@author</span> hou_fx</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> total 总列数</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> textFont 字体</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> data  表格数据     X行    Y列</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> doc PDF文档对象</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> colspan 第几列</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> rowspan 第几行</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> number  跨几列</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@throws</span> DocumentException</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TableColspan</span><span class="params">(<span class="type">int</span> total,Font textFont,List&lt;List&lt;String&gt;&gt; data,Document doc,<span class="type">int</span>[] rowspan,<span class="type">int</span>[] colspan,<span class="type">int</span>[] number)</span> <span class="keyword">throws</span> DocumentException&#123;</span><br><span class="line">            <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line">            <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line">            table.setPaddingTop(<span class="number">20</span>);</span><br><span class="line">            table.setSpacingAfter(<span class="number">20</span>);</span><br><span class="line">            table.setTotalWidth(<span class="number">530</span>); <span class="comment">//设置列宽</span></span><br><span class="line">            <span class="comment">// table.setTotalWidth(new float[]&#123; 100, 165, 100, 165 &#125;); //设置列宽</span></span><br><span class="line">            table.setLockedWidth(<span class="literal">true</span>); <span class="comment">//锁定列宽</span></span><br><span class="line">            PdfPCell cell;</span><br><span class="line">            <span class="comment">//数组下标</span></span><br><span class="line">            <span class="type">int</span> cos=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.size(); i++) &#123;  <span class="comment">//遍历数据行   每个数据行都是一个list</span></span><br><span class="line">                Iterator&lt;String&gt; it = data.get(i).iterator();</span><br><span class="line">                <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (it.hasNext()) &#123;               <span class="comment">//遍历每行数据，每个数据都是一个单元格</span></span><br><span class="line">                    cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(it.next(), textFont));</span><br><span class="line">                    cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line">                    cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line">                    <span class="keyword">if</span> (cos&lt;rowspan.length &amp;&amp; i==rowspan[cos]-<span class="number">1</span> &amp;&amp; count==colspan[cos]-<span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//                    if (i==rowspan[cos]-1) &#123;//行</span></span><br><span class="line"><span class="comment">//                        if (count==colspan[cos]-1) &#123;//列</span></span><br><span class="line">                        cell.setColspan(number[cos]);<span class="comment">//跨单元格</span></span><br><span class="line">                        cos++;</span><br><span class="line"><span class="comment">//                        &#125;</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    cell.setHorizontalAlignment(Element.ALIGN_LEFT);</span><br><span class="line">                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line">                    table.addCell(cell);</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            doc.add(table);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>部分代码，可根据实际需求进行扩展。<br>效果图如下：<br><img src="https://img-blog.csdnimg.cn/20190215163240830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTQ5Mjc1,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20190215163345845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTQ5Mjc1,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190215163423489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTQ5Mjc1,size_16,color_FFFFFF,t_70"></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>itextpdf</tag>
      </tags>
  </entry>
  <entry>
    <title>itextpdf 添加折线图、饼图、柱状图</title>
    <url>/2022/08/18/itextpdf%20%E6%B7%BB%E5%8A%A0%E6%8A%98%E7%BA%BF%E5%9B%BE%E3%80%81%E9%A5%BC%E5%9B%BE%E3%80%81%E6%9F%B1%E7%8A%B6%E5%9B%BE/</url>
    <content><![CDATA[<h1 id="itextpdf-添加折线图、饼图、柱状图"><a href="#itextpdf-添加折线图、饼图、柱状图" class="headerlink" title="itextpdf 添加折线图、饼图、柱状图"></a>itextpdf 添加折线图、饼图、柱状图</h1><blockquote>
<p>时隔三年，又要对PDF一顿改版了，此次改版加入了饼图、折线图、柱状图等图形可视化。</p>
</blockquote>
<span id="more"></span>


<h2 id="依赖包"><a href="#依赖包" class="headerlink" title="依赖包"></a>依赖包</h2><ul>
<li>itextpdf 5.5.6</li>
<li>jfreechart 1.5.3</li>
</ul>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><ul>
<li>折线图<br><img src="https://img-blog.csdnimg.cn/edcd6c484aed456c919649c1b6d84270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTQ5Mjc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>柱状图<br><img src="https://img-blog.csdnimg.cn/94d30facfd2b47d3a42e0511bbd58fa6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTQ5Mjc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>饼图<br><img src="https://img-blog.csdnimg.cn/60023d9d129c42d4b5fd08360694ba44.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTQ5Mjc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>生成图表</li>
<li>插入到PDF</li>
</ol>
<hr>
<h3 id="生成折线图"><a href="#生成折线图" class="headerlink" title="生成折线图"></a>生成折线图</h3><p>主要代码 (完整代码文末贴出来)：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">lineChart</span><span class="params">(String title, String categoryAxisLabel, String valueAxisLabel, DefaultCategoryDataset dataset)</span>&#123;</span><br><span class="line">    ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line"></span><br><span class="line">    <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createLineChart(</span><br><span class="line">            title,</span><br><span class="line">            categoryAxisLabel,</span><br><span class="line">            valueAxisLabel,</span><br><span class="line">            dataset,</span><br><span class="line">            PlotOrientation.VERTICAL,</span><br><span class="line">            <span class="literal">true</span>,</span><br><span class="line">            <span class="literal">true</span>,</span><br><span class="line">            <span class="literal">false</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="type">CategoryPlot</span> <span class="variable">plot</span> <span class="operator">=</span> chart.getCategoryPlot();</span><br><span class="line">    <span class="type">LineAndShapeRenderer</span> <span class="variable">renderer</span> <span class="operator">=</span> (LineAndShapeRenderer) plot.getRenderer();</span><br><span class="line">    <span class="comment">// 折现点显示数值</span></span><br><span class="line">    renderer.setDefaultItemLabelsVisible(<span class="literal">true</span>);</span><br><span class="line">    renderer.setDefaultItemLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardCategoryItemLabelGenerator</span>());</span><br><span class="line">    <span class="comment">// 更改线条颜色</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getRowKeys().size(); i++) &#123;</span><br><span class="line">        renderer.setSeriesPaint(i, LINE_COLORS[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> chart;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="生成柱状图"><a href="#生成柱状图" class="headerlink" title="生成柱状图"></a>生成柱状图</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">barChart</span><span class="params">(String title, String categoryAxisLabel, String valueAxisLabel, DefaultCategoryDataset dataset)</span>&#123;</span><br><span class="line">    ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line"></span><br><span class="line">    <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createBarChart(</span><br><span class="line">            title,</span><br><span class="line">            categoryAxisLabel,</span><br><span class="line">            valueAxisLabel,</span><br><span class="line">            dataset,</span><br><span class="line">            PlotOrientation.VERTICAL,</span><br><span class="line">            <span class="literal">true</span>,</span><br><span class="line">            <span class="literal">true</span>,</span><br><span class="line">            <span class="literal">false</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="type">CategoryPlot</span> <span class="variable">plot</span> <span class="operator">=</span> chart.getCategoryPlot();</span><br><span class="line">    <span class="type">BarRenderer</span> <span class="variable">renderer</span> <span class="operator">=</span> (BarRenderer) plot.getRenderer();</span><br><span class="line">    <span class="comment">// 纯色显示</span></span><br><span class="line">    renderer.setBarPainter(<span class="keyword">new</span> <span class="title class_">StandardBarPainter</span>());</span><br><span class="line">    <span class="comment">// 柱子上显示小数字</span></span><br><span class="line">    renderer.setDefaultItemLabelsVisible(<span class="literal">true</span>);</span><br><span class="line">    renderer.setDefaultItemLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardCategoryItemLabelGenerator</span>());</span><br><span class="line">    <span class="comment">// 设置柱子间隔</span></span><br><span class="line">    renderer.setItemMargin(<span class="number">0.0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getRowKeys().size(); i++) &#123;</span><br><span class="line">        renderer.setSeriesPaint(i, BAR_COLORS[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> chart;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="生成饼图"><a href="#生成饼图" class="headerlink" title="生成饼图"></a>生成饼图</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">pieChart</span><span class="params">(String title, DefaultPieDataset dataset)</span>&#123;</span><br><span class="line">    ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line"></span><br><span class="line">    <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createPieChart(</span><br><span class="line">            title,</span><br><span class="line">            dataset,</span><br><span class="line">            <span class="literal">true</span>,</span><br><span class="line">            <span class="literal">true</span>,</span><br><span class="line">            <span class="literal">false</span></span><br><span class="line">    );</span><br><span class="line">    <span class="type">PiePlot</span> <span class="variable">plot</span> <span class="operator">=</span> (PiePlot) chart.getPlot();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getKeys().size(); i++) &#123;</span><br><span class="line">        plot.setSectionPaint(dataset.getKey(i), PIE_COLORS[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置扇区的线条颜色</span></span><br><span class="line">    plot.setDefaultSectionOutlinePaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">    <span class="comment">// 设置扇区的线条大小</span></span><br><span class="line">    plot.setDefaultSectionOutlineStroke(<span class="keyword">new</span> <span class="title class_">BasicStroke</span>(<span class="number">3</span>));</span><br><span class="line">    <span class="comment">// 设置标签颜色</span></span><br><span class="line">    plot.setLabelLinkPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="comment">// 设置标签背景色</span></span><br><span class="line">    plot.setLabelBackgroundPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>,<span class="number">0</span>));</span><br><span class="line">    <span class="comment">// 设置标签线条颜色</span></span><br><span class="line">    plot.setLabelOutlinePaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="comment">// 设置标签阴影颜色</span></span><br><span class="line">    plot.setLabelShadowPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="comment">// 设置饼图阴影颜色</span></span><br><span class="line">    plot.setShadowPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="comment">// 添加标签数字百分比显示</span></span><br><span class="line">    plot.setLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardPieSectionLabelGenerator</span>((<span class="string">&quot;&#123;0&#125;&#123;2&#125;&quot;</span>), NumberFormat.getNumberInstance(),<span class="keyword">new</span> <span class="title class_">DecimalFormat</span>(<span class="string">&quot;0.00%&quot;</span>)));</span><br><span class="line">    <span class="keyword">return</span> chart;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="添加到PDF中"><a href="#添加到PDF中" class="headerlink" title="添加到PDF中"></a>添加到PDF中</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ByteArrayOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">ChartUtils.writeChartAsJPEG(bos, ChartUtil.lineChart(<span class="string">&quot;月度应税销售收入对比图&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, dataset), <span class="number">850</span>, <span class="number">440</span>);</span><br><span class="line"></span><br><span class="line">Image image=Image.getInstance(bos.toByteArray());</span><br><span class="line">image.scalePercent(<span class="number">60</span>);</span><br><span class="line">doc.add(image);</span><br></pre></td></tr></table></figure>

<h2 id="生成图表工具类"><a href="#生成图表工具类" class="headerlink" title="生成图表工具类"></a>生成图表工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ChartUtil</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Color[] BAR_COLORS = <span class="keyword">new</span> <span class="title class_">Color</span>[]&#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">79</span>,<span class="number">129</span>,<span class="number">189</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">192</span>, <span class="number">80</span>, <span class="number">77</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">155</span>, <span class="number">187</span>, <span class="number">89</span>),</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Color[] LINE_COLORS = <span class="keyword">new</span> <span class="title class_">Color</span>[]&#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">237</span>, <span class="number">123</span>, <span class="number">46</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">90</span>, <span class="number">154</span>, <span class="number">213</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">164</span>, <span class="number">164</span>, <span class="number">164</span>),</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Color[] PIE_COLORS = <span class="keyword">new</span> <span class="title class_">Color</span>[]&#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">75</span>, <span class="number">172</span>, <span class="number">198</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">128</span>, <span class="number">100</span>, <span class="number">162</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">155</span>, <span class="number">187</span>, <span class="number">89</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">192</span>, <span class="number">80</span>, <span class="number">77</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">79</span>, <span class="number">129</span>, <span class="number">189</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">44</span>, <span class="number">77</span>, <span class="number">117</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">247</span>, <span class="number">150</span>, <span class="number">70</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">165</span>, <span class="number">165</span>, <span class="number">165</span>),</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> StandardChartTheme <span class="title function_">initChartTheme</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">StandardChartTheme</span> <span class="variable">currentTheme</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StandardChartTheme</span>(<span class="string">&quot;JFree&quot;</span>);</span><br><span class="line">        <span class="comment">// 横轴纵轴标题文字大小</span></span><br><span class="line">        currentTheme.setLargeFont(<span class="keyword">new</span> <span class="title class_">java</span>.awt.Font(<span class="string">&quot;宋体&quot;</span>, java.awt.Font.BOLD, <span class="number">15</span>));</span><br><span class="line">        <span class="comment">// 横轴纵轴数值文字大小</span></span><br><span class="line">        currentTheme.setRegularFont(<span class="keyword">new</span> <span class="title class_">java</span>.awt.Font(<span class="string">&quot;宋体&quot;</span>, java.awt.Font.PLAIN, <span class="number">13</span>));</span><br><span class="line">        currentTheme.setExtraLargeFont(<span class="keyword">new</span> <span class="title class_">java</span>.awt.Font(<span class="string">&quot;宋体&quot;</span>, java.awt.Font.BOLD, <span class="number">20</span>));</span><br><span class="line">        <span class="comment">// 背景颜色</span></span><br><span class="line">        currentTheme.setPlotBackgroundPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">204</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 边框线条</span></span><br><span class="line">        currentTheme.setPlotOutlinePaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 网格线条</span></span><br><span class="line">        currentTheme.setRangeGridlinePaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">78</span>, <span class="number">74</span>, <span class="number">74</span>));</span><br><span class="line">        <span class="keyword">return</span> currentTheme;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 线图</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> title 标题</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> categoryAxisLabel 分类标签</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> valueAxisLabel 数值标签</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> dataset 数据集</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@return</span> org.jfree.chart.JFreeChart</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@date</span> 2021.8.4 10:39</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">lineChart</span><span class="params">(String title, String categoryAxisLabel, String valueAxisLabel, DefaultCategoryDataset dataset)</span>&#123;</span><br><span class="line">        ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line"></span><br><span class="line">        <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createLineChart(</span><br><span class="line">                title,</span><br><span class="line">                categoryAxisLabel,</span><br><span class="line">                valueAxisLabel,</span><br><span class="line">                dataset,</span><br><span class="line">                PlotOrientation.VERTICAL,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="type">CategoryPlot</span> <span class="variable">plot</span> <span class="operator">=</span> chart.getCategoryPlot();</span><br><span class="line">        <span class="type">LineAndShapeRenderer</span> <span class="variable">renderer</span> <span class="operator">=</span> (LineAndShapeRenderer) plot.getRenderer();</span><br><span class="line">        <span class="comment">// 折现点显示数值</span></span><br><span class="line">        renderer.setDefaultItemLabelsVisible(<span class="literal">true</span>);</span><br><span class="line">        renderer.setDefaultItemLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardCategoryItemLabelGenerator</span>());</span><br><span class="line">        <span class="comment">// 更改线条颜色</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getRowKeys().size(); i++) &#123;</span><br><span class="line">            renderer.setSeriesPaint(i, LINE_COLORS[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chart;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 柱状图</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> title</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> categoryAxisLabel</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> valueAxisLabel</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> dataset           数据集</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@return</span> org.jfree.chart.JFreeChart</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@date</span> 2021.8.4 14:03</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">barChart</span><span class="params">(String title, String categoryAxisLabel, String valueAxisLabel, DefaultCategoryDataset dataset)</span>&#123;</span><br><span class="line">        ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line"></span><br><span class="line">        <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createBarChart(</span><br><span class="line">                title,</span><br><span class="line">                categoryAxisLabel,</span><br><span class="line">                valueAxisLabel,</span><br><span class="line">                dataset,</span><br><span class="line">                PlotOrientation.VERTICAL,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="type">CategoryPlot</span> <span class="variable">plot</span> <span class="operator">=</span> chart.getCategoryPlot();</span><br><span class="line">        <span class="type">BarRenderer</span> <span class="variable">renderer</span> <span class="operator">=</span> (BarRenderer) plot.getRenderer();</span><br><span class="line">        <span class="comment">// 纯色显示</span></span><br><span class="line">        renderer.setBarPainter(<span class="keyword">new</span> <span class="title class_">StandardBarPainter</span>());</span><br><span class="line">        <span class="comment">// 柱子上显示小数字</span></span><br><span class="line">        renderer.setDefaultItemLabelsVisible(<span class="literal">true</span>);</span><br><span class="line">        renderer.setDefaultItemLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardCategoryItemLabelGenerator</span>());</span><br><span class="line">        <span class="comment">// 设置柱子间隔</span></span><br><span class="line">        renderer.setItemMargin(<span class="number">0.0</span>);</span><br><span class="line">        <span class="comment">// 设置柱子颜色</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getRowKeys().size(); i++) &#123;</span><br><span class="line">            renderer.setSeriesPaint(i, BAR_COLORS[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chart;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 饼图</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> title</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> dataset</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@return</span> org.jfree.chart.JFreeChart</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@date</span> 2021.8.4 14:04</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">pieChart</span><span class="params">(String title, DefaultPieDataset dataset)</span>&#123;</span><br><span class="line">        ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line"></span><br><span class="line">        <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createPieChart(</span><br><span class="line">                title,</span><br><span class="line">                dataset,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">        );</span><br><span class="line">        <span class="type">PiePlot</span> <span class="variable">plot</span> <span class="operator">=</span> (PiePlot) chart.getPlot();</span><br><span class="line">        <span class="comment">// 设置扇区颜色</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getKeys().size(); i++) &#123;</span><br><span class="line">            plot.setSectionPaint(dataset.getKey(i), PIE_COLORS[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置扇区的线条颜色</span></span><br><span class="line">        plot.setDefaultSectionOutlinePaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">        <span class="comment">// 设置扇区的线条大小</span></span><br><span class="line">        plot.setDefaultSectionOutlineStroke(<span class="keyword">new</span> <span class="title class_">BasicStroke</span>(<span class="number">3</span>));</span><br><span class="line">        <span class="comment">// 设置标签颜色</span></span><br><span class="line">        plot.setLabelLinkPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 设置标签背景色</span></span><br><span class="line">        plot.setLabelBackgroundPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 设置标签线条颜色</span></span><br><span class="line">        plot.setLabelOutlinePaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 设置标签阴影颜色</span></span><br><span class="line">        plot.setLabelShadowPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 设置饼图阴影颜色</span></span><br><span class="line">        plot.setShadowPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 添加标签数字百分比显示</span></span><br><span class="line">        plot.setLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardPieSectionLabelGenerator</span>((<span class="string">&quot;&#123;0&#125;&#123;2&#125;&quot;</span>), NumberFormat.getNumberInstance(),<span class="keyword">new</span> <span class="title class_">DecimalFormat</span>(<span class="string">&quot;0.00%&quot;</span>)));</span><br><span class="line">        <span class="keyword">return</span> chart;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>itextpdf</tag>
        <tag>jfreechart</tag>
      </tags>
  </entry>
  <entry>
    <title>java 集成极光推送</title>
    <url>/2022/08/18/java%20%E9%9B%86%E6%88%90%E6%9E%81%E5%85%89%E6%8E%A8%E9%80%81/</url>
    <content><![CDATA[<h2 id="java-集成极光推送"><a href="#java-集成极光推送" class="headerlink" title="java 集成极光推送"></a>java 集成极光推送</h2><p>前段时间公司引入了极光推送，做个简单的记录，大致开发步骤如下：</p>
<ol>
<li>到极光官网注册账号</li>
<li>创建应用</li>
<li>完善应用信息（Android、iOS）</li>
<li>各端集成</li>
<li>联调</li>
</ol>
<span id="more"></span>

<hr>
<p>前面步骤不细讲了，可自行翻阅 -&gt; <a href="https://docs.jiguang.cn//jpush/guideline/intro/">极光推送官方文档</a><br>我是直接下载官方sdk进行修改的，话不多说，直接上代码吧。</p>
<h6 id="maven引入极光推送包，我们用的是3-3-11："><a href="#maven引入极光推送包，我们用的是3-3-11：" class="headerlink" title="maven引入极光推送包，我们用的是3.3.11："></a>maven引入极光推送包，我们用的是3.3.11：</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!-- 极光推送 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;cn.jpush.api&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jpush-client&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">3.3</span><span class="number">.11</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<h6 id="主要业务代码如下（代码经处理过，大家需要根据实际业务场景修改）："><a href="#主要业务代码如下（代码经处理过，大家需要根据实际业务场景修改）：" class="headerlink" title="主要业务代码如下（代码经处理过，大家需要根据实际业务场景修改）："></a>主要业务代码如下（代码经处理过，大家需要根据实际业务场景修改）：</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">JpushService</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">push</span><span class="params">(WeChatPushType type, String alias, String urlParam, String... inputParam)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">jobPush</span><span class="params">(String title, String content, String url)</span> <span class="keyword">throws</span> APIConnectionException, APIRequestException;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Hou_fx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/8/1 11:40</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JpushServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">JpushService</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jPush.appKey&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String appKey;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jPush.masterSecret&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String masterSecret;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jPush.devMode&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Boolean devMode;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jPush.url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">LOG</span> <span class="operator">=</span> LoggerFactory.getLogger(WeChatPushServiceImpl.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">push</span><span class="params">(WeChatPushType type, String alias,String urlParam, String ... inputParam)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.pushAlias(type, alias,urlParam,inputParam);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (APIConnectionException e) &#123;</span><br><span class="line">            <span class="comment">// Connection error, should retry later</span></span><br><span class="line">            LOG.error(<span class="string">&quot;Connection error, should retry later&quot;</span>, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (APIRequestException e) &#123;</span><br><span class="line">            <span class="comment">// Should review the error, and fix the request</span></span><br><span class="line">            LOG.error(<span class="string">&quot;Should review the error, and fix the request&quot;</span>, e);</span><br><span class="line">            LOG.info(<span class="string">&quot;HTTP Status: &quot;</span> + e.getStatus());</span><br><span class="line">            LOG.info(<span class="string">&quot;Error Code: &quot;</span> + e.getErrorCode());</span><br><span class="line">            LOG.info(<span class="string">&quot;Error Message: &quot;</span> + e.getErrorMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">jobPush</span><span class="params">(String title, String content, String url)</span> <span class="keyword">throws</span> APIConnectionException, APIRequestException  &#123;</span><br><span class="line">        <span class="type">JPushClient</span> <span class="variable">jpushClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPushClient</span>(masterSecret, appKey, <span class="literal">null</span>, ClientConfig.getInstance());</span><br><span class="line">        <span class="type">Map</span> <span class="variable">param</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>() &#123;&#123;</span><br><span class="line">            put(<span class="string">&quot;url&quot;</span>, url);</span><br><span class="line">        &#125;&#125;;</span><br><span class="line">        <span class="type">PushPayload</span> <span class="variable">payload</span> <span class="operator">=</span> PushPayload.newBuilder()</span><br><span class="line">                .setPlatform(Platform.android_ios())</span><br><span class="line">                .setAudience(Audience.all())</span><br><span class="line">                .setNotification(Notification.newBuilder()</span><br><span class="line">                        .setAlert(content)</span><br><span class="line">                        .addPlatformNotification(AndroidNotification.newBuilder()</span><br><span class="line">                                .setTitle(title)</span><br><span class="line">                                .addExtras(param).build())</span><br><span class="line">                        .addPlatformNotification(IosNotification.newBuilder()</span><br><span class="line">                                .incrBadge(<span class="number">1</span>)</span><br><span class="line">                                .addExtras(param).build())</span><br><span class="line">                        .build())</span><br><span class="line">                .setOptions(<span class="built_in">this</span>.setOptions())</span><br><span class="line">                .build();</span><br><span class="line">        LOG.info(<span class="string">&quot;payload param - &#123;&#125;&quot;</span>, JSONObject.toJSONString(payload));</span><br><span class="line">        <span class="type">PushResult</span> <span class="variable">result</span> <span class="operator">=</span> jpushClient.sendPush(payload);</span><br><span class="line">        LOG.info(<span class="string">&quot;Got result - &quot;</span> + result);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">jPush</span><span class="params">(String title, String content, WeChatPushType type, String alias,String url)</span> <span class="keyword">throws</span> APIConnectionException, APIRequestException &#123;</span><br><span class="line">        <span class="type">JPushClient</span> <span class="variable">jpushClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPushClient</span>(masterSecret, appKey, <span class="literal">null</span>, ClientConfig.getInstance());</span><br><span class="line">        <span class="type">Map</span> <span class="variable">param</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>() &#123;&#123;</span><br><span class="line">            put(<span class="string">&quot;type&quot;</span>, type.name());</span><br><span class="line">            put(<span class="string">&quot;url&quot;</span>, url);</span><br><span class="line">        &#125;&#125;;</span><br><span class="line">        <span class="type">PushPayload</span> <span class="variable">payload</span> <span class="operator">=</span> PushPayload.newBuilder()</span><br><span class="line">                .setPlatform(Platform.android_ios())</span><br><span class="line">                .setAudience(Audience.alias(alias))</span><br><span class="line">                .setNotification(Notification.newBuilder()</span><br><span class="line">                        .setAlert(content)</span><br><span class="line">                        .addPlatformNotification(AndroidNotification.newBuilder()</span><br><span class="line">                                .setTitle(title)</span><br><span class="line">                                .addExtras(param).build())</span><br><span class="line">                        .addPlatformNotification(IosNotification.newBuilder()</span><br><span class="line">                                .incrBadge(<span class="number">1</span>)</span><br><span class="line">                                .addExtras(param).build())</span><br><span class="line">                        .build())</span><br><span class="line">                .setOptions(<span class="built_in">this</span>.setOptions())</span><br><span class="line">                .build();</span><br><span class="line">        LOG.info(<span class="string">&quot;payload param - &#123;&#125;&quot;</span>, JSONObject.toJSONString(payload));</span><br><span class="line">        <span class="type">PushResult</span> <span class="variable">result</span> <span class="operator">=</span> jpushClient.sendPush(payload);</span><br><span class="line">        LOG.info(<span class="string">&quot;Got result - &quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Options <span class="title function_">setOptions</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(devMode)&#123;</span><br><span class="line">            <span class="keyword">return</span> Options.newBuilder()</span><br><span class="line">                    .setApnsProduction(<span class="literal">false</span>).build();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Options.newBuilder()</span><br><span class="line">                    .setApnsProduction(<span class="literal">true</span>).build();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">pushAlias</span><span class="params">(WeChatPushType type, String alias,String urlParam, String... inputParam)</span> <span class="keyword">throws</span> APIConnectionException, APIRequestException &#123;</span><br><span class="line">        String title,content,url=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        WeChatPushType pushType;</span><br><span class="line">        String[] params = urlParam.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="comment">// 认证</span></span><br><span class="line">            <span class="keyword">case</span> W005:</span><br><span class="line">                title = <span class="string">&quot;认证成功&quot;</span>;</span><br><span class="line">                content = <span class="string">&quot;恭喜，您的企业账号已认证成功，现可免费体验一键智能匹配服务，点击查看&quot;</span>;</span><br><span class="line">                pushType = W005;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 受理</span></span><br><span class="line">            <span class="keyword">case</span> W011:</span><br><span class="line">                title = <span class="string">&quot;对接进度变更&quot;</span>;</span><br><span class="line">                content = String.format(<span class="string">&quot;您的（%s）融资申请已受理，点击查看需求进度&quot;</span>, inputParam);</span><br><span class="line">                pushType = W011;</span><br><span class="line">                url = String.format(<span class="built_in">this</span>.url + <span class="string">&quot;/aaaaaa/#/ssssss?cccc=%s&amp;id=%s&quot;</span>, params);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 审核</span></span><br><span class="line">            <span class="keyword">case</span> W016:</span><br><span class="line">                title = <span class="string">&quot;对接进度变更&quot;</span>;</span><br><span class="line">                content = String.format(<span class="string">&quot;您的（%s）融资申请已审批通过，点击查看需求进度&quot;</span>, inputParam);</span><br><span class="line">                pushType = W016;</span><br><span class="line">                url = String.format(<span class="built_in">this</span>.url + <span class="string">&quot;/aaaaaa/#/ssssss?cccc=%s&amp;id=%s&quot;</span>, params);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 放款</span></span><br><span class="line">            <span class="keyword">case</span> W018:</span><br><span class="line">                title = <span class="string">&quot;对接进度变更&quot;</span>;</span><br><span class="line">                content = String.format(<span class="string">&quot;您的（%s）融资申请已成功放款，到账可能需要时间， 请耐心等待&quot;</span>, inputParam);</span><br><span class="line">                pushType = W018;</span><br><span class="line">                url = String.format(<span class="built_in">this</span>.url + <span class="string">&quot;/aaaaaa/#/ssssss?cccc=%s&amp;id=%s&quot;</span>, params);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 审核失败</span></span><br><span class="line">            <span class="keyword">case</span> W007:</span><br><span class="line">                title = <span class="string">&quot;对接进度变更&quot;</span>;</span><br><span class="line">                content = String.format(<span class="string">&quot;很抱歉，您的（%s）融资申请审核失败，原因为:%s，如有疑问，可联系在线客服咨询&quot;</span>, inputParam);</span><br><span class="line">                pushType = W007;</span><br><span class="line">                url = String.format(<span class="built_in">this</span>.url + <span class="string">&quot;/aaaaaa/#/ssssss?cccc=%s&amp;id=%s&quot;</span>, params);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 放款失败</span></span><br><span class="line">            <span class="keyword">case</span> W017:</span><br><span class="line">                title = <span class="string">&quot;对接进度变更&quot;</span>;</span><br><span class="line">                content = String.format(<span class="string">&quot;很抱歉，您的（%s）融资申请放款失败，原因为:%s，如有疑问，可联系在线客服咨询&quot;</span>, inputParam);</span><br><span class="line">                pushType = W017;</span><br><span class="line">                url = String.format(<span class="built_in">this</span>.url + <span class="string">&quot;/aaaaaa/#/ssssss?cccc=%s&amp;id=%s&quot;</span>, params);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 匹配更新</span></span><br><span class="line">            <span class="keyword">case</span> W010:</span><br><span class="line">                title = <span class="string">&quot;融资方案&quot;</span>;</span><br><span class="line">                content = <span class="string">&quot;已为您匹配到企业专属融资方案，点击查看&quot;</span>;</span><br><span class="line">                pushType = W010;</span><br><span class="line">                url = String.format(<span class="built_in">this</span>.url + <span class="string">&quot;/aaaaaa/#/bbb?matchType=%s&quot;</span>, params);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                LOG.error(<span class="string">&quot;type not exist&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(title)) &#123;</span><br><span class="line">            <span class="built_in">this</span>.jPush(title, content, pushType, alias,url);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="业务场景调用代码"><a href="#业务场景调用代码" class="headerlink" title="业务场景调用代码"></a>业务场景调用代码</h6><p>我们是通过别名注册的，可查阅官方文档，这里以Android为例：<a href="https://docs.jiguang.cn//jpush/client/Android/android_api/#api_3">安卓别名注册</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jpushService.push(WeChatPushType.W005, <span class="string">&quot;ENT&amp;&quot;</span> + userid,<span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure>

<h6 id="测试效果图如下"><a href="#测试效果图如下" class="headerlink" title="测试效果图如下"></a>测试效果图如下</h6><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://img-blog.csdnimg.cn/20191104190937959.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTQ5Mjc1,size_16,color_FFFFFF,t_70" alt="测试效果图"></h2><p>如有理解不到位之处，敬请斧正<br>END</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>极光推送</tag>
      </tags>
  </entry>
  <entry>
    <title>itextpdf 表格跨行跨列与可视化图表</title>
    <url>/2022/08/18/itextpdf%20%E8%A1%A8%E6%A0%BC%E8%B7%A8%E8%A1%8C%E8%B7%A8%E5%88%97%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96%E5%9B%BE%E8%A1%A8/</url>
    <content><![CDATA[<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><h3 id="普通表格一（表头背景色"><a href="#普通表格一（表头背景色" class="headerlink" title="普通表格一（表头背景色)"></a>普通表格一（表头背景色)</h3><p><img src="https://img-blog.csdnimg.cn/1df598e70e7f41058335802b4331da3c.png" alt="在这里插入图片描述"></p>
<h3 id="普通表格二-（隔列变色"><a href="#普通表格二-（隔列变色" class="headerlink" title="普通表格二 （隔列变色)"></a>普通表格二 （隔列变色)</h3><p><img src="https://img-blog.csdnimg.cn/308fbc9dff274080918e4d62e969176e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LiA5Y-q56eL55Sw54qs,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h3 id="表格跨行跨列"><a href="#表格跨行跨列" class="headerlink" title="表格跨行跨列"></a>表格跨行跨列</h3><p><img src="https://img-blog.csdnimg.cn/59a10f4d040d4cbf9888408f4c803ce7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LiA5Y-q56eL55Sw54qs,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h3 id="可视化图表"><a href="#可视化图表" class="headerlink" title="可视化图表"></a>可视化图表</h3><p><strong>饼图</strong><br><img src="https://img-blog.csdnimg.cn/c41c57d5cd9f4c2b95b1630602d3133e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LiA5Y-q56eL55Sw54qs,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>柱状图</strong><br><img src="https://img-blog.csdnimg.cn/d2bf1fa29fb749a48d849a49067fc5aa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LiA5Y-q56eL55Sw54qs,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>折线图</strong><br><img src="https://img-blog.csdnimg.cn/24171e79edb04a1fa3f04dbede373986.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LiA5Y-q56eL55Sw54qs,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<span id="more"></span>

<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><h3 id="普通表格一（表头背景色）"><a href="#普通表格一（表头背景色）" class="headerlink" title="普通表格一（表头背景色）"></a>普通表格一（表头背景色）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PdfUtil.addLevel2Title(doc, <span class="string">&quot;对外投资信息&quot;</span>);</span><br><span class="line">PdfUtil.Table(<span class="number">7</span>, textFont, <span class="keyword">new</span> <span class="title class_">TableDataUtil</span>()</span><br><span class="line">        .add(RowData.add(<span class="string">&quot;序号&quot;</span>, <span class="string">&quot;名称&quot;</span>, <span class="string">&quot;法定代表人&quot;</span>, <span class="string">&quot;注册资金&quot;</span>, <span class="string">&quot;注册号&quot;</span>, <span class="string">&quot;成立日期&quot;</span>, <span class="string">&quot;地址&quot;</span>))</span><br><span class="line">        .addList(GetData.get(desensitization, result, Compoent.INVESTMENTLIST, <span class="string">&quot;NO&quot;</span>, <span class="string">&quot;InvestName&quot;</span>, <span class="string">&quot;Legal&quot;</span>, <span class="string">&quot;RegCapital&quot;</span>, <span class="string">&quot;EntRegNo&quot;</span>, <span class="string">&quot;EstDate&quot;</span>, <span class="string">&quot;RegAddress&quot;</span>))</span><br><span class="line">        .toList(), doc);</span><br></pre></td></tr></table></figure>
<h3 id="普通表格二-（隔列变色）"><a href="#普通表格二-（隔列变色）" class="headerlink" title="普通表格二 （隔列变色）"></a>普通表格二 （隔列变色）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PdfUtil.addLevel2Title(doc, <span class="string">&quot;社保基本信息&quot;</span>);</span><br><span class="line">PdfUtil.TableBuleColspan(<span class="number">4</span>, textFont, <span class="keyword">new</span> <span class="title class_">TableDataUtil</span>()</span><br><span class="line">        .add(RowData.add(<span class="string">&quot;社保单位编号&quot;</span>, GetData.get(result, Compoent.INHFSOCIALSECURITY, <span class="string">&quot;SocialSecurityNo&quot;</span>, desensitization), <span class="string">&quot;投保起始年&quot;</span>, GetData.get(result, Compoent.INHFSOCIALSECURITY, <span class="string">&quot;InsuredYear&quot;</span>)))</span><br><span class="line">        .add(RowData.add(<span class="string">&quot;投保起始月&quot;</span>, GetData.get(result, Compoent.INHFSOCIALSECURITY, <span class="string">&quot;InsuredMonth&quot;</span>), <span class="string">&quot;当前状态&quot;</span>, GetData.get(result, Compoent.INHFSOCIALSECURITY, <span class="string">&quot;CurrentState&quot;</span>)))</span><br><span class="line">        .add(RowData.add(<span class="string">&quot;参保总人数&quot;</span>, GetData.get(result, Compoent.INHFSOCIALSECURITY, <span class="string">&quot;TotalCNT&quot;</span>), <span class="string">&quot;养老参保人数&quot;</span>, GetData.get(result, Compoent.INHFSOCIALSECURITY, <span class="string">&quot;EICNT&quot;</span>)))</span><br><span class="line">        .add(RowData.add(<span class="string">&quot;医疗参保人数&quot;</span>, GetData.get(result, Compoent.INHFSOCIALSECURITY, <span class="string">&quot;MICNT&quot;</span>), <span class="string">&quot;工伤参保人数&quot;</span>, GetData.get(result, Compoent.INHFSOCIALSECURITY, <span class="string">&quot;IICNT&quot;</span>)))</span><br><span class="line">        .add(RowData.add(<span class="string">&quot;失业参保人数&quot;</span>, GetData.get(result, Compoent.INHFSOCIALSECURITY, <span class="string">&quot;UICNT&quot;</span>)))</span><br><span class="line">        .toList(), doc, <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">5</span>&#125;, <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">2</span>&#125;, <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">3</span>&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="表格跨行跨列-1"><a href="#表格跨行跨列-1" class="headerlink" title="表格跨行跨列"></a>表格跨行跨列</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PdfUtil.TableBlueColRowSpan(<span class="number">4</span>, textFont, <span class="keyword">new</span> <span class="title class_">TableDataUtil</span>()</span><br><span class="line">        .add(RowData.add(<span class="string">&quot;科目&quot;</span>, <span class="string">&quot;报表年份&quot;</span>))</span><br><span class="line">        .add(balanceSheetKeys)</span><br><span class="line">        .addList(RowData.add(balanceSheetDataGroup, (data) -&gt; &#123;</span><br><span class="line">            List&lt;List&lt;String&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            data.forEach((k, v) -&gt; &#123;</span><br><span class="line">                List&lt;String&gt; row = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                row.add(k);</span><br><span class="line">                Map&lt;String, String&gt; kv = v.stream().collect(Collectors.toMap(key -&gt; String.valueOf(key.get(<span class="string">&quot;PeriodYear&quot;</span>)), value -&gt; String.valueOf(value.get(<span class="string">&quot;ClosingBalanceAsset&quot;</span>))));</span><br><span class="line">                balanceSheetKeysGroup.keySet().forEach(i -&gt; &#123;</span><br><span class="line">                    row.add(Optional.ofNullable(kv.get(i)).orElse(<span class="string">&quot;&quot;</span>));</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">if</span> (row.size() &lt; <span class="number">4</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> row.size() - <span class="number">1</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">                        row.add(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                res.add(row);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;))</span><br><span class="line">        .toList(), doc, <span class="keyword">new</span> <span class="title class_">int</span>[][]&#123;&#123;<span class="number">1</span>&#125;, &#123;<span class="number">1</span>&#125;&#125;, <span class="keyword">new</span> <span class="title class_">int</span>[][]&#123;&#123;<span class="number">2</span>&#125;, &#123;<span class="number">1</span>&#125;&#125;, <span class="keyword">new</span> <span class="title class_">int</span>[][]&#123;&#123;<span class="number">3</span>&#125;, &#123;<span class="number">2</span>&#125;&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="可视化图表-1"><a href="#可视化图表-1" class="headerlink" title="可视化图表"></a>可视化图表</h3><p><strong>饼图</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(<span class="number">2</span>);</span><br><span class="line">table.setTotalWidth(<span class="number">530</span>);</span><br><span class="line">table.setLockedWidth(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">PdfPCell</span> <span class="variable">leftImage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPCell</span>();</span><br><span class="line"></span><br><span class="line">bos = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">ChartUtils.writeChartAsJPEG(bos, ChartUtil.pieChart(String.join(<span class="string">&quot;&quot;</span>, balanceSheetChartDataGroup.keySet()) + <span class="string">&quot;资产结构&quot;</span>, balanceSheetPieData), <span class="number">400</span>, <span class="number">400</span>);</span><br><span class="line">image = Image.getInstance(bos.toByteArray());</span><br><span class="line">image.scalePercent(<span class="number">60</span>);</span><br><span class="line">leftImage.addElement(image);</span><br><span class="line">leftImage.disableBorderSide(-<span class="number">1</span>);</span><br><span class="line">table.addCell(leftImage);</span><br></pre></td></tr></table></figure>
<p><strong>柱状图</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">imageBaos = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">ChartUtils.writeChartAsJPEG(imageBaos, ChartUtil.barChart(<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, balanceSheetBarChartDataset, <span class="string">&quot;&#123;2&#125;%&quot;</span>), <span class="number">850</span>, <span class="number">330</span>);</span><br><span class="line">chartImage = Image.getInstance(imageBaos.toByteArray());</span><br><span class="line">chartImage.scalePercent(<span class="number">60</span>);</span><br><span class="line">doc.add(chartImage);</span><br></pre></td></tr></table></figure>
<p><strong>折线图</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ChartUtils.writeChartAsJPEG(imageBaos, ChartUtil.lineChart(<span class="string">&quot;用水量（立方）&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, waterLineDataset, CategoryLabelPositions.UP_90), <span class="number">850</span>, <span class="number">430</span>);</span><br><span class="line">chartImage = Image.getInstance(imageBaos.toByteArray());</span><br><span class="line">chartImage.scalePercent(<span class="number">60</span>);</span><br><span class="line">doc.add(chartImage);</span><br></pre></td></tr></table></figure>
<h2 id="工具类源码"><a href="#工具类源码" class="headerlink" title="工具类源码"></a>工具类源码</h2><h3 id="依赖包"><a href="#依赖包" class="headerlink" title="依赖包"></a>依赖包</h3><ul>
<li>itextpdf 5.5.6</li>
<li>jfreechart 1.5.3</li>
</ul>
<p><strong>大家根据实际使用场景删除代码</strong></p>
<h3 id="PdfUtil"><a href="#PdfUtil" class="headerlink" title="PdfUtil"></a>PdfUtil</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">PdfUtil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addLevel1Title</span><span class="params">(Document doc, String title)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="type">Paragraph</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paragraph</span>(title, secondTitleFont);</span><br><span class="line">        p1.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">        doc.add(p1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addLevel2Title</span><span class="params">(Document doc, String title)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="type">Paragraph</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paragraph</span>(title, threeTitleFont);</span><br><span class="line">        p1.setAlignment(Element.ALIGN_LEFT);</span><br><span class="line">        p1.setSpacingAfter(<span class="number">8</span>);</span><br><span class="line">        doc.add(p1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addOtherContent</span><span class="params">(Document doc, String content, <span class="type">int</span> alignment, Font fontSize, <span class="type">float</span> spacingAfter)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="type">Paragraph</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paragraph</span>(content, fontSize);</span><br><span class="line">        p1.setAlignment(alignment);</span><br><span class="line">        p1.setSpacingAfter(spacingAfter);</span><br><span class="line">        doc.add(p1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addLevel2Title</span><span class="params">(Document doc, String title, <span class="type">boolean</span> newPage)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        doc.newPage();</span><br><span class="line">        <span class="type">Paragraph</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paragraph</span>(title, threeTitleFont);</span><br><span class="line">        p1.setAlignment(Element.ALIGN_LEFT);</span><br><span class="line">        p1.setSpacingAfter(<span class="number">8</span>);</span><br><span class="line">        doc.add(p1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成一个表格</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> total    总列数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> textFont 字体</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data     表格数据     X行    Y列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> doc      PDF文档对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> DocumentException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hou_fx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Table</span><span class="params">(<span class="type">int</span> total, Font textFont, List&lt;List&lt;String&gt;&gt; data, Document doc)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line">        <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line">        table.setPaddingTop(<span class="number">20</span>);</span><br><span class="line">        table.setSpacingAfter(<span class="number">20</span>);</span><br><span class="line">        table.setTotalWidth(<span class="number">530</span>); <span class="comment">//设置列宽</span></span><br><span class="line">        table.setLockedWidth(<span class="literal">true</span>); <span class="comment">//锁定列宽</span></span><br><span class="line">        PdfPCell cell;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.size(); i++) &#123;  <span class="comment">//遍历数据行   每个数据行都是一个list</span></span><br><span class="line">            Iterator&lt;String&gt; it = data.get(i).iterator();</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;               <span class="comment">//遍历每行数据，每个数据都是一个单元格</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> it.next();</span><br><span class="line">                cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(text, textFont));</span><br><span class="line">                <span class="comment">//表头背景色</span></span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                    cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(text, textFontBold));</span><br><span class="line">                    cell.setBackgroundColor(<span class="keyword">new</span> <span class="title class_">BaseColor</span>(<span class="number">199</span>, <span class="number">217</span>, <span class="number">241</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line">                cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line"></span><br><span class="line">                cell.setHorizontalAlignment(i == <span class="number">0</span> ? Element.ALIGN_CENTER : Element.ALIGN_LEFT); <span class="comment">//表头居中，其余左对齐</span></span><br><span class="line">                cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line">                table.addCell(cell);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        doc.add(table);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TableNoAfter</span><span class="params">(<span class="type">int</span> total, Font textFont, List&lt;List&lt;String&gt;&gt; data, Document doc)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line">        <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line">        table.setPaddingTop(<span class="number">20</span>);</span><br><span class="line">        table.setTotalWidth(<span class="number">530</span>); <span class="comment">//设置列宽</span></span><br><span class="line">        table.setLockedWidth(<span class="literal">true</span>); <span class="comment">//锁定列宽</span></span><br><span class="line">        PdfPCell cell;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.size(); i++) &#123;  <span class="comment">//遍历数据行   每个数据行都是一个list</span></span><br><span class="line">            Iterator&lt;String&gt; it = data.get(i).iterator();</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;               <span class="comment">//遍历每行数据，每个数据都是一个单元格</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> it.next();</span><br><span class="line">                cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(text, textFont));</span><br><span class="line">                <span class="comment">//表头背景色</span></span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                    cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(text, textFontBold));</span><br><span class="line">                    cell.setBackgroundColor(<span class="keyword">new</span> <span class="title class_">BaseColor</span>(<span class="number">199</span>, <span class="number">217</span>, <span class="number">241</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line">                cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line"></span><br><span class="line">                cell.setHorizontalAlignment(i == <span class="number">0</span> ? Element.ALIGN_CENTER : Element.ALIGN_LEFT); <span class="comment">//表头居中，其余左对齐</span></span><br><span class="line">                cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line">                table.addCell(cell);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        doc.add(table);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TableNoPadding</span><span class="params">(<span class="type">int</span> total, Font textFont, List&lt;List&lt;String&gt;&gt; data, Document doc)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line">        <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line">        table.setTotalWidth(<span class="number">530</span>); <span class="comment">//设置列宽</span></span><br><span class="line">        table.setLockedWidth(<span class="literal">true</span>); <span class="comment">//锁定列宽</span></span><br><span class="line">        PdfPCell cell;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.size(); i++) &#123;  <span class="comment">//遍历数据行   每个数据行都是一个list</span></span><br><span class="line">            Iterator&lt;String&gt; it = data.get(i).iterator();</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;               <span class="comment">//遍历每行数据，每个数据都是一个单元格</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> it.next();</span><br><span class="line">                cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(text, textFont));</span><br><span class="line">                cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line">                cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line">                cell.setHorizontalAlignment(Element.ALIGN_LEFT); <span class="comment">//表头居中，其余左对齐</span></span><br><span class="line">                cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line">                table.addCell(cell);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        doc.add(table);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TableNoPaddingTop</span><span class="params">(<span class="type">int</span> total, Font textFont, List&lt;List&lt;String&gt;&gt; data, Document doc)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line">        <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line">        table.setPaddingTop(<span class="number">0.0f</span>);</span><br><span class="line">        table.setSpacingAfter(<span class="number">0.0f</span>);</span><br><span class="line">        table.setTotalWidth(<span class="number">530</span>); <span class="comment">//设置列宽</span></span><br><span class="line">        table.setLockedWidth(<span class="literal">true</span>); <span class="comment">//锁定列宽</span></span><br><span class="line">        PdfPCell cell;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.size(); i++) &#123;  <span class="comment">//遍历数据行   每个数据行都是一个list</span></span><br><span class="line">            Iterator&lt;String&gt; it = data.get(i).iterator();</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;               <span class="comment">//遍历每行数据，每个数据都是一个单元格</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> it.next();</span><br><span class="line">                cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(text, textFont));</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                    cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(text, textFontBold));</span><br><span class="line">                    cell.setBackgroundColor(<span class="keyword">new</span> <span class="title class_">BaseColor</span>(<span class="number">199</span>, <span class="number">217</span>, <span class="number">241</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line"></span><br><span class="line">                cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line">                <span class="comment">//表头背景色</span></span><br><span class="line"></span><br><span class="line">                cell.setHorizontalAlignment(i == <span class="number">0</span> ? Element.ALIGN_CENTER : Element.ALIGN_LEFT); <span class="comment">//表头居中，其余左对齐</span></span><br><span class="line">                cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line">                table.addCell(cell);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        doc.add(table);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">appearNumber</span><span class="params">(String srcText, String findText)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">p</span> <span class="operator">=</span> Pattern.compile(findText);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">m</span> <span class="operator">=</span> p.matcher(srcText);</span><br><span class="line">        <span class="keyword">while</span> (m.find()) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成一个表格</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> total    总列数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> textFont 字体</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data     表格数据     X行    Y列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> doc      PDF文档对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> DocumentException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hou_fx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TableBule</span><span class="params">(<span class="type">int</span> total, Font textFont, List&lt;List&lt;String&gt;&gt; data, Document doc)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line">        <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line">        table.setPaddingTop(<span class="number">20</span>);</span><br><span class="line">        table.setSpacingAfter(<span class="number">20</span>);</span><br><span class="line">        table.setTotalWidth(<span class="number">530</span>); <span class="comment">//设置列宽</span></span><br><span class="line">        table.setLockedWidth(<span class="literal">true</span>); <span class="comment">//锁定列宽</span></span><br><span class="line">        PdfPCell cell;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.size(); i++) &#123;  <span class="comment">//遍历数据行   每个数据行都是一个list</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; data.get(i).size(); j++) &#123;</span><br><span class="line">                cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(data.get(i).get(j), textFont));</span><br><span class="line">                <span class="comment">//第一个单元格背景色</span></span><br><span class="line">                <span class="keyword">if</span> (count % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(data.get(i).get(j), textFontBold));</span><br><span class="line">                    cell.setBackgroundColor(<span class="keyword">new</span> <span class="title class_">BaseColor</span>(<span class="number">199</span>, <span class="number">217</span>, <span class="number">241</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line">                cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line"></span><br><span class="line">                cell.setHorizontalAlignment(Element.ALIGN_LEFT); <span class="comment">//左对齐</span></span><br><span class="line">                cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line">                table.addCell(cell);</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        doc.add(table);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成一个表格</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> total    总列数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> textFont 字体</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data     表格数据     X行    Y列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> doc      PDF文档对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> colspan  第几列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowspan  第几行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> number   跨几列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> DocumentException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hou_fx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TableBuleColspan</span><span class="params">(<span class="type">int</span> total, Font textFont, List&lt;List&lt;String&gt;&gt; data, Document doc, <span class="type">int</span>[] rowspan, <span class="type">int</span>[] colspan, <span class="type">int</span>[] number)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line">        <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line">        table.setPaddingTop(<span class="number">20</span>);</span><br><span class="line">        table.setSpacingAfter(<span class="number">20</span>);</span><br><span class="line">        table.setTotalWidth(<span class="number">530</span>); <span class="comment">//设置列宽</span></span><br><span class="line">        table.setLockedWidth(<span class="literal">true</span>); <span class="comment">//锁定列宽</span></span><br><span class="line">        PdfPCell cell;</span><br><span class="line">        <span class="comment">//数组下标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">cos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.size(); i++) &#123;  <span class="comment">//遍历数据行   每个数据行都是一个list</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; data.get(i).size(); j++) &#123;</span><br><span class="line">                cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(data.get(i).get(j), textFont));</span><br><span class="line">                <span class="comment">//第一个单元格背景色</span></span><br><span class="line">                <span class="keyword">if</span> (j % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(data.get(i).get(j), textFontBold));</span><br><span class="line">                    cell.setBackgroundColor(<span class="keyword">new</span> <span class="title class_">BaseColor</span>(<span class="number">199</span>, <span class="number">217</span>, <span class="number">241</span>)); <span class="comment">//173,216,230</span></span><br><span class="line">                &#125;</span><br><span class="line">                cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line">                cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (cos &lt; rowspan.length &amp;&amp; i == rowspan[cos] - <span class="number">1</span> &amp;&amp; count == colspan[cos] - <span class="number">1</span>) &#123;</span><br><span class="line">                    cell.setColspan(number[cos]);<span class="comment">//跨单元格</span></span><br><span class="line">                    cos++;</span><br><span class="line">                &#125;</span><br><span class="line">                cell.setHorizontalAlignment(Element.ALIGN_LEFT); <span class="comment">//左对齐</span></span><br><span class="line">                cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line">                table.addCell(cell);</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        doc.add(table);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成一个表格</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> total    总列数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> textFont 字体</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data     表格数据     X行    Y列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> doc      PDF文档对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> colspan  第几列 [][] 0 跨列 1 跨行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowspan  第几行 [][] 0 跨列 1 跨行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> number   跨几列 [][] 0 跨列 1 跨行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> DocumentException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hou_fx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TableBlueColRowSpan</span><span class="params">(<span class="type">int</span> total, Font textFont, List&lt;List&lt;String&gt;&gt; data, Document doc, <span class="type">int</span>[][] rowspan, <span class="type">int</span>[][] colspan, <span class="type">int</span>[][] number)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line">        <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line">        table.setPaddingTop(<span class="number">20</span>);</span><br><span class="line">        table.setSpacingAfter(<span class="number">20</span>);</span><br><span class="line">        table.setTotalWidth(<span class="number">530</span>); <span class="comment">//设置列宽</span></span><br><span class="line">        table.setLockedWidth(<span class="literal">true</span>); <span class="comment">//锁定列宽</span></span><br><span class="line">        PdfPCell cell;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, cos = <span class="number">0</span>, ros = <span class="number">0</span>; i &lt; data.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; data.get(i).size(); j++) &#123;</span><br><span class="line">                cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(data.get(i).get(j), textFont));</span><br><span class="line">                <span class="keyword">if</span> (total != data.get(i).size()) &#123;</span><br><span class="line">                    cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(data.get(i).get(j), textFontBold));</span><br><span class="line">                    cell.setBackgroundColor(<span class="keyword">new</span> <span class="title class_">BaseColor</span>(<span class="number">199</span>, <span class="number">217</span>, <span class="number">241</span>)); <span class="comment">//173,216,230</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (data.get(i).get(j).contains(<span class="string">&quot;合计&quot;</span>) || data.get(i).get(j).contains(<span class="string">&quot;总计&quot;</span>)) &#123;</span><br><span class="line">                    cell.setBackgroundColor(<span class="keyword">new</span> <span class="title class_">BaseColor</span>(<span class="number">79</span>, <span class="number">129</span>, <span class="number">189</span>)); <span class="comment">//173,216,230</span></span><br><span class="line">                &#125;</span><br><span class="line">                cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line">                cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line">                cell.setHorizontalAlignment(Element.ALIGN_CENTER); <span class="comment">//左对齐</span></span><br><span class="line">                cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (cos &lt; rowspan[<span class="number">0</span>].length &amp;&amp; i == rowspan[<span class="number">0</span>][cos] - <span class="number">1</span> &amp;&amp; j == colspan[<span class="number">0</span>][cos] - <span class="number">1</span>) &#123;</span><br><span class="line">                    cell.setColspan(number[<span class="number">0</span>][cos]);</span><br><span class="line">                    cos++;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (ros &lt; rowspan[<span class="number">1</span>].length &amp;&amp; i == rowspan[<span class="number">1</span>][ros] - <span class="number">1</span> &amp;&amp; j == colspan[<span class="number">1</span>][ros] - <span class="number">1</span>) &#123;</span><br><span class="line">                    cell.setRowspan(number[<span class="number">1</span>][ros]);</span><br><span class="line">                    ros++;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                table.addCell(cell);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        doc.add(table);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成一个表格</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> total    总列数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> textFont 字体</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data     表格数据     X行    Y列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> doc      PDF文档对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> colspan  第几列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowspan  第几行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> number   跨几列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> DocumentException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hou_fx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TableColspan</span><span class="params">(<span class="type">int</span> total, Font textFont, List&lt;List&lt;String&gt;&gt; data, Document doc, <span class="type">int</span>[] rowspan, <span class="type">int</span>[] colspan, <span class="type">int</span>[] number)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line">        <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line">        table.setPaddingTop(<span class="number">20</span>);</span><br><span class="line">        table.setSpacingAfter(<span class="number">20</span>);</span><br><span class="line">        table.setTotalWidth(<span class="number">530</span>); <span class="comment">//设置列宽</span></span><br><span class="line">        table.setLockedWidth(<span class="literal">true</span>); <span class="comment">//锁定列宽</span></span><br><span class="line">        PdfPCell cell;</span><br><span class="line">        <span class="comment">//数组下标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">cos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.size(); i++) &#123;  <span class="comment">//遍历数据行   每个数据行都是一个list</span></span><br><span class="line">            Iterator&lt;String&gt; it = data.get(i).iterator();</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;               <span class="comment">//遍历每行数据，每个数据都是一个单元格</span></span><br><span class="line">                cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(it.next(), textFont));</span><br><span class="line">                cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line">                cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line">                <span class="keyword">if</span> (cos &lt; rowspan.length &amp;&amp; i == rowspan[cos] - <span class="number">1</span> &amp;&amp; count == colspan[cos] - <span class="number">1</span>) &#123;</span><br><span class="line">                    cell.setColspan(number[cos]);<span class="comment">//跨单元格</span></span><br><span class="line">                    cos++;</span><br><span class="line">                &#125;</span><br><span class="line">                cell.setHorizontalAlignment(Element.ALIGN_LEFT);</span><br><span class="line">                cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line">                table.addCell(cell);</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        doc.add(table);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TableColspanNo</span><span class="params">(<span class="type">int</span> total, Font textFont, List&lt;List&lt;String&gt;&gt; data, Document doc, <span class="type">int</span>[] rowspan, <span class="type">int</span>[] colspan, <span class="type">int</span>[] number)</span> <span class="keyword">throws</span> DocumentException &#123;</span><br><span class="line">        <span class="comment">// 创建一个有N列的表格</span></span><br><span class="line">        <span class="type">PdfPTable</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfPTable</span>(total);</span><br><span class="line">        <span class="comment">//设置列宽</span></span><br><span class="line">        table.setTotalWidth(<span class="number">530</span>);</span><br><span class="line">        <span class="comment">//锁定列宽</span></span><br><span class="line">        table.setLockedWidth(<span class="literal">true</span>);</span><br><span class="line">        PdfPCell cell;</span><br><span class="line">        <span class="comment">//数组下标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">cos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.size(); i++) &#123;  <span class="comment">//遍历数据行   每个数据行都是一个list</span></span><br><span class="line">            Iterator&lt;String&gt; it = data.get(i).iterator();</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;               <span class="comment">//遍历每行数据，每个数据都是一个单元格</span></span><br><span class="line">                cell = <span class="keyword">new</span> <span class="title class_">PdfPCell</span>(<span class="keyword">new</span> <span class="title class_">Phrase</span>(it.next(), textFont));</span><br><span class="line">                cell.setMinimumHeight(<span class="number">17</span>); <span class="comment">//设置单元格高度</span></span><br><span class="line">                cell.setUseAscender(<span class="literal">true</span>); <span class="comment">//设置可以居中</span></span><br><span class="line">                <span class="keyword">if</span> (cos &lt; rowspan.length &amp;&amp; i == rowspan[cos] - <span class="number">1</span> &amp;&amp; count == colspan[cos] - <span class="number">1</span>) &#123;</span><br><span class="line">                    cell.setColspan(number[cos]);<span class="comment">//跨单元格</span></span><br><span class="line">                    cos++;</span><br><span class="line">                &#125;</span><br><span class="line">                cell.setHorizontalAlignment(Element.ALIGN_LEFT);</span><br><span class="line">                cell.setVerticalAlignment(Element.ALIGN_MIDDLE); <span class="comment">//设置垂直居中</span></span><br><span class="line">                table.addCell(cell);</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        doc.add(table);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="GetData"><a href="#GetData" class="headerlink" title="GetData"></a>GetData</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">GetData</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Map&lt;String, String&gt; desensitizationData = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;EntName&quot;</span>, <span class="string">&quot;深圳******有限公司&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;RegAddress&quot;</span>, <span class="string">&quot;深圳市**区******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;SocialCreditCode&quot;</span>, <span class="string">&quot;9***************1&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;ESocialCreditCode&quot;</span>, <span class="string">&quot;9***************1&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;EntRegNo&quot;</span>, <span class="string">&quot;1*******0&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;Legal&quot;</span>, <span class="string">&quot;***&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;EntOrgCode&quot;</span>, <span class="string">&quot;1********0&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;ShareholderName&quot;</span>, <span class="string">&quot;***&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;FDDBRXM&quot;</span>, <span class="string">&quot;***&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;FDDBRSFZJHM&quot;</span>, <span class="string">&quot;440**************2&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;FDDBRGDDH&quot;</span>, <span class="string">&quot;0755-*******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;FDDBRYDDH&quot;</span>, <span class="string">&quot;13********0&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;MemberName&quot;</span>, <span class="string">&quot;***&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;InvestName&quot;</span>, <span class="string">&quot;深圳******有限公司&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;ChangeItem&quot;</span>, <span class="string">&quot;***变更&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;ChangeBefore&quot;</span>, <span class="string">&quot;*****&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;ChangeAfter&quot;</span>, <span class="string">&quot;********&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;AccFundNo&quot;</span>, <span class="string">&quot;10*******3&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;SocialSecurityNo&quot;</span>, <span class="string">&quot;1******0&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;RestrictDesc&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;PatentName&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;PubNo&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;WorkName&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;RegNum&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;TrademarkName&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;RregCode&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;LicenseNo&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;CaseReason&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;CaseNo&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;CaseName&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;PunishContent&quot;</span>, <span class="string">&quot;******&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;ViolationCaseNo&quot;</span>, <span class="string">&quot;*********&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;projectName&quot;</span>, <span class="string">&quot;*********&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;WebSite&quot;</span>, <span class="string">&quot;*********&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;Tel&quot;</span>, <span class="string">&quot;*********&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;Phone&quot;</span>, <span class="string">&quot;*********&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;IDNo&quot;</span>, <span class="string">&quot;*********&quot;</span>);</span><br><span class="line">        desensitizationData.put(<span class="string">&quot;CaseCode&quot;</span>, <span class="string">&quot;*********&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">(Map map, Compoent compoent, String key)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">data</span> <span class="operator">=</span> Optional.ofNullable((List) map.get(compoent.getValue())).orElse(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br><span class="line">        <span class="type">IMap</span> <span class="variable">imap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IMap</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (data.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data.get(<span class="number">0</span>) <span class="keyword">instanceof</span> JSONObject) &#123;</span><br><span class="line">                ((JSONObject) data.get(<span class="number">0</span>)).forEach(imap::put);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Optional.ofNullable(imap.get(key)).orElse(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">(Map map, Compoent compoent, String key, <span class="type">boolean</span> desensitization)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">data</span> <span class="operator">=</span> Optional.ofNullable((List) map.get(compoent.getValue())).orElse(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br><span class="line">        <span class="type">IMap</span> <span class="variable">imap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IMap</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (data.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data.get(<span class="number">0</span>) <span class="keyword">instanceof</span> JSONObject) &#123;</span><br><span class="line">                <span class="keyword">if</span> (desensitization) &#123;</span><br><span class="line">                    ((JSONObject) data.get(<span class="number">0</span>)).forEach((k, v) -&gt; &#123;</span><br><span class="line">                        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> String.valueOf(v);</span><br><span class="line">                        imap.put(k, desensitizationData.getOrDefault(k, s));</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    ((JSONObject) data.get(<span class="number">0</span>)).forEach(imap::put);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Optional.ofNullable(imap.get(key)).orElse(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;List&lt;String&gt;&gt; <span class="title function_">get</span><span class="params">(Map result, Compoent compoent, String... keys)</span> &#123;</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Optional.ofNullable(result.get(compoent.getValue())).ifPresent(v -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (v <span class="keyword">instanceof</span> ArrayList) &#123;</span><br><span class="line">                ((ArrayList) v).forEach(o -&gt; &#123;</span><br><span class="line">                    List&lt;String&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                    <span class="type">JSONObject</span> <span class="variable">item</span> <span class="operator">=</span> ((JSONObject) o);</span><br><span class="line">                    <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">                        data.add(StringUtils.isEmpty(item.getString(key)) ? <span class="string">&quot;-&quot;</span> : item.getString(key));</span><br><span class="line">                    &#125;</span><br><span class="line">                    res.add(data);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span> (res.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            List&lt;String&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; keys.length; i++) &#123;</span><br><span class="line">                data.add(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            res.add(data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;List&lt;String&gt;&gt; <span class="title function_">get</span><span class="params">(Boolean desensitization, Map result, Compoent compoent, String... keys)</span> &#123;</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Optional.ofNullable(result.get(compoent.getValue())).ifPresent(v -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (v <span class="keyword">instanceof</span> ArrayList) &#123;</span><br><span class="line">                ((ArrayList) v).forEach(o -&gt; &#123;</span><br><span class="line">                    List&lt;String&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                    <span class="type">JSONObject</span> <span class="variable">item</span> <span class="operator">=</span> ((JSONObject) o);</span><br><span class="line">                    <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (desensitization) &#123;</span><br><span class="line">                            data.add(StringUtils.isEmpty(item.getString(key)) ? <span class="string">&quot;-&quot;</span> : desensitizationData.get(key) == <span class="literal">null</span> ? item.getString(key) : desensitizationData.get(key));</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            data.add(StringUtils.isEmpty(item.getString(key)) ? <span class="string">&quot;-&quot;</span> : item.getString(key));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    res.add(data);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span> (res.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            List&lt;String&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; keys.length; i++) &#123;</span><br><span class="line">                data.add(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            res.add(data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;List&lt;String&gt;&gt; <span class="title function_">get</span><span class="params">(Map result, Predicate&lt;JSONObject&gt; predicate, Compoent compoent, String... keys)</span> &#123;</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Optional.ofNullable(result.get(compoent.getValue())).ifPresent(v -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (v <span class="keyword">instanceof</span> ArrayList) &#123;</span><br><span class="line">                ((ArrayList) v).stream().filter(predicate).forEach(o -&gt; &#123;</span><br><span class="line">                    List&lt;String&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                    <span class="type">JSONObject</span> <span class="variable">item</span> <span class="operator">=</span> ((JSONObject) o);</span><br><span class="line">                    <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">                        data.add(StringUtils.isEmpty(item.getString(key)) ? <span class="string">&quot;-&quot;</span> : item.getString(key));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (data.size() == <span class="number">0</span>) &#123;</span><br><span class="line">                        List&lt;String&gt; row = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; keys.length; i++) &#123;</span><br><span class="line">                            row.add(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        data.addAll(row);</span><br><span class="line">                    &#125;</span><br><span class="line">                    res.add(data);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Map&gt; <span class="title function_">getListMap</span><span class="params">(Map result, Compoent compoent, String... keys)</span> &#123;</span><br><span class="line">        List&lt;Map&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Optional.ofNullable(result.get(compoent.getValue())).ifPresent(v -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (v <span class="keyword">instanceof</span> ArrayList) &#123;</span><br><span class="line">                ((ArrayList) v).forEach(o -&gt; &#123;</span><br><span class="line">                    <span class="type">JSONObject</span> <span class="variable">item</span> <span class="operator">=</span> ((JSONObject) o);</span><br><span class="line">                    <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>(<span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">                        map.put(key, StringUtils.isEmpty(item.getString(key)) ? <span class="string">&quot;-&quot;</span> : item.getString(key));</span><br><span class="line">                    &#125;</span><br><span class="line">                    data.add(map);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="RowData"><a href="#RowData" class="headerlink" title="RowData"></a>RowData</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">RowData</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title function_">add</span><span class="params">(String... cells)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.asList(cells);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title function_">add</span><span class="params">(String cells, List&lt;String&gt; datas)</span> &#123;</span><br><span class="line">        datas.add(<span class="number">0</span>, cells);</span><br><span class="line">        <span class="keyword">return</span> datas;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title function_">add</span><span class="params">(String cells, Map&lt;String, String&gt; data, Function&lt;Map&lt;String, String&gt;, List&lt;String&gt;&gt; func)</span> &#123;</span><br><span class="line">        List&lt;String&gt; res = func.apply(data);</span><br><span class="line">        res.add(<span class="number">0</span>, cells);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;List&lt;String&gt;&gt; <span class="title function_">add</span><span class="params">(Map&lt;String, List&lt;Map&gt;&gt; data, Function&lt;Map&lt;String, List&lt;Map&gt;&gt;, List&lt;List&lt;String&gt;&gt;&gt; func)</span> &#123;</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; res = func.apply(data);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="TableDataUtil"><a href="#TableDataUtil" class="headerlink" title="TableDataUtil"></a>TableDataUtil</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">TableDataUtil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;String&gt;&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> TableDataUtil <span class="title function_">add</span><span class="params">(List&lt;String&gt; rowData)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (rowData != <span class="literal">null</span> &amp;&amp; rowData.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            data.add(rowData);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> TableDataUtil <span class="title function_">addList</span><span class="params">(List&lt;List&lt;String&gt;&gt; rowData)</span> &#123;</span><br><span class="line">        data.addAll(rowData);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;String&gt;&gt; <span class="title function_">toList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> TableDataUtil <span class="title function_">add</span><span class="params">(Map&lt;String, List&lt;Map&gt;&gt; data, Function&lt;Map&lt;String, List&lt;Map&gt;&gt;, List&lt;List&lt;String&gt;&gt;&gt; res)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data.addAll(res.apply(data));</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="ChartUtil"><a href="#ChartUtil" class="headerlink" title="ChartUtil"></a>ChartUtil</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ChartUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Color[] BAR_COLORS = <span class="keyword">new</span> <span class="title class_">Color</span>[]&#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">79</span>, <span class="number">129</span>, <span class="number">189</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">192</span>, <span class="number">80</span>, <span class="number">77</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">155</span>, <span class="number">187</span>, <span class="number">89</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">128</span>, <span class="number">100</span>, <span class="number">162</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">75</span>, <span class="number">172</span>, <span class="number">198</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">247</span>, <span class="number">150</span>, <span class="number">70</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">119</span>, <span class="number">44</span>, <span class="number">42</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">77</span>, <span class="number">59</span>, <span class="number">98</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">182</span>, <span class="number">87</span>, <span class="number">8</span>),</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Color[] LINE_COLORS = <span class="keyword">new</span> <span class="title class_">Color</span>[]&#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">90</span>, <span class="number">154</span>, <span class="number">213</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">237</span>, <span class="number">123</span>, <span class="number">46</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">155</span>, <span class="number">187</span>, <span class="number">89</span>),</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Color[] PIE_COLORS = <span class="keyword">new</span> <span class="title class_">Color</span>[]&#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">79</span>, <span class="number">129</span>, <span class="number">189</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">192</span>, <span class="number">80</span>, <span class="number">77</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">155</span>, <span class="number">187</span>, <span class="number">89</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">128</span>, <span class="number">100</span>, <span class="number">162</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">75</span>, <span class="number">172</span>, <span class="number">198</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">247</span>, <span class="number">150</span>, <span class="number">70</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">119</span>, <span class="number">44</span>, <span class="number">42</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">77</span>, <span class="number">59</span>, <span class="number">98</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">182</span>, <span class="number">87</span>, <span class="number">8</span>),</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> StandardChartTheme <span class="title function_">initChartTheme</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">StandardChartTheme</span> <span class="variable">currentTheme</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StandardChartTheme</span>(<span class="string">&quot;JFree&quot;</span>);</span><br><span class="line">        currentTheme.setLargeFont(<span class="keyword">new</span> <span class="title class_">java</span>.awt.Font(<span class="string">&quot;宋体&quot;</span>, java.awt.Font.BOLD, <span class="number">15</span>));</span><br><span class="line">        currentTheme.setRegularFont(<span class="keyword">new</span> <span class="title class_">java</span>.awt.Font(<span class="string">&quot;宋体&quot;</span>, java.awt.Font.PLAIN, <span class="number">13</span>));</span><br><span class="line">        currentTheme.setExtraLargeFont(<span class="keyword">new</span> <span class="title class_">java</span>.awt.Font(<span class="string">&quot;宋体&quot;</span>, java.awt.Font.BOLD, <span class="number">20</span>));</span><br><span class="line">        currentTheme.setPlotBackgroundPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">204</span>, <span class="number">0</span>));</span><br><span class="line">        currentTheme.setPlotOutlinePaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        currentTheme.setRangeGridlinePaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">78</span>, <span class="number">74</span>, <span class="number">74</span>));</span><br><span class="line">        <span class="keyword">return</span> currentTheme;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 线图</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> title             标题</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> categoryAxisLabel 分类标签</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> valueAxisLabel    数值标签</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataset           数据集</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> org.jfree.chart.JFreeChart</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021.8.4 10:39</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">lineChart</span><span class="params">(String title, String categoryAxisLabel, String valueAxisLabel, DefaultCategoryDataset dataset)</span> &#123;</span><br><span class="line">        ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line"></span><br><span class="line">        <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createLineChart(</span><br><span class="line">                title,</span><br><span class="line">                categoryAxisLabel,</span><br><span class="line">                valueAxisLabel,</span><br><span class="line">                dataset,</span><br><span class="line">                PlotOrientation.VERTICAL,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="type">CategoryPlot</span> <span class="variable">plot</span> <span class="operator">=</span> chart.getCategoryPlot();</span><br><span class="line">        <span class="type">LineAndShapeRenderer</span> <span class="variable">renderer</span> <span class="operator">=</span> (LineAndShapeRenderer) plot.getRenderer();</span><br><span class="line">        renderer.setDefaultItemLabelsVisible(<span class="literal">true</span>);</span><br><span class="line">        renderer.setDefaultItemLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardCategoryItemLabelGenerator</span>());</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getRowKeys().size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; LINE_COLORS.length - <span class="number">1</span>) &#123;</span><br><span class="line">                renderer.setSeriesPaint(i, <span class="keyword">new</span> <span class="title class_">Color</span>(RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>)));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                renderer.setSeriesPaint(i, LINE_COLORS[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chart;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">lineChart</span><span class="params">(String title, String categoryAxisLabel, String valueAxisLabel, DefaultCategoryDataset dataset, CategoryLabelPositions position)</span> &#123;</span><br><span class="line">        ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line"></span><br><span class="line">        <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createLineChart(</span><br><span class="line">                title,</span><br><span class="line">                categoryAxisLabel,</span><br><span class="line">                valueAxisLabel,</span><br><span class="line">                dataset,</span><br><span class="line">                PlotOrientation.VERTICAL,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="type">CategoryPlot</span> <span class="variable">plot</span> <span class="operator">=</span> chart.getCategoryPlot();</span><br><span class="line">        plot.getDomainAxis().setCategoryLabelPositions(position);</span><br><span class="line">        <span class="type">LineAndShapeRenderer</span> <span class="variable">renderer</span> <span class="operator">=</span> (LineAndShapeRenderer) plot.getRenderer();</span><br><span class="line">        renderer.setDefaultItemLabelsVisible(<span class="literal">true</span>);</span><br><span class="line">        renderer.setDefaultItemLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardCategoryItemLabelGenerator</span>());</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getRowKeys().size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; LINE_COLORS.length - <span class="number">1</span>) &#123;</span><br><span class="line">                renderer.setSeriesPaint(i, <span class="keyword">new</span> <span class="title class_">Color</span>(RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>)));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                renderer.setSeriesPaint(i, LINE_COLORS[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chart;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 柱状图</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> title</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> categoryAxisLabel</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> valueAxisLabel</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataset           数据集</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> org.jfree.chart.JFreeChart</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021.8.4 14:03</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">barChart</span><span class="params">(String title, String categoryAxisLabel, String valueAxisLabel, DefaultCategoryDataset dataset)</span> &#123;</span><br><span class="line">        ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line">        <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createBarChart(</span><br><span class="line">                title,</span><br><span class="line">                categoryAxisLabel,</span><br><span class="line">                valueAxisLabel,</span><br><span class="line">                dataset,</span><br><span class="line">                PlotOrientation.VERTICAL,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">        );</span><br><span class="line">        <span class="type">CategoryPlot</span> <span class="variable">plot</span> <span class="operator">=</span> chart.getCategoryPlot();</span><br><span class="line">        <span class="type">BarRenderer</span> <span class="variable">renderer</span> <span class="operator">=</span> (BarRenderer) plot.getRenderer();</span><br><span class="line">        renderer.setBarPainter(<span class="keyword">new</span> <span class="title class_">StandardBarPainter</span>());</span><br><span class="line">        renderer.setDefaultItemLabelsVisible(<span class="literal">true</span>);</span><br><span class="line">        renderer.setDefaultItemLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardCategoryItemLabelGenerator</span>());</span><br><span class="line">        renderer.setItemMargin(<span class="number">0.0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getRowKeys().size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; BAR_COLORS.length - <span class="number">1</span>) &#123;</span><br><span class="line">                renderer.setSeriesPaint(i, <span class="keyword">new</span> <span class="title class_">Color</span>(RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>)));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                renderer.setSeriesPaint(i, BAR_COLORS[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chart;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">barChart2</span><span class="params">(String title, String categoryAxisLabel, String valueAxisLabel, DefaultCategoryDataset dataset, DefaultCategoryDataset dataset2, String format2)</span> &#123;</span><br><span class="line">        ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line">        <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createBarChart(</span><br><span class="line">                title,</span><br><span class="line">                categoryAxisLabel,</span><br><span class="line">                valueAxisLabel,</span><br><span class="line">                dataset,</span><br><span class="line">                PlotOrientation.VERTICAL,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">        );</span><br><span class="line">        <span class="type">CategoryPlot</span> <span class="variable">plot</span> <span class="operator">=</span> chart.getCategoryPlot();</span><br><span class="line">        <span class="type">NumberAxis</span> <span class="variable">axis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NumberAxis</span>();</span><br><span class="line">        axis.setNumberFormatOverride(<span class="keyword">new</span> <span class="title class_">DecimalFormat</span>(<span class="string">&quot;#,##%&quot;</span>));</span><br><span class="line">        plot.setRangeAxis(<span class="number">1</span>, axis);</span><br><span class="line">        plot.setRangeAxisLocation(<span class="number">1</span>, AxisLocation.BOTTOM_OR_RIGHT);</span><br><span class="line">        plot.setDataset(<span class="number">1</span>, dataset2);</span><br><span class="line">        plot.mapDatasetToRangeAxis(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="type">BarRenderer</span> <span class="variable">renderer2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BarRenderer</span>();</span><br><span class="line">        renderer2.setSeriesPaint(<span class="number">0</span>, <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">238</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">0</span>));</span><br><span class="line">        renderer2.setDefaultItemLabelsVisible(<span class="literal">true</span>);</span><br><span class="line">        renderer2.setDefaultItemLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardCategoryItemLabelGenerator</span>(format2, NumberFormat.getInstance()));</span><br><span class="line">        <span class="type">ItemLabelPosition</span> <span class="variable">position1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemLabelPosition</span>(ItemLabelAnchor.INSIDE12, TextAnchor.TOP_RIGHT);</span><br><span class="line">        renderer2.setDefaultPositiveItemLabelPosition(position1);</span><br><span class="line">        plot.setRenderer(<span class="number">1</span>, renderer2);</span><br><span class="line"></span><br><span class="line">        <span class="type">BarRenderer</span> <span class="variable">renderer</span> <span class="operator">=</span> (BarRenderer) plot.getRenderer();</span><br><span class="line">        renderer.setBarPainter(<span class="keyword">new</span> <span class="title class_">StandardBarPainter</span>());</span><br><span class="line">        renderer.setDefaultItemLabelsVisible(<span class="literal">true</span>);</span><br><span class="line">        renderer.setDefaultItemLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardCategoryItemLabelGenerator</span>());</span><br><span class="line">        renderer.setItemMargin(<span class="number">0.0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getRowKeys().size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; BAR_COLORS.length - <span class="number">1</span>) &#123;</span><br><span class="line">                renderer.setSeriesPaint(i, <span class="keyword">new</span> <span class="title class_">Color</span>(RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>)));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                renderer.setSeriesPaint(i, BAR_COLORS[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chart;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">barChart</span><span class="params">(String title, String categoryAxisLabel, String valueAxisLabel, DefaultCategoryDataset dataset, String format)</span> &#123;</span><br><span class="line">        ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line"></span><br><span class="line">        <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createBarChart(</span><br><span class="line">                title,</span><br><span class="line">                categoryAxisLabel,</span><br><span class="line">                valueAxisLabel,</span><br><span class="line">                dataset,</span><br><span class="line">                PlotOrientation.VERTICAL,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="type">CategoryPlot</span> <span class="variable">plot</span> <span class="operator">=</span> chart.getCategoryPlot();</span><br><span class="line">        <span class="type">BarRenderer</span> <span class="variable">renderer</span> <span class="operator">=</span> (BarRenderer) plot.getRenderer();</span><br><span class="line">        renderer.setBarPainter(<span class="keyword">new</span> <span class="title class_">StandardBarPainter</span>());</span><br><span class="line">        renderer.setDefaultItemLabelsVisible(<span class="literal">true</span>);</span><br><span class="line">        renderer.setDefaultItemLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardCategoryItemLabelGenerator</span>(format, NumberFormat.getInstance()));</span><br><span class="line">        renderer.setItemMargin(<span class="number">0.0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getRowKeys().size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; BAR_COLORS.length - <span class="number">1</span>) &#123;</span><br><span class="line">                renderer.setSeriesPaint(i, <span class="keyword">new</span> <span class="title class_">Color</span>(RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>)));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                renderer.setSeriesPaint(i, BAR_COLORS[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chart;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 饼图</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> title</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataset</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> org.jfree.chart.JFreeChart</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021.8.4 14:04</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JFreeChart <span class="title function_">pieChart</span><span class="params">(String title, DefaultPieDataset&lt;String&gt; dataset)</span> &#123;</span><br><span class="line">        ChartFactory.setChartTheme(initChartTheme());</span><br><span class="line"></span><br><span class="line">        <span class="type">JFreeChart</span> <span class="variable">chart</span> <span class="operator">=</span> ChartFactory.createPieChart(</span><br><span class="line">                title,</span><br><span class="line">                dataset,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">        );</span><br><span class="line">        <span class="type">PiePlot</span> <span class="variable">plot</span> <span class="operator">=</span> (PiePlot) chart.getPlot();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataset.getKeys().size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; PIE_COLORS.length - <span class="number">1</span>) &#123;</span><br><span class="line">                plot.setSectionPaint(dataset.getKey(i), <span class="keyword">new</span> <span class="title class_">Color</span>(RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>), RandomUtils.nextInt(<span class="number">110</span>, <span class="number">200</span>)));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                plot.setSectionPaint(dataset.getKey(i), PIE_COLORS[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        plot.setDefaultSectionOutlinePaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">        plot.setDefaultSectionOutlineStroke(<span class="keyword">new</span> <span class="title class_">BasicStroke</span>(<span class="number">3</span>));</span><br><span class="line">        <span class="comment">//plot.setLabelLinkPaint(new Color(255, 255, 255, 0));</span></span><br><span class="line">        plot.setLabelBackgroundPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        plot.setLabelOutlinePaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        plot.setLabelShadowPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        plot.setShadowPaint(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">//plot.setLabelGenerator(new StandardPieSectionLabelGenerator((&quot;&#123;0&#125;&#123;2&#125;&quot;), NumberFormat.getNumberInstance(), new DecimalFormat(&quot;0.00%&quot;)));</span></span><br><span class="line">        plot.setLabelGenerator(<span class="keyword">new</span> <span class="title class_">StandardPieSectionLabelGenerator</span>((<span class="string">&quot;&#123;2&#125;&quot;</span>), NumberFormat.getNumberInstance(), <span class="keyword">new</span> <span class="title class_">DecimalFormat</span>(<span class="string">&quot;0.00%&quot;</span>)));</span><br><span class="line">        <span class="keyword">return</span> chart;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>itextpdf</tag>
        <tag>JFreeChart</tag>
        <tag>可视化图表</tag>
      </tags>
  </entry>
  <entry>
    <title>java-使用google.zxing生成二维码</title>
    <url>/2022/08/18/java-%E4%BD%BF%E7%94%A8google.zxing%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
    <content><![CDATA[<h3 id="1-导入maven依赖"><a href="#1-导入maven依赖" class="headerlink" title="1. 导入maven依赖"></a>1. 导入maven依赖</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">3.1</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javase&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">3.1</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="2-二维码工具类"><a href="#2-二维码工具类" class="headerlink" title="2. 二维码工具类"></a>2. 二维码工具类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.odp.api.common.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.zxing.BarcodeFormat;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.EncodeHintType;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.MultiFormatWriter;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.common.BitMatrix;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: hou_fx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span>: created in  下午6:02 2019/11/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QRCodeUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CHARSET</span> <span class="operator">=</span> <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title function_">createImage</span><span class="params">(String content, <span class="type">int</span> width, <span class="type">int</span> height )</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Hashtable&lt;EncodeHintType, Object&gt; hints = <span class="keyword">new</span> <span class="title class_">Hashtable</span>&lt;EncodeHintType, Object&gt;();</span><br><span class="line">        hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);</span><br><span class="line">        hints.put(EncodeHintType.CHARACTER_SET, CHARSET);</span><br><span class="line">        hints.put(EncodeHintType.MARGIN, <span class="number">1</span>);</span><br><span class="line">        <span class="type">BitMatrix</span> <span class="variable">bitMatrix</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MultiFormatWriter</span>().encode(content, BarcodeFormat.QR_CODE, width, height,</span><br><span class="line">                hints);</span><br><span class="line">        width = bitMatrix.getWidth();</span><br><span class="line">        height = bitMatrix.getHeight();</span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; width; x++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>; y &lt; height; y++) &#123;</span><br><span class="line">                image.setRGB(x, y, bitMatrix.get(x, y) ? <span class="number">0xFF000000</span> : <span class="number">0xFFFFFFFF</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-生成二维码图片"><a href="#3-生成二维码图片" class="headerlink" title="3. 生成二维码图片"></a>3. 生成二维码图片</h3><pre><code>调用工具类生成二维码，返回BufferedImage,根据需求将图片转为需要的数据,如转为base64等、
</code></pre>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line"><span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> QRCodeUtil.createImage(targetUrl, <span class="number">460</span>, <span class="number">460</span>);</span><br><span class="line">ImageIO.write(image, <span class="string">&quot;PNG&quot;</span>, baos);</span><br><span class="line">Base64.getEncoder().encodeToString(baos.toByteArray());</span><br></pre></td></tr></table></figure>

<h3 id="4-效果图"><a href="#4-效果图" class="headerlink" title="4. 效果图"></a>4. 效果图</h3><pre><code>在浏览器中，可用 data:image/png;base64 ,查看base64图片,如
</code></pre>
<p><img src="/images/2020-06-17-18-39-53-image.png"></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>二维码</tag>
      </tags>
  </entry>
  <entry>
    <title>vim 学习笔记</title>
    <url>/2022/08/18/vim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="vim-学习笔记"><a href="#vim-学习笔记" class="headerlink" title="vim 学习笔记"></a>vim 学习笔记</h2><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>正常模式下进入插入模式几种方式：</p>
<p>a光标后插入，i当前光标插入，I行首插入，A行尾插入，o下行插入，O上行插入，s删除当前光标插入，S删除整行插入</p>
<ol>
<li>替换</li>
</ol>
<span id="more"></span>

<p>:% s&#x2F;需要替换的字符&#x2F;替换后的字符&#x2F;g(全局替换)</p>
<p>r 替换当前光标</p>
<p>R 替换模式</p>
<ol start="2">
<li>删除</li>
</ol>
<p>instrt 模式下：</p>
<p>ctrl+h 删除上一个字符</p>
<p>ctrl+u 删除整行</p>
<p>ctrl+w 删除上一个单词</p>
<p>正常模式可视化模式下：</p>
<p>x 删除当前字符</p>
<p>dd 删除整行</p>
<h2 id="快速切换-normal-和insert模式"><a href="#快速切换-normal-和insert模式" class="headerlink" title="快速切换 normal 和insert模式"></a>快速切换 normal 和insert模式</h2><p>CTRL+ [ 退出insert模式<br>gi 由normal模式进入最后编辑的位置</p>
<h2 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h2><p>使用<code>vim-plug</code>进行插件管理</p>
<p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fLo ~/.var/app/io.neovim.nvim/data/nvim/site/autoload/plug.vim \</span><br><span class="line">    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure>

<h2 id="键位映射"><a href="#键位映射" class="headerlink" title="键位映射"></a>键位映射</h2><table>
<thead>
<tr>
<th>&lt;k0&gt; - &lt;k9&gt;</th>
<th>小键盘 0 到 9</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;S-…&gt;</td>
<td>Shift＋键</td>
</tr>
<tr>
<td>&lt;C-…&gt;</td>
<td>Control＋键</td>
</tr>
<tr>
<td>&lt;M-…&gt;</td>
<td>Alt＋键 或 meta＋键</td>
</tr>
<tr>
<td>&lt;A-…&gt;</td>
<td>同 &lt;M-…&gt;</td>
</tr>
<tr>
<td>&lt;Esc&gt;</td>
<td>Escape 键</td>
</tr>
<tr>
<td>&lt;Space&gt;</td>
<td>插入空格</td>
</tr>
<tr>
<td>&lt;Tab&gt;</td>
<td>插入Tab</td>
</tr>
<tr>
<td>&lt;CR&gt;</td>
<td>等于&lt;Enter&gt;</td>
</tr>
<tr>
<td>&lt;Up&gt;</td>
<td>光标上移</td>
</tr>
<tr>
<td>&lt;Left&gt;</td>
<td>光标左移</td>
</tr>
<tr>
<td>&lt;Down&gt;</td>
<td>光标下移</td>
</tr>
<tr>
<td>&lt;Right&gt;</td>
<td>光标右移</td>
</tr>
</tbody></table>
<h2 id="我的vim配置"><a href="#我的vim配置" class="headerlink" title="我的vim配置"></a>我的vim配置</h2><p><a href="https://github.com/Fxuing/vimrc">GitHub - Fxuing&#x2F;vimrc: vimrc</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>spring mvc 动态添加 RequestMapping</title>
    <url>/2022/08/18/spring%20mvc%20%E5%8A%A8%E6%80%81%E6%B7%BB%E5%8A%A0%20RequestMapping/</url>
    <content><![CDATA[<h1 id="spring-mvc-动态添加-RequestMapping"><a href="#spring-mvc-动态添加-RequestMapping" class="headerlink" title="spring mvc 动态添加 RequestMapping"></a>spring mvc 动态添加 RequestMapping</h1><blockquote>
<p> <em>想法总是非常独特，有时候我们想在运行期间动态添加接口，那么就用到了动态添加 <code>RequestMapping</code>了</em></p>
</blockquote>
<span id="more"></span>

<p>首先我们得搞清楚 <code>springmvc</code> 请求原理，客户端发起请求，会先去 <code>RequestMappingHandlerMapping</code> 里面去查找，如果找不到，就 404 了。</p>
<p>明白了请求原理，那么动态添加就容易了。只需要往<code>RequestMappingHandlerMapping</code>里面添加一个请求映射就可以了。</p>
<p><code>AbstractHandlerMethodMapping</code> 提供了 <code>registerMapping</code> 和 <code>unregisterMapping</code> 方法</p>
<p>继承关系：</p>
<p> <code>RequestMappingHandlerMapping</code> -&gt; <code>RequestMappingInfoHandlerMapping</code> -&gt;  <code>AbstractHandlerMethodMapping</code></p>
<p>具体代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">RequestMappingHandlerMapping requestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> ResultData <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ResultData.success(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(&quot;get&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> ResultData <span class="title function_">addRequestMapper</span><span class="params">()</span> <span class="keyword">throws</span> IllegalAccessException, InstantiationException &#123;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt; entry = <span class="built_in">this</span>.getClass();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// hello 是方法名，ReflectionUtils 是 org.springframework.util 包</span></span><br><span class="line">    <span class="type">Method</span> <span class="variable">methodName</span> <span class="operator">=</span> ReflectionUtils.findMethod(entry, <span class="string">&quot;hello&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">PatternsRequestCondition</span> <span class="variable">patterns</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PatternsRequestCondition</span>(<span class="string">&quot;op/api/test/hello&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">RequestMethodsRequestCondition</span> <span class="variable">method</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RequestMethodsRequestCondition</span>(RequestMethod.POST);</span><br><span class="line">    <span class="type">RequestMappingInfo</span> <span class="variable">mappingInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RequestMappingInfo</span>(patterns, method, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">    requestMappingHandlerMapping.registerMapping(mappingInfo, entry.newInstance(), methodName);</span><br><span class="line">    <span class="keyword">return</span> ResultData.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>springmvc</tag>
      </tags>
  </entry>
  <entry>
    <title>基于AOP实现分页</title>
    <url>/2022/08/18/%E5%9F%BA%E4%BA%8EAOP%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5/</url>
    <content><![CDATA[<h3 id="基于AOP实现分页"><a href="#基于AOP实现分页" class="headerlink" title="基于AOP实现分页"></a>基于AOP实现分页</h3><p>最近在用<code>mybatis-plus</code>，真香~<br>和老大讨论的时候，他建议把分页参数剥离出来，因为分页和业务没有直接联系。开搞！</p>
<p>主要思路呢，就是使用<code>AOP</code>前置处理的时候，检查请求参数中是否包含了分页参数，如果包括了分页参数，将分页参数和条件查询参数设置到<code>ThreadLocal</code>里面，关于<code>ThreadLocal</code>的信息，请参考：<a href="https://zh.wikipedia.org/wiki/%E7%BA%BF%E7%A8%8B%E5%B1%80%E9%83%A8%E5%AD%98%E5%82%A8#Java">线程局部存储</a></p>
<p>下一步就是使用了，首先看看类图：</p>
<span id="more"></span>

<p><img src="https://s1.ax1x.com/2020/10/12/0RQ0iR.png" alt="0RQ0iR.png"></p>
<p>自定义一个<code>BaseService</code>继承<code>Mybatis-plus</code>的<code>Iservice</code>，<code>BaseServiceImpl</code>继承<code>ServiceImpl</code>,然后重写<code>list()</code>方法。</p>
<p>代码如下：</p>
<p>AOP：</p>
<p><img src="https://s1.ax1x.com/2020/10/12/0R1cUH.png" alt="0R1cUH.png"></p>
<blockquote>
<p>前置处理：是否包含分页参数和条件查询参数，有的话，就设置到 ThreadLocal 里面</p>
<p>后置处理：是否有分页，有分页的话，拼装分页返回数据</p>
</blockquote>
<p>BaseService:</p>
<p><img src="https://s1.ax1x.com/2020/10/12/0RlfnU.png" alt="0RlfnU.png"></p>
<p>BaseServiceImpl：</p>
<p><img src="https://s1.ax1x.com/2020/10/12/0RlzAH.png" alt="0RlzAH.png"></p>
<blockquote>
<p>设置条件目前只有3个：完全相等、模糊匹配、区间搜索。当然，可以根据自己需求，不断往里面加</p>
</blockquote>
<p>好了，来看下效果吧。</p>
<p>请求：</p>
<p>没有任何参数 &#x3D;&#x3D; 普通列表</p>
<p><img src="https://s1.ax1x.com/2020/10/12/0RJTln.png" alt="0RJTln.png"></p>
<p>有分页参数 &#x3D;&#x3D; 分页查询</p>
<p><img src="https://s1.ax1x.com/2020/10/12/0RYsNF.png" alt="0RYsNF.png"></p>
<p>有分页参数和条件参数 &#x3D;&#x3D; 条件搜索+分页查询</p>
<p><img src="https://s1.ax1x.com/2020/10/12/0Rw96H.png" alt="0Rw96H.png"></p>
<p>哦对，使用也非常简单，只需要:</p>
<p><img src="https://s1.ax1x.com/2020/10/12/0RtN5D.png" alt="0RtN5D.png"></p>
<p>仅供研究~ 目前还没有使用这种方式，因为这个是单表的哈哈哈，多表的，有时间再研究吧</p>
<p><img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=1403753716,1596817704&fm=26&gp=0.jpg" alt="0.png"></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>分页</tag>
        <tag>mybatis-plus</tag>
      </tags>
  </entry>
  <entry>
    <title>基金估值通知小助手</title>
    <url>/2022/08/18/%E5%9F%BA%E9%87%91%E4%BC%B0%E5%80%BC%E9%80%9A%E7%9F%A5%E5%B0%8F%E5%8A%A9%E6%89%8B/</url>
    <content><![CDATA[<h1 id="基金估值通知小助手"><a href="#基金估值通知小助手" class="headerlink" title="基金估值通知小助手"></a>基金估值通知小助手</h1><p>由于经常忘记基金，昨天突发奇想，可以爬取当前估值信息然后利用钉钉机器人+crontab发送通知，效果图</p>
<p><img src="https://s3.ax1x.com/2020/12/30/rLubxU.png" alt="效果图"></p>
<span id="more"></span>

<h2 id="获取估值信息"><a href="#获取估值信息" class="headerlink" title="获取估值信息"></a>获取估值信息</h2><p>首先需要获取估值信息，组装发送的内容的格式</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fundMsg</span><span class="params">()</span></span> <span class="type">string</span> &#123;</span><br><span class="line">    result := <span class="string">`</span></span><br><span class="line"><span class="string">## 基金估值情况</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">    c := colly.NewCollector(</span><br><span class="line">        colly.AllowedDomains(<span class="string">&quot;fund.eastmoney.com&quot;</span>, <span class="string">&quot;fundgz.1234567.com.cn&quot;</span>),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    c.OnRequest(<span class="function"><span class="keyword">func</span><span class="params">(r *colly.Request)</span></span> &#123;</span><br><span class="line">        <span class="comment">//fmt.Println(&quot;Visiting&quot;, r.URL.String())</span></span><br><span class="line">    &#125;)</span><br><span class="line">    c.OnResponse(<span class="function"><span class="keyword">func</span><span class="params">(response *colly.Response)</span></span> &#123;</span><br><span class="line">        res := <span class="type">string</span>(response.Body)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(res) &gt; <span class="number">10</span> &#123;</span><br><span class="line">            jsonStr := res[<span class="number">8</span> : <span class="built_in">len</span>(res)<span class="number">-2</span>]</span><br><span class="line">            <span class="keyword">var</span> mapResult <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">            <span class="keyword">if</span> err := json.Unmarshal([]<span class="type">byte</span>(jsonStr), &amp;mapResult); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                fmt.Println(err)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> inc <span class="type">string</span></span><br><span class="line">            gszzl := fmt.Sprintf(<span class="string">&quot;%s&quot;</span>, mapResult[<span class="string">&quot;gszzl&quot;</span>])</span><br><span class="line">            <span class="keyword">if</span> strings.Index(gszzl, <span class="string">&quot;-&quot;</span>) == <span class="number">-1</span> &#123;</span><br><span class="line">                inc = <span class="string">&quot;↑&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                inc = <span class="string">&quot;↓&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            result += fmt.Sprintf(<span class="string">&quot;* %s(%s)\t%s\t%s\n&quot;</span>, mapResult[<span class="string">&quot;name&quot;</span>], mapResult[<span class="string">&quot;fundcode&quot;</span>], mapResult[<span class="string">&quot;gszzl&quot;</span>], inc)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _, value := <span class="keyword">range</span> fundCodes &#123;</span><br><span class="line">        _ = c.Visit(<span class="string">&quot;http://fundgz.1234567.com.cn/js/&quot;</span> + value + <span class="string">&quot;.js&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="发送钉钉通知"><a href="#发送钉钉通知" class="headerlink" title="发送钉钉通知"></a>发送钉钉通知</h2><p>翻了下<a href="https://ding-doc.dingtalk.com/doc#/serverapi2/qf2nxq/d535db33">钉钉开发文档</a>，上面没有go的sdk,不过好在文档比较详细，主要是签名算法的生成比较麻烦 (主要原因是对go不熟悉) ,代码如下：</p>
<h3 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sign</span><span class="params">(timestamp <span class="type">int64</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">    signStr := strconv.FormatInt(timestamp, <span class="number">10</span>) + <span class="string">&quot;\n&quot;</span> + secret</span><br><span class="line">    h := hmac.New(sha256.New, []<span class="type">byte</span>(secret))</span><br><span class="line">    h.Write([]<span class="type">byte</span>(signStr))</span><br><span class="line">    <span class="keyword">return</span> url.QueryEscape(base64.StdEncoding.EncodeToString(h.Sum(<span class="literal">nil</span>)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="发送通知"><a href="#发送通知" class="headerlink" title="发送通知"></a>发送通知</h3><blockquote>
<p>这是发送markdown格式的通知，也可以发送其他格式的通知，具体参考<a href="https://ding-doc.dingtalk.com/doc#/serverapi2/qf2nxq/d535db33">钉钉开发文档</a></p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">dingTaskNotice</span><span class="params">(fundInfo <span class="keyword">func</span>()</span></span> <span class="type">string</span>) <span class="type">string</span> &#123;</span><br><span class="line">    timestamp := time.Now().UnixNano() / <span class="number">1e6</span></span><br><span class="line">    sendUrl := fmt.Sprintf(<span class="string">&quot;https://oapi.dingtalk.com/robot/send?access_token=%s&amp;timestamp=%d&amp;sign=%s&quot;</span>, accessToken, timestamp, sign(timestamp))</span><br><span class="line">    data := fmt.Sprintf(<span class="string">`&#123;</span></span><br><span class="line"><span class="string">        &quot;msgtype&quot;: &quot;markdown&quot;,</span></span><br><span class="line"><span class="string">        &quot;markdown&quot;: &#123;</span></span><br><span class="line"><span class="string">            &quot;title&quot;: &quot;基金估值&quot;,</span></span><br><span class="line"><span class="string">            &quot;text&quot;: &quot;%s&quot;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;`</span>, fundInfo())</span><br><span class="line">    buf := &amp;bytes.Buffer&#123;&#125;</span><br><span class="line">    err := binary.Write(buf, binary.BigEndian, []<span class="type">byte</span>(data))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    res, err := http.Post(sendUrl, <span class="string">&quot;application/json&quot;</span>, buf)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> res.Body.Close()</span><br><span class="line">    result, err := ioutil.ReadAll(res.Body)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">string</span>(result)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="打包成可执行文件"><a href="#打包成可执行文件" class="headerlink" title="打包成可执行文件"></a>打包成可执行文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">set</span> GOOS=linux</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go build</span></span><br></pre></td></tr></table></figure>

<h3 id="crontab调度"><a href="#crontab调度" class="headerlink" title="crontab调度"></a>crontab调度</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> +x fund_notice</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">crontab -e</span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可根据需求修改</span></span><br><span class="line">*/30 10-15 * * 1-5 /data/jobs/fund_notice</span><br><span class="line">:wq</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl restart crond.service</span></span><br></pre></td></tr></table></figure>

<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;bytes&quot;</span></span><br><span class="line">    <span class="string">&quot;crypto/hmac&quot;</span></span><br><span class="line">    <span class="string">&quot;crypto/sha256&quot;</span></span><br><span class="line">    <span class="string">&quot;encoding/base64&quot;</span></span><br><span class="line">    <span class="string">&quot;encoding/binary&quot;</span></span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/gocolly/colly&quot;</span></span><br><span class="line">    <span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">    <span class="string">&quot;net/url&quot;</span></span><br><span class="line">    <span class="string">&quot;strconv&quot;</span></span><br><span class="line">    <span class="string">&quot;strings&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    secret      = <span class="string">&quot;secret&quot;</span>       <span class="comment">// 替换</span></span><br><span class="line">    accessToken = <span class="string">&quot;accessToken&quot;</span>  <span class="comment">// 替换</span></span><br><span class="line">    fundCodes   = []<span class="type">string</span>&#123;</span><br><span class="line">        <span class="string">&quot;162605&quot;</span>, <span class="string">&quot;260108&quot;</span>, <span class="string">&quot;009898&quot;</span>, <span class="string">&quot;110011&quot;</span>, <span class="string">&quot;005368&quot;</span>, <span class="string">&quot;007824&quot;</span>, <span class="string">&quot;110022&quot;</span>, <span class="string">&quot;001632&quot;</span>,</span><br><span class="line">        <span class="string">&quot;001475&quot;</span>, <span class="string">&quot;501019&quot;</span>, <span class="string">&quot;001838&quot;</span>, <span class="string">&quot;320007&quot;</span>, <span class="string">&quot;519674&quot;</span>, <span class="string">&quot;002547&quot;</span>, <span class="string">&quot;006229&quot;</span>, <span class="string">&quot;004851&quot;</span>,</span><br><span class="line">        <span class="string">&quot;008086&quot;</span>, <span class="string">&quot;000136&quot;</span>, <span class="string">&quot;001063&quot;</span>, <span class="string">&quot;000408&quot;</span>, <span class="string">&quot;501058&quot;</span>, <span class="string">&quot;501057&quot;</span>, <span class="string">&quot;162703&quot;</span>, <span class="string">&quot;001983&quot;</span>,</span><br><span class="line">        <span class="string">&quot;161725&quot;</span>, <span class="string">&quot;501018&quot;</span>, <span class="string">&quot;040025&quot;</span>, <span class="string">&quot;005918&quot;</span>&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sign</span><span class="params">(timestamp <span class="type">int64</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">    signStr := strconv.FormatInt(timestamp, <span class="number">10</span>) + <span class="string">&quot;\n&quot;</span> + secret</span><br><span class="line">    h := hmac.New(sha256.New, []<span class="type">byte</span>(secret))</span><br><span class="line">    h.Write([]<span class="type">byte</span>(signStr))</span><br><span class="line">    <span class="keyword">return</span> url.QueryEscape(base64.StdEncoding.EncodeToString(h.Sum(<span class="literal">nil</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">dingTaskNotice</span><span class="params">(fundInfo <span class="keyword">func</span>()</span></span> <span class="type">string</span>) <span class="type">string</span> &#123;</span><br><span class="line">    timestamp := time.Now().UnixNano() / <span class="number">1e6</span></span><br><span class="line">    sendUrl := fmt.Sprintf(<span class="string">&quot;https://oapi.dingtalk.com/robot/send?access_token=%s&amp;timestamp=%d&amp;sign=%s&quot;</span>, accessToken, timestamp, sign(timestamp))</span><br><span class="line">    data := fmt.Sprintf(<span class="string">`&#123;</span></span><br><span class="line"><span class="string">        &quot;msgtype&quot;: &quot;markdown&quot;,</span></span><br><span class="line"><span class="string">        &quot;markdown&quot;: &#123;</span></span><br><span class="line"><span class="string">            &quot;title&quot;: &quot;基金估值&quot;,</span></span><br><span class="line"><span class="string">            &quot;text&quot;: &quot;%s&quot;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;`</span>, fundInfo())</span><br><span class="line">    buf := &amp;bytes.Buffer&#123;&#125;</span><br><span class="line">    err := binary.Write(buf, binary.BigEndian, []<span class="type">byte</span>(data))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    res, err := http.Post(sendUrl, <span class="string">&quot;application/json&quot;</span>, buf)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> res.Body.Close()</span><br><span class="line">    result, err := ioutil.ReadAll(res.Body)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">string</span>(result)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fundMsg</span><span class="params">()</span></span> <span class="type">string</span> &#123;</span><br><span class="line">    result := <span class="string">`</span></span><br><span class="line"><span class="string">## 基金估值情况</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">    <span class="keyword">var</span> funds []<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    c := colly.NewCollector(</span><br><span class="line">        colly.AllowedDomains(<span class="string">&quot;fund.eastmoney.com&quot;</span>, <span class="string">&quot;fundgz.1234567.com.cn&quot;</span>),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    c.OnRequest(<span class="function"><span class="keyword">func</span><span class="params">(r *colly.Request)</span></span> &#123;</span><br><span class="line">        <span class="comment">//fmt.Println(&quot;Visiting&quot;, r.URL.String())</span></span><br><span class="line">    &#125;)</span><br><span class="line">    c.OnResponse(<span class="function"><span class="keyword">func</span><span class="params">(response *colly.Response)</span></span> &#123;</span><br><span class="line">        res := <span class="type">string</span>(response.Body)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(res) &gt; <span class="number">10</span> &#123;</span><br><span class="line">            jsonStr := res[<span class="number">8</span> : <span class="built_in">len</span>(res)<span class="number">-2</span>]</span><br><span class="line">            <span class="keyword">var</span> mapResult <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">            <span class="keyword">if</span> err := json.Unmarshal([]<span class="type">byte</span>(jsonStr), &amp;mapResult); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                fmt.Println(err)</span><br><span class="line">            &#125;</span><br><span class="line">            funds = <span class="built_in">append</span>(funds, mapResult)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _, value := <span class="keyword">range</span> fundCodes &#123;</span><br><span class="line">        _ = c.Visit(<span class="string">&quot;http://fundgz.1234567.com.cn/js/&quot;</span> + value + <span class="string">&quot;.js&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(funds)</span><br><span class="line">    <span class="keyword">for</span> _, value := <span class="keyword">range</span> funds &#123;</span><br><span class="line">        <span class="keyword">var</span> inc <span class="type">string</span></span><br><span class="line">        gszzl := fmt.Sprintf(<span class="string">&quot;%s&quot;</span>, value[<span class="string">&quot;gszzl&quot;</span>])</span><br><span class="line">        <span class="keyword">if</span> strings.Index(gszzl, <span class="string">&quot;-&quot;</span>) == <span class="number">-1</span> &#123;</span><br><span class="line">            inc = <span class="string">&quot;↑&quot;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            inc = <span class="string">&quot;↓&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        result += fmt.Sprintf(<span class="string">&quot;* %s(%s)\t%s\t%s\n&quot;</span>, value[<span class="string">&quot;name&quot;</span>], value[<span class="string">&quot;fundcode&quot;</span>], value[<span class="string">&quot;gszzl&quot;</span>], inc)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sort</span><span class="params">(funds []<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> i, value1 := <span class="keyword">range</span> funds &#123;</span><br><span class="line">        gszzl1, _ := strconv.ParseFloat(fmt.Sprintf(<span class="string">&quot;%s&quot;</span>, value1[<span class="string">&quot;gszzl&quot;</span>]), <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">for</span> j, value2 := <span class="keyword">range</span> funds &#123;</span><br><span class="line">            gszzl2, _ := strconv.ParseFloat(fmt.Sprintf(<span class="string">&quot;%s&quot;</span>, value2[<span class="string">&quot;gszzl&quot;</span>]), <span class="number">10</span>)</span><br><span class="line">            <span class="keyword">if</span> gszzl1 &gt; gszzl2 &#123;</span><br><span class="line">                funds[i], funds[j] = funds[j], funds[i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//fmt.Println(fundMsg())</span></span><br><span class="line">    fmt.Println(dingTaskNotice(fundMsg))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>go</category>
      </categories>
      <tags>
        <tag>钉钉机器人通知</tag>
        <tag>go</tag>
        <tag>crontab</tag>
      </tags>
  </entry>
  <entry>
    <title>微信公众号模板消息推送</title>
    <url>/2022/08/18/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/</url>
    <content><![CDATA[<h2 id="微信公众号模板消息推送"><a href="#微信公众号模板消息推送" class="headerlink" title="微信公众号模板消息推送"></a>微信公众号模板消息推送</h2><p>前段时间，有个微信模板消息推送的需求，整理了下，做个笔记，仅供大家参考</p>
<p>首先我们查阅微信公众号官方文档，原链接：<a href="https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Template_Message_Interface.html#5">https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Template_Message_Interface.html#5</a></p>
<span id="more"></span>

<p>通过查阅官方文档，可以知道请求的json串是这个样子的：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">           <span class="attr">&quot;touser&quot;</span><span class="punctuation">:</span><span class="string">&quot;OPENID&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">           <span class="attr">&quot;template_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;ngqIpbwh8bUfcSsECmogfXcV14J0tQlEpBO27izEYtY&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">           <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;http://weixin.qq.com/download&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"></span><br><span class="line">           <span class="attr">&quot;miniprogram&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">             <span class="attr">&quot;appid&quot;</span><span class="punctuation">:</span><span class="string">&quot;xiaochengxuappid12345&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">             <span class="attr">&quot;pagepath&quot;</span><span class="punctuation">:</span><span class="string">&quot;index?foo=bar&quot;</span></span><br><span class="line"></span><br><span class="line">           <span class="punctuation">&#125;</span><span class="punctuation">,</span>          </span><br><span class="line"></span><br><span class="line">           <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">                   <span class="attr">&quot;first&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">                       <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;恭喜你购买成功！&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">                       <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span><span class="string">&quot;#173177&quot;</span></span><br><span class="line"></span><br><span class="line">                   <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">                   <span class="attr">&quot;keyword1&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">                       <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;巧克力&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">                       <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span><span class="string">&quot;#173177&quot;</span></span><br><span class="line"></span><br><span class="line">                   <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">                   <span class="attr">&quot;keyword2&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">                       <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;39.8元&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">                       <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span><span class="string">&quot;#173177&quot;</span></span><br><span class="line"></span><br><span class="line">                   <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">                   <span class="attr">&quot;keyword3&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">                       <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;2014年9月22日&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">                       <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span><span class="string">&quot;#173177&quot;</span></span><br><span class="line"></span><br><span class="line">                   <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">                   <span class="attr">&quot;remark&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">                       <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;欢迎再次购买！&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">                       <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span><span class="string">&quot;#173177&quot;</span></span><br><span class="line"></span><br><span class="line">                   <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">           <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">       <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>好了，到这里我们已经知道请求的数据格式了，下一步进行代码封装。</p>
<hr>
<p>首先创建一个微信推送的枚举：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Hou_fx</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/7/18 11:25</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 微信推送模板类型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">WeChatPushType</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * 微信推送模板</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    W001(<span class="string">&quot;eoq31s&quot;</span>, <span class="string">&quot;请通知&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W002(<span class="string">&quot;-t0H5M&quot;</span>, <span class="string">&quot;度评估结果通知&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W004(<span class="string">&quot;qavnP4&quot;</span>, <span class="string">&quot;名成功通知&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;keyword3&quot;</span>, <span class="string">&quot;keyword4&quot;</span>, <span class="string">&quot;keyword5&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W005(<span class="string">&quot;74R4tA&quot;</span>, <span class="string">&quot;功通知&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;keyword3&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W006(<span class="string">&quot;FQ2F68&quot;</span>, <span class="string">&quot;通提醒&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;time&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W007(<span class="string">&quot;oFDj8c&quot;</span>, <span class="string">&quot;败通知&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W008(<span class="string">&quot;SMtEKk&quot;</span>, <span class="string">&quot;款进度&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;keyword3&quot;</span>, <span class="string">&quot;keyword4&quot;</span>, <span class="string">&quot;keyword5&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W009(<span class="string">&quot;p0iLug&quot;</span>, <span class="string">&quot;醒&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W010(<span class="string">&quot;68nFn0&quot;</span>, <span class="string">&quot;作信息提醒&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;keyword3&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W011(<span class="string">&quot;iV2o9s&quot;</span>, <span class="string">&quot;理通知&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;appellationtime&quot;</span>, <span class="string">&quot;publicproductname&quot;</span>, <span class="string">&quot;apptype&quot;</span>, <span class="string">&quot;amount&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W012(<span class="string">&quot;evmZCw&quot;</span>, <span class="string">&quot;定通知&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;name1&quot;</span>, <span class="string">&quot;time&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W013(<span class="string">&quot;zoPrek&quot;</span>, <span class="string">&quot;醒&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W014(<span class="string">&quot;ExJ6z4&quot;</span>, <span class="string">&quot;态通知&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;keyword3&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W016(<span class="string">&quot;EuNOAc&quot;</span>, <span class="string">&quot;功通知&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;keyword3&quot;</span>, <span class="string">&quot;keyword4&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W017(<span class="string">&quot;obpfy8&quot;</span>, <span class="string">&quot;败提醒&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    W018(<span class="string">&quot;_okeDE&quot;</span>, <span class="string">&quot;功通知&quot;</span>, <span class="string">&quot;/app/wx/push&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;first&quot;</span>, <span class="string">&quot;keyword1&quot;</span>, <span class="string">&quot;keyword2&quot;</span>, <span class="string">&quot;remark&quot;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String templateId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String desc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] keys;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    WeChatPushType(String templateId, String desc, String url, String[] keys) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.desc = desc;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.templateId = templateId;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.url = url;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.keys = keys;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTemplateId</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> templateId;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDesc</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> desc;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String[] getKeys() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> keys;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUrl</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTemplateId</span><span class="params">(String templateId)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.templateId = templateId;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDesc</span><span class="params">(String desc)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.desc = desc;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUrl</span><span class="params">(String url)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.url = url;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setKeys</span><span class="params">(String[] keys)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.keys = keys;</span><br><span class="line"></span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>由于涉及到公众号模板id，在此将微信id修改了，数据仅供参考，以实际模板id为主</p>
<p>参数说明：</p>
<p>templateId：微信模板id</p>
<p>desc：描述</p>
<p>url：点击消息调整的链接</p>
<p>keys：微信模板对应的key</p>
<hr>
<p>第二步：创建一个微信推送的接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Hou_fx</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/7/22 19:09</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">WeChatPushService</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * 微信推送</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> openId</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> weChatPushType</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> urlParam</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServiceException</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">push</span><span class="params">(String openId, WeChatPushType weChatPushType, List list,String urlParam)</span> <span class="keyword">throws</span> ServiceException;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>第三步：实现微信推送接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Hou_fx</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/7/22 19:10</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WeChatPushServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">WeChatPushService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 微信推送接口 */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">PUSH_URL</span> <span class="operator">=</span> <span class="string">&quot;https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * 获取 access_token</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">ACCESS_TOKEN</span> <span class="operator">=</span> <span class="string">&quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAccessToken</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">requestUrl</span> <span class="operator">=</span> ACCESS_TOKEN.replace(<span class="string">&quot;APPID&quot;</span>, APPID).replace(<span class="string">&quot;APPSECRET&quot;</span>, APPSECRET);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> requestUrl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;weChatPlat.appid&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String APPID;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;weChatPlat.appsecret&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String APPSECRET;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;weChatPlat.appurl&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String appurl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">LOG</span> <span class="operator">=</span> LoggerFactory.getLogger(WeChatPushServiceImpl.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">push</span><span class="params">(String openId, WeChatPushType weChatPushType, List list,String ualParam)</span> <span class="keyword">throws</span> ServiceException &#123;</span><br><span class="line"></span><br><span class="line">        LOG.info(<span class="string">&quot;消息推送start&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">param</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">data</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line"></span><br><span class="line">        param.put(<span class="string">&quot;touser&quot;</span>, openId);</span><br><span class="line"></span><br><span class="line">        param.put(<span class="string">&quot;template_id&quot;</span>, weChatPushType.getTemplateId());</span><br><span class="line"></span><br><span class="line">        Optional.ofNullable(weChatPushType.getUrl()).ifPresent(o -&gt; param.put(<span class="string">&quot;url&quot;</span>, appurl + weChatPushType.getUrl() + ualParam));</span><br><span class="line"></span><br><span class="line">        <span class="type">Map</span> <span class="variable">push</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        list.forEach(f -&gt; &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">node</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line"></span><br><span class="line">            Optional.ofNullable(f.getValue()).ifPresent(o -&gt; node.put(<span class="string">&quot;value&quot;</span>, f.getValue()));</span><br><span class="line"></span><br><span class="line">            Optional.ofNullable(f.getColor()).ifPresent(o -&gt; node.put(<span class="string">&quot;color&quot;</span>, f.getColor()));</span><br><span class="line"></span><br><span class="line">            push.put(f.getKey(), node);</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模板数据 start</span></span><br><span class="line"></span><br><span class="line">        push.forEach(data::put);</span><br><span class="line"></span><br><span class="line">        param.put(<span class="string">&quot;data&quot;</span>, data);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模板数据 end</span></span><br><span class="line"></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">        url.append(PUSH_URL);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">requestUrl</span> <span class="operator">=</span> ACCESS_TOKEN.replace(<span class="string">&quot;APPID&quot;</span>, APPID).replace(<span class="string">&quot;APPSECRET&quot;</span>, APPSECRET);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">accessToken</span> <span class="operator">=</span> HttpClientUtil.getInstance().sendHttpsGet(requestUrl);</span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">ass</span> <span class="operator">=</span> JSONObject.parseObject(accessToken);</span><br><span class="line"></span><br><span class="line">        LOG.info(accessToken);</span><br><span class="line"></span><br><span class="line">        url.append(ass.get(<span class="string">&quot;access_token&quot;</span>));</span><br><span class="line"></span><br><span class="line">        LOG.info(param.toJSONString());</span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">res</span> <span class="operator">=</span> HttpClientUtil.httpsRequest(url.toString(), RequestMethod.POST.name(), param.toJSONString());</span><br><span class="line"></span><br><span class="line">        LOG.info(<span class="string">&quot;消息推送end：&#123;&#125;&quot;</span>, res);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>到这里就完成80%了，下面我们来开始发送模板消息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">List</span> <span class="variable">push</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">                    push = WeChatPushUtil.addPush(push, WeChatPushType.W005.getKeys()[<span class="number">0</span>], <span class="string">&quot;恭喜，您的企业账号已认证成功。&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    push = WeChatPushUtil.addPush(push, WeChatPushType.W005.getKeys()[<span class="number">1</span>], enterpriseInf.getContactsName(), <span class="string">&quot;#3A8ACA&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    push = WeChatPushUtil.addPush(push, WeChatPushType.W005.getKeys()[<span class="number">2</span>], enterpriseInf.getEnterpriseName(), <span class="string">&quot;#3A8ACA&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    push = WeChatPushUtil.addPush(push, WeChatPushType.W005.getKeys()[<span class="number">3</span>], String.valueOf(enterpriseInf.getContactsPhone()), <span class="string">&quot;#3A8ACA&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    push = WeChatPushUtil.addPush(push, WeChatPushType.W005.getKeys()[<span class="number">4</span>], <span class="string">&quot;\n点击可浏览更多融资产品信息，或免费体验一键智能匹配服务。&quot;</span>, <span class="string">&quot;#FF0000&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    weChatPushService.push(enterpriseInf.getOpenId(), WeChatPushType.W005, push,<span class="string">&quot;?redirectType=homepage&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>…发现少了个List<Push>代码没贴出来，，Push代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Hou_fx</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/7/17 18:52</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Push</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">6579398731585901064L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String value;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String key;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String color;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Push</span><span class="params">(String value, String key)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.key = key;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参数说明：</p>
<p>value：模板的值</p>
<p>key： 微信模板的key</p>
<p>color：值的颜色</p>
<hr>
<p>1024啦，大家节日快乐。</p>
<p>END</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>微信开发</tag>
      </tags>
  </entry>
  <entry>
    <title>微信服务端开发必备技能——内网穿透</title>
    <url>/2022/08/18/%E5%BE%AE%E4%BF%A1%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD%E2%80%94%E2%80%94%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&amp;emsp;&amp;emsp; 我们在做微信服务端开发的时候，经常会碰到需要调试，但是微信回调必须要外网环境，这时候只能打到服务器上了；那有没有什么办法是可以直接在本地调试呢？内网穿透可以让我们在本地进行调试。</p>
<span id="more"></span>
<h2 id="什么是内网穿透"><a href="#什么是内网穿透" class="headerlink" title="什么是内网穿透"></a>什么是内网穿透</h2><blockquote>
<p>内网穿透，也即 NAT 穿透，进行 NAT 穿透是为了使具有某一个特定源 IP 地址和源端口号的数据包不被 NAT 设备屏蔽而正确路由到内网主机。</p>
</blockquote>
<h2 id="如何让微信访问到本地服务？"><a href="#如何让微信访问到本地服务？" class="headerlink" title="如何让微信访问到本地服务？"></a>如何让微信访问到本地服务？</h2><h3 id="ngrok"><a href="#ngrok" class="headerlink" title="ngrok"></a>ngrok</h3><p>优点：免费！免费！免费！<br>缺点：域名会变化，带宽较慢<br>官网：<a href="https://ngrok.com/">ngrok</a></p>
<h3 id="ssh-nginx"><a href="#ssh-nginx" class="headerlink" title="ssh+nginx"></a>ssh+nginx</h3><p>缺点：需要自己的域名&#x2F;服务器，不稳定<br>优点：域名固定，带宽随服务器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -fCNR 服务器端口:本地ip:本地端口 -o ServerAliveInterval=60 服务器用户@服务器ip -p 22</span><br></pre></td></tr></table></figure>
<p>nginx 添加转发</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">location /api &#123;</span><br><span class="line">¦   proxy_pass http://10.0.12.9:6677/api;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>配置完后重启一下nginx，应该就可以了~</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>微信开发</tag>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>生成微信小程序码</title>
    <url>/2022/08/18/%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%A0%81/</url>
    <content><![CDATA[<h1 id="生成微信小程序码"><a href="#生成微信小程序码" class="headerlink" title="生成微信小程序码"></a>生成微信小程序码</h1><pre><code>通过查阅微信官方文档，得知获取微信小程序码有两个步骤：
</code></pre>
<p> <a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.getUnlimited.html">wxacode.getUnlimited | 微信开放文档</a></p>
<span id="more"></span>

<h2 id="获取-AccessToken"><a href="#获取-AccessToken" class="headerlink" title="获取 AccessToken"></a>获取 AccessToken</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Supplier&lt;String&gt; <span class="title function_">getAccessToken</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> () -&gt; &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">cacheAccess</span> <span class="operator">=</span> redisTemplate.opsForValue().get(PLA_WX_ACCESS_PREFIX);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(cacheAccess)) &#123;</span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">result</span> <span class="operator">=</span> WechatHttpsRequest.httpsRequest(ACCESS_TOKEN_URL, <span class="string">&quot;POST&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">                BizErrors.GET_WX_ACCESS_ERROR.ifNull(result.get(<span class="string">&quot;access_token&quot;</span>));</span><br><span class="line">                <span class="type">String</span> <span class="variable">accessToken</span> <span class="operator">=</span> String.valueOf(result.get(<span class="string">&quot;access_token&quot;</span>));</span><br><span class="line">                redisTemplate.opsForValue().set(PLA_WX_ACCESS_PREFIX, accessToken, EXPIRES_IN, TimeUnit.SECONDS);</span><br><span class="line">                <span class="keyword">return</span> accessToken;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> cacheAccess;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="获取小程序码"><a href="#获取小程序码" class="headerlink" title="获取小程序码"></a>获取小程序码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> requestUrl</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> requestBody</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> BufferedImage</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span>: Hou_fx</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Date</span>: 2019/11/20 下午3:48</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>: 生成微信小程序二维码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title function_">createQRCode</span><span class="params">(String requestUrl, String requestBody)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(requestUrl);<span class="comment">// 创建httpPost</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">StringEntity</span> <span class="variable">stringEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringEntity</span>(requestBody, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            stringEntity.setContentType(<span class="string">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class="line">            httpPost.setEntity(stringEntity);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sendHttpPost(httpPost);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> BufferedImage <span class="title function_">sendHttpPost</span><span class="params">(HttpPost httpPost)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        BufferedImage responseContent;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">             <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> httpClient.execute(httpPost)</span><br><span class="line">        ) &#123;</span><br><span class="line">            <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">            httpPost.setConfig(requestConfig);</span><br><span class="line">            <span class="type">String</span> <span class="variable">resultContent</span> <span class="operator">=</span> <span class="string">&quot;json&quot;</span>;</span><br><span class="line">            HeaderElement[] elements = entity.getContentType().getElements();</span><br><span class="line">            <span class="keyword">for</span> (HeaderElement ele : Arrays.asList(elements)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (String.valueOf(ele).contains(resultContent)) &#123;</span><br><span class="line">                    log.error(EntityUtils.toString(entity, <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">                    <span class="type">JSONObject</span> <span class="variable">res</span> <span class="operator">=</span> JSONObject.parseObject(EntityUtils.toString(entity, <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BizException</span>(res.getString(<span class="string">&quot;errCode&quot;</span>), res.getString(<span class="string">&quot;errMsg&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            responseContent = ImageIO.read(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(EntityUtils.toByteArray(entity)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> responseContent;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<pre><code>返回的是 BufferedImage ,可根据需求转换其他类型
</code></pre>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://user-gold-cdn.xitu.io/2020/6/18/172c655634583dcc?w=1575&h=822&f=png&s=189638" alt="UTOOLS1592465384263.png"></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>微信开发</tag>
      </tags>
  </entry>
  <entry>
    <title>(转)正则表达式全集</title>
    <url>/2022/08/18/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<p><a href="https://tool.oschina.net/uploads/apidocs/jquery/regexp.html">转自：正则表达式手册</a></p>
<span id="more"></span>

<table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>\</td>
<td>将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“<code>n</code>”匹配字符“<code>n</code>”。“<code>\n</code>”匹配一个换行符。串行“<code>\\</code>”匹配“<code>\</code>”而“<code>\(</code>”则匹配“<code>(</code>”。</td>
</tr>
<tr>
<td>^</td>
<td>匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“<code>\n</code>”或“<code>\r</code>”之后的位置。</td>
</tr>
<tr>
<td>$</td>
<td>匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“<code>\n</code>”或“<code>\r</code>”之前的位置。</td>
</tr>
<tr>
<td>*</td>
<td>匹配前面的子表达式零次或多次。例如，zo<em>能匹配“<code>z</code>”以及“<code>zoo</code>”。</em>等价于{0,}。</td>
</tr>
<tr>
<td>+</td>
<td>匹配前面的子表达式一次或多次。例如，“<code>zo+</code>”能匹配“<code>zo</code>”以及“<code>zoo</code>”，但不能匹配“<code>z</code>”。+等价于{1,}。</td>
</tr>
<tr>
<td>?</td>
<td>匹配前面的子表达式零次或一次。例如，“<code>do(es)?</code>”可以匹配“<code>does</code>”或“<code>does</code>”中的“<code>do</code>”。?等价于{0,1}。</td>
</tr>
<tr>
<td>{n}</td>
<td>n是一个非负整数。匹配确定的n次。例如，“<code>o&#123;2&#125;</code>”不能匹配“<code>Bob</code>”中的“<code>o</code>”，但是能匹配“<code>food</code>”中的两个o。</td>
</tr>
<tr>
<td>{n,}</td>
<td>n是一个非负整数。至少匹配n次。例如，“<code>o&#123;2,&#125;</code>”不能匹配“<code>Bob</code>”中的“<code>o</code>”，但能匹配“<code>foooood</code>”中的所有o。“<code>o&#123;1,&#125;</code>”等价于“<code>o+</code>”。“<code>o&#123;0,&#125;</code>”则等价于“<code>o*</code>”。</td>
</tr>
<tr>
<td>{n,m}</td>
<td>m和n均为非负整数，其中n&lt;&#x3D;m。最少匹配n次且最多匹配m次。例如，“<code>o&#123;1,3&#125;</code>”将匹配“<code>fooooood</code>”中的前三个o。“<code>o&#123;0,1&#125;</code>”等价于“<code>o?</code>”。请注意在逗号和两个数之间不能有空格。</td>
</tr>
<tr>
<td>?</td>
<td>当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“<code>oooo</code>”，“<code>o+?</code>”将匹配单个“<code>o</code>”，而“<code>o+</code>”将匹配所有“<code>o</code>”。</td>
</tr>
<tr>
<td>.</td>
<td>匹配除“<code>\``n</code>”之外的任何单个字符。要匹配包括“<code>\``n</code>”在内的任何字符，请使用像“<code>(.|\n)</code>”的模式。</td>
</tr>
<tr>
<td>(pattern)</td>
<td>匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“<code>\(</code>”或“<code>\)</code>”。</td>
</tr>
<tr>
<td>(?:pattern)</td>
<td>匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“<code>(|)</code>”来组合一个模式的各个部分是很有用。例如“<code>industr(?:y|ies)</code>”就是一个比“<code>industry|industries</code>”更简略的表达式。</td>
</tr>
<tr>
<td>(?&#x3D;pattern)</td>
<td>正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“<code>Windows(?=95|98|NT|2000)</code>”能匹配“<code>Windows2000</code>”中的“<code>Windows</code>”，但不能匹配“<code>Windows3.1</code>”中的“<code>Windows</code>”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>
</tr>
<tr>
<td>(?!pattern)</td>
<td>正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“<code>Windows(?!95|98|NT|2000)</code>”能匹配“<code>Windows3.1</code>”中的“<code>Windows</code>”，但不能匹配“<code>Windows2000</code>”中的“<code>Windows</code>”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始</td>
</tr>
<tr>
<td>(?&lt;&#x3D;pattern)</td>
<td>反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“<code>(?&lt;=95|98|NT|2000)Windows</code>”能匹配“<code>2000Windows</code>”中的“<code>Windows</code>”，但不能匹配“<code>3.1Windows</code>”中的“<code>Windows</code>”。</td>
</tr>
<tr>
<td>(?&lt;!pattern)</td>
<td>反向否定预查，与正向否定预查类拟，只是方向相反。例如“<code>(?&lt;!95|98|NT|2000)Windows</code>”能匹配“<code>3.1Windows</code>”中的“<code>Windows</code>”，但不能匹配“<code>2000Windows</code>”中的“<code>Windows</code>”。</td>
</tr>
<tr>
<td>x|y</td>
<td>匹配x或y。例如，“<code>z|food</code>”能匹配“<code>z</code>”或“<code>food</code>”。“<code>(z|f)ood</code>”则匹配“<code>zood</code>”或“<code>food</code>”。</td>
</tr>
<tr>
<td>[xyz]</td>
<td>字符集合。匹配所包含的任意一个字符。例如，“<code>[abc]</code>”可以匹配“<code>plain</code>”中的“<code>a</code>”。</td>
</tr>
<tr>
<td>[^xyz]</td>
<td>负值字符集合。匹配未包含的任意字符。例如，“<code>[^abc]</code>”可以匹配“<code>plain</code>”中的“<code>p</code>”。</td>
</tr>
<tr>
<td>[a-z]</td>
<td>字符范围。匹配指定范围内的任意字符。例如，“<code>[a-z]</code>”可以匹配“<code>a</code>”到“<code>z</code>”范围内的任意小写字母字符。</td>
</tr>
<tr>
<td>[^a-z]</td>
<td>负值字符范围。匹配任何不在指定范围内的任意字符。例如，“<code>[^a-z]</code>”可以匹配任何不在“<code>a</code>”到“<code>z</code>”范围内的任意字符。</td>
</tr>
<tr>
<td>\b</td>
<td>匹配一个单词边界，也就是指单词和空格间的位置。例如，“<code>er\b</code>”可以匹配“<code>never</code>”中的“<code>er</code>”，但不能匹配“<code>verb</code>”中的“<code>er</code>”。</td>
</tr>
<tr>
<td>\B</td>
<td>匹配非单词边界。“<code>er\B</code>”能匹配“<code>verb</code>”中的“<code>er</code>”，但不能匹配“<code>never</code>”中的“<code>er</code>”。</td>
</tr>
<tr>
<td>\cx</td>
<td>匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“<code>c</code>”字符。</td>
</tr>
<tr>
<td>\d</td>
<td>匹配一个数字字符。等价于[0-9]。</td>
</tr>
<tr>
<td>\D</td>
<td>匹配一个非数字字符。等价于[^0-9]。</td>
</tr>
<tr>
<td>\f</td>
<td>匹配一个换页符。等价于\x0c和\cL。</td>
</tr>
<tr>
<td>\n</td>
<td>匹配一个换行符。等价于\x0a和\cJ。</td>
</tr>
<tr>
<td>\r</td>
<td>匹配一个回车符。等价于\x0d和\cM。</td>
</tr>
<tr>
<td>\s</td>
<td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。</td>
</tr>
<tr>
<td>\S</td>
<td>匹配任何非空白字符。等价于[^ \f\n\r\t\v]。</td>
</tr>
<tr>
<td>\t</td>
<td>匹配一个制表符。等价于\x09和\cI。</td>
</tr>
<tr>
<td>\v</td>
<td>匹配一个垂直制表符。等价于\x0b和\cK。</td>
</tr>
<tr>
<td>\w</td>
<td>匹配包括下划线的任何单词字符。等价于“<code>[A-Za-z0-9_]</code>”。</td>
</tr>
<tr>
<td>\W</td>
<td>匹配任何非单词字符。等价于“<code>[^A-Za-z0-9_]</code>”。</td>
</tr>
<tr>
<td>\xn</td>
<td>匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“<code>\x41</code>”匹配“<code>A</code>”。“<code>\x041</code>”则等价于“<code>\x04&amp;1</code>”。正则表达式中可以使用ASCII编码。.</td>
</tr>
<tr>
<td>\num</td>
<td>匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“<code>(.)\1</code>”匹配两个连续的相同字符。</td>
</tr>
<tr>
<td>\n</td>
<td>标识一个八进制转义值或一个向后引用。如果\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。</td>
</tr>
<tr>
<td>\nm</td>
<td>标识一个八进制转义值或一个向后引用。如果\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则\nm将匹配八进制转义值nm。</td>
</tr>
<tr>
<td>\nml</td>
<td>如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。</td>
</tr>
<tr>
<td>\un</td>
<td>匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\u00A9匹配版权符号（©）。</td>
</tr>
</tbody></table>
<h2 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式"></a>常用正则表达式</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>用户名</td>
<td>&#x2F;^[a-z0-9_-]{3,16}$&#x2F;</td>
</tr>
<tr>
<td>密码</td>
<td>&#x2F;^[a-z0-9_-]{6,18}$&#x2F;</td>
</tr>
<tr>
<td>十六进制值</td>
<td>&#x2F;^#?([a-f0-9]{6}|[a-f0-9]{3})$&#x2F;</td>
</tr>
<tr>
<td>电子邮箱</td>
<td>&#x2F;^([a-z0-9_.-]+)@([\da-z.-]+).([a-z.]{2,6})$&#x2F;<br>&#x2F;^[a-z\d]+(.[a-z\d]+)*@(<a href="-%5B%5Cda-z%5D">\da-z</a>?)+(.{1,2}[a-z]+)+$&#x2F;</td>
</tr>
<tr>
<td>URL</td>
<td>&#x2F;^(https?://)?([\da-z.-]+).([a-z.]{2,6})([/\w .-]*)*/?$&#x2F;</td>
</tr>
<tr>
<td>IP 地址</td>
<td>&#x2F;((2[0-4]\d|25[0-5]|[01]?\d\d?).){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)&#x2F;<br>&#x2F;^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$&#x2F;</td>
</tr>
<tr>
<td>HTML 标签</td>
<td>&#x2F;^&lt;([a-z]+)([^&lt;]+)<em>(?:&gt;(.</em>)&lt;/\1&gt;|\s+/&gt;)$&#x2F;</td>
</tr>
<tr>
<td>删除代码\注释</td>
<td>(?&lt;!http:|\S)&#x2F;&#x2F;.*$</td>
</tr>
<tr>
<td>Unicode编码中的汉字范围</td>
<td>&#x2F;^[\u2E80-\u9FFF]+$&#x2F;</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>目录下的文件如何合并成一个文件？</title>
    <url>/2022/08/18/%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E5%A6%82%E4%BD%95%E5%90%88%E5%B9%B6%E6%88%90%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="目录下的文件如何合并成一个文件？"><a href="#目录下的文件如何合并成一个文件？" class="headerlink" title="目录下的文件如何合并成一个文件？"></a>目录下的文件如何合并成一个文件？</h1><blockquote>
<p>我们做过软著的同学，应该就知道有个提供源码的环节，提供源码的话，我们肯定不会一个个文件的去COPY，这个时候，就需要一点小技巧了，可以省掉工作量</p>
</blockquote>
<span id="more"></span>


<h2 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h2><ul>
<li>递归列出目录下的文件</li>
<li>写入到某个文件里</li>
</ul>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">touch</span> mergefile.sh</span><br><span class="line">$ <span class="built_in">chmod</span> +x mergefile.sh</span><br></pre></td></tr></table></figure>

<blockquote>
<p>mergefile.sh</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">PWD=<span class="string">&quot;源码目录&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;file merering ......&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `find <span class="variable">$PWD</span>`</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">    <span class="keyword">if</span> [[ ! -d <span class="string">&quot;<span class="variable">$file</span>&quot;</span>  ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">cat</span> <span class="variable">$file</span> &gt;&gt; output.txt</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;OK&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>文件处理</tag>
      </tags>
  </entry>
  <entry>
    <title>简单代码生成工具</title>
    <url>/2022/08/18/%E7%AE%80%E5%8D%95%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="代码生成"><a href="#代码生成" class="headerlink" title="代码生成"></a>代码生成</h2><p>我们做项目的时候，经常会碰到写一些基础的增删改查代码，所以就写了个代码生成的工具，可根据自己的需求编写相应的代码模板。</p>
<span id="more"></span>

<p><strong>大致思路</strong></p>
<blockquote>
<p>查询表信息，通过字段类型映射出 java 类型，然后通过模板生成 java 文件</p>
</blockquote>
<h3 id="1-查看表信息"><a href="#1-查看表信息" class="headerlink" title="1. 查看表信息"></a>1. 查看表信息</h3><p>通过执行 <code>SHOW FULL COLUMNS FROM table_name</code>可以看到表的详细信息</p>
<p><img src="https://s1.ax1x.com/2020/09/08/wQoBHe.png" alt="wQoBHe.png"></p>
<p>所关注的字段有3个：<code>FieId</code>,<code>Type</code>,<code>Comment</code> 字段、类型、备注，有了这三个字段后，就可以进行下一步操作了，类型映射生成实体类。</p>
<h3 id="2-生成实体类"><a href="#2-生成实体类" class="headerlink" title="2. 生成实体类"></a>2. 生成实体类</h3><p>首先把 <code>jdbcType</code>转为<code>javaType</code>,把类型、字段名、备注等需要用到的信息放入集合中，在模板操作的时候，遍历信息，即可生成想要的结果了。</p>
<ol>
<li>设置表名、包名等信息</li>
<li>查询表详细信息（第一步）</li>
<li>属性操作（下划线转驼峰、jdbcType 转 javaType、备注等)</li>
<li>操作模板，生成文件</li>
</ol>
<p>代码就不贴了，断断续续的，文末提供 源码地址</p>
<h3 id="3-mapper"><a href="#3-mapper" class="headerlink" title="3. mapper"></a>3. mapper</h3><ol>
<li><p>设置 表名</p>
</li>
<li><p>设置 字段名 与 属性名 对应</p>
</li>
<li><p>设置 DAO 命名空间</p>
</li>
<li><p>操作模板、生成文件</p>
</li>
</ol>
<h3 id="4-生成dao-x2F-service-x2F-impl-x2F-controller"><a href="#4-生成dao-x2F-service-x2F-impl-x2F-controller" class="headerlink" title="4. 生成dao&#x2F;service&#x2F;impl&#x2F;controller"></a>4. 生成dao&#x2F;service&#x2F;impl&#x2F;controller</h3><ol>
<li><p>还是要设置包名、</p>
</li>
<li><p>然后就直接操作模板了，好像。。。挺简单的</p>
</li>
</ol>
<blockquote>
<p>话说回来，中间还有很多细节，比如 配置 CRUD，包导入，生成文件到指定包，是指定生成文件，还是指定输出流到前端预览呢…等等等…最后贴个效果图吧</p>
</blockquote>
<p>生成的文件目录：</p>
<p><img src="https://s1.ax1x.com/2020/09/08/wQXVSJ.png" alt="wQXVSJ.png"><img src="https://s1.ax1x.com/2020/09/08/wQXmO1.png" alt="wQXmO1.png"></p>
<p>实体类：</p>
<p><img src="https://s1.ax1x.com/2020/09/08/wQXop4.png" alt="wQXop4.png"></p>
<p>dao:</p>
<p><img src="https://s1.ax1x.com/2020/09/08/wQXHXR.png" alt="wQXHXR.png"></p>
<p>service:</p>
<p><img src="https://s1.ax1x.com/2020/09/08/wQXL0x.png" alt="wQXL0x.png"></p>
<p>impl:</p>
<p><img src="https://s1.ax1x.com/2020/09/08/wQXO76.png" alt="wQXO76.png"></p>
<p>controller:</p>
<p><img src="https://s1.ax1x.com/2020/09/08/wQjp1H.png" alt="wQjp1H.png"></p>
<blockquote>
<p>对了，模板用的是 <code>Thymeleaf</code> 。</p>
</blockquote>
<p>最后附上项目地址，欢迎探讨：</p>
<p><a href="https://github.com/Fxuing/code-generate">https://github.com/Fxuing/code-generate</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>代码生成</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里开源项目——EasyExcel使用</title>
    <url>/2022/08/18/%E9%98%BF%E9%87%8C%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E2%80%94%E2%80%94EasyExcel%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="EasyExcel使用"><a href="#EasyExcel使用" class="headerlink" title="EasyExcel使用"></a>EasyExcel使用</h1><p>EasyExcel是一个基于Java的简单、省内存的读写Excel的开源项目。在尽可能节约内存的情况下支持读写百M的Excel。</p>
<span id="more"></span>

<p>官方文档写的非常详细：<a href="https://www.yuque.com/easyexcel/doc/easyexcel">EasyExcel · 语雀</a></p>
<p>GitHub：<a href="https://github.com/alibaba/easyexcel">https://github.com/alibaba/easyexcel</a></p>
<hr>
<h2 id="指定列动态导出"><a href="#指定列动态导出" class="headerlink" title="指定列动态导出"></a>指定列动态导出</h2><p>在导出的基础上，添加导出字段，可实现动态导出数据</p>
<p>根据官方文档，有两种导出方式，一种需要手动关闭文件流，一种自动关闭文件流，在此我选择自动关闭文件流的方式。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ExcelWriterBuilder</span> <span class="variable">excelBuilder</span> <span class="operator">=</span> EasyExcel.write(response.getOutputStream(), ExcelUserDTO.class);</span><br><span class="line">excelBuilder = includeColumnFiledName(includeColumnFiledNames, excelBuilder);</span><br><span class="line">excelBuilder.sheet(<span class="string">&quot;sheet&quot;</span>).doWrite(data());</span><br></pre></td></tr></table></figure>

<p>指定列动态导出关键代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> ExcelWriterBuilder <span class="title function_">includeColumnFiledName</span><span class="params">(Set&lt;String&gt; includeColumnFiledNames, ExcelWriterBuilder excelBuilder)</span> &#123;</span><br><span class="line">    excelBuilder = excelBuilder.registerWriteHandler(<span class="keyword">new</span> <span class="title class_">LongestMatchColumnWidthStyleStrategy</span>());</span><br><span class="line">    <span class="keyword">if</span> (includeColumnFiledNames.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        excelBuilder = excelBuilder.includeColumnFiledNames(includeColumnFiledNames);</span><br><span class="line">    &#125;</span><br><span class="line">    excelBuilder = excelBuilder.registerWriteHandler(<span class="keyword">new</span> <span class="title class_">LongestMatchColumnWidthStyleStrategy</span>());</span><br><span class="line">    <span class="keyword">return</span> excelBuilder;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="复杂表头制作"><a href="#复杂表头制作" class="headerlink" title="复杂表头制作"></a>复杂表头制作</h2><p>EasyExcel复杂表制作也非常简单，使用<code>@ExcelProperty</code>注解</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>集成钉钉机器人消息通知</title>
    <url>/2022/08/18/%E9%9B%86%E6%88%90%E9%92%89%E9%92%89%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5/</url>
    <content><![CDATA[<h2 id="集成钉钉机器人消息通知"><a href="#集成钉钉机器人消息通知" class="headerlink" title="集成钉钉机器人消息通知"></a>集成钉钉机器人消息通知</h2><p>集成消息发送呢，还是比较常见的，比如说，异常的时候，发送钉钉通知，艾特到某个人，可以点击查看详情；还可以集成调度，在某个时间段，执行特定的操作，比如每天早上8点发送今日热点新闻，9点提醒你上班打卡啊，11点半提醒你点外卖啊。。。等等等，只要你能想到的固定场景，都可以让机器人帮你执行了。</p>
<span id="more"></span>

<h3 id="集成步骤"><a href="#集成步骤" class="headerlink" title="集成步骤"></a>集成步骤</h3><h4 id="添加机器人"><a href="#添加机器人" class="headerlink" title="添加机器人"></a>添加机器人</h4><p>打开群设置 -&gt; 添加智能群助手 -&gt;  添加机器人 -&gt; 添加自定义机器人</p>
<p><img src="https://s1.ax1x.com/2020/10/26/BnToo4.png" alt="BnToo4.png"></p>
<h4 id="设置安全方式"><a href="#设置安全方式" class="headerlink" title="设置安全方式"></a>设置安全方式</h4><p><img src="https://s1.ax1x.com/2020/10/26/BnTOQx.png" alt="BnTOQx.png"></p>
<h4 id="java-sdk-集成"><a href="#java-sdk-集成" class="headerlink" title="java sdk 集成"></a>java sdk 集成</h4><h5 id="引入maven"><a href="#引入maven" class="headerlink" title="引入maven"></a>引入maven</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>alibaba-dingtalk-service-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.jms<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>sonatype-nexus-staging<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Sonatype Nexus Staging<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/service/local/staging/deploy/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="请求封装"><a href="#请求封装" class="headerlink" title="请求封装"></a>请求封装</h5><p>目前只封装了两种，大家可根据实际需求，自行添加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020.10.23 16:26</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">RobotType</span> &#123;</span><br><span class="line">    <span class="comment">/** Robot类型 */</span></span><br><span class="line">    TEXT(<span class="string">&quot;text&quot;</span>),</span><br><span class="line">    LINK(<span class="string">&quot;link&quot;</span>),</span><br><span class="line">    ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    RobotType(String value)&#123;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> String value;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setValue</span><span class="params">(String value)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020.10.23 16:26</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RobotConfig</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CHARSET_NAME</span> <span class="operator">=</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ALGORITHM</span> <span class="operator">=</span> <span class="string">&quot;HmacSHA256&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">SECRET</span> <span class="operator">=</span> <span class="string">&quot;安全设置里面的秘钥复制过来&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">SERVER_URL</span> <span class="operator">=</span> <span class="string">&quot;安全设置里面的webhook复制过来&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020.10.23 16:25</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RobotNotice</span> <span class="keyword">extends</span> <span class="title class_">RobotConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> RobotStruct <span class="title function_">getInstance</span><span class="params">(RobotType robotType)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RobotStruct</span>(robotType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">RobotStruct</span> &#123;</span><br><span class="line">        <span class="keyword">protected</span> OapiRobotSendRequest request;</span><br><span class="line">        <span class="keyword">private</span> <span class="title function_">RobotStruct</span><span class="params">(RobotType robotType)</span> &#123;</span><br><span class="line">            <span class="type">OapiRobotSendRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OapiRobotSendRequest</span>();</span><br><span class="line">            request.setMsgtype(robotType.getValue());</span><br><span class="line">            <span class="built_in">this</span>.request = request;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> DingTalkClient <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> NoSuchAlgorithmException, InvalidKeyException, UnsupportedEncodingException &#123;</span><br><span class="line">            <span class="type">Long</span> <span class="variable">timestamp</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">serverUrl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(SERVER_URL);</span><br><span class="line">            serverUrl.append(<span class="string">&quot;&amp;&quot;</span>).append(<span class="string">&quot;timestamp=&quot;</span>).append(timestamp);</span><br><span class="line">            serverUrl.append(<span class="string">&quot;&amp;&quot;</span>).append(<span class="string">&quot;sign=&quot;</span>).append(sign(timestamp));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DefaultDingTalkClient</span>(serverUrl.toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String <span class="title function_">sign</span><span class="params">(Long timestamp)</span> <span class="keyword">throws</span> NoSuchAlgorithmException, UnsupportedEncodingException, InvalidKeyException &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">stringToSign</span> <span class="operator">=</span> timestamp + <span class="string">&quot;\n&quot;</span> + SECRET;</span><br><span class="line">            <span class="type">Mac</span> <span class="variable">mac</span> <span class="operator">=</span> Mac.getInstance(ALGORITHM);</span><br><span class="line">            mac.init(<span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(SECRET.getBytes(CHARSET_NAME), ALGORITHM));</span><br><span class="line">            <span class="type">byte</span>[] signData = mac.doFinal(stringToSign.getBytes(CHARSET_NAME));</span><br><span class="line">            <span class="keyword">return</span> URLEncoder.encode(<span class="keyword">new</span> <span class="title class_">String</span>(Base64.encodeBase64(signData)), CHARSET_NAME);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> RobotStruct <span class="title function_">setSendContent</span><span class="params">(String content)</span>&#123;</span><br><span class="line">            OapiRobotSendRequest.<span class="type">Text</span> <span class="variable">text</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OapiRobotSendRequest</span>.Text();</span><br><span class="line">            text.setContent(content);</span><br><span class="line">            request.setText(text);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> RobotStruct <span class="title function_">setSendContent</span><span class="params">(OapiRobotSendRequest.Link link)</span> &#123;</span><br><span class="line">            request.setLink(link);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> RobotStruct <span class="title function_">setAt</span><span class="params">(List&lt;String&gt; phone)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (phone.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                OapiRobotSendRequest.<span class="type">At</span> <span class="variable">at</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OapiRobotSendRequest</span>.At();</span><br><span class="line">                at.setAtMobiles(phone);</span><br><span class="line">                request.setAt(at);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Optional&lt;OapiRobotSendResponse&gt; <span class="title function_">execute</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> Optional.ofNullable(<span class="built_in">this</span>.init().execute(request));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ApiException | NoSuchAlgorithmException | InvalidKeyException | UnsupportedEncodingException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Optional.empty();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>好了，下面测试下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hou_fx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020.10.23 19:41</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NoticeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        RobotNotice.getInstance(RobotType.TEXT).setSendContent(<span class="string">&quot;测试文本消息&quot;</span>).setAt(Arrays.asList(<span class="string">&quot;17788889999&quot;</span>)).execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>按照上面的步骤来的话，测试应该已经通过了。</p>
<h5 id="优化点"><a href="#优化点" class="headerlink" title="优化点"></a>优化点</h5><p>通过看钉钉官方文档，可以看到，每个请求的实例，都需要几个步骤：设置发送类型初始化请求、设置发送内容、设置艾特的人、最后再执行。那么我们可以把上述代码改为工厂模式，根据不同的发送类型，构建不同的实例。</p>
<p>OK，先这样吧，等需求搞完了有时间再优化下（如果我还记得）</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>钉钉机器人通知</tag>
      </tags>
  </entry>
</search>
